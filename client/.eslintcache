[{"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\index.js":"1","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\GlobalStyles.js":"2","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\App.js":"3","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\reportWebVitals.js":"4","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\index.js":"5","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes.js":"6","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\NavbarContext.js":"7","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\CustomClearanceContext.js":"8","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\SidebarContext.js":"9","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\Home.jsx":"10","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\ProductList.jsx":"11","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Breadcrumb.jsx":"12","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\actions.js":"13","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\index.js":"14","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\store.jsx":"15","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\index.jsx":"16","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\index.jsx":"17","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\sidebar.js":"18","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\index.jsx":"19","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\index.jsx":"20","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\settings.js":"21","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\customClearance.js":"22","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\countries.js":"23","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\containers.js":"24","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\apiEndpoints.js":"25","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\cities.js":"26","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ShoppingCart\\index.js":"27","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Loader.js":"28","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useQueryBuilder.js":"29","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\api\\useQuery.js":"30","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\MainSearch.jsx":"31","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Alert.jsx":"32","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\FilterBox.jsx":"33","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Paginate.jsx":"34","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\InfoTable.jsx":"35","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ShoppingCart.js":"36","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Check.js":"37","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\CreditCard.js":"38","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\reducer.jsx":"39","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\currencies.js":"40","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\MultiSelect\\index.jsx":"41","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\index.jsx":"42","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\admin.js":"43","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\agent.js":"44","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\alertInfos.js":"45","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\index.js":"46","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\CartDetails.jsx":"47","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\ConfirmDetails.jsx":"48","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\PaymentDetails.jsx":"49","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ViewDocuments.jsx":"50","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\UploadDocuments.jsx":"51","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Modal\\Modal.jsx":"52","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\assets\\icons\\index.js":"53","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\text.js":"54","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\UserProfileMenu.jsx":"55","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\Navbar.jsx":"56","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Counter\\index.jsx":"57","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\Header.jsx":"58","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\index.jsx":"59","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\card.js":"60","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\ShoppingCard.jsx":"61","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\InfoCard.jsx":"62","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\ContainerCard.jsx":"63","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\checkbox.js":"64","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\input.js":"65","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\select.js":"66","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\button.js":"67","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Collapse\\index.jsx":"68","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\InStock.jsx":"69","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\Selection.jsx":"70","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\BookingList.jsx":"71","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\AwaitingConfirmation.jsx":"72","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useOutsideAlerter.js":"73","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Popup.jsx":"74","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\DragAndDrop\\DropZone\\DropZone.js":"75","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\index.js":"76","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\index.jsx":"77","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\index.jsx":"78","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\index.jsx":"79","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Dropdown.jsx":"80","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Logo.jsx":"81","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\MobileSidebar.jsx":"82","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\DesktopSidebar.jsx":"83","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\style.js":"84","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\assets\\images\\index.js":"85","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\DataTable.jsx":"86","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\ContainerTable.jsx":"87","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\BookingTable.jsx":"88","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ListDocuments.jsx":"89","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ChooseContainers.jsx":"90","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\style.js":"91","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\OverflowTooltip.jsx":"92","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\SalesCurveContainer.jsx":"93","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\InfoCardContainer.jsx":"94","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\InfoTableContainer.jsx":"95","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\InfoCardContainer.jsx":"96","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\ManageAgentsTable.jsx":"97","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\PieContainer.jsx":"98","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\Tooltip.jsx":"99","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarContent.jsx":"100","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\DataTable.jsx":"101","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ViewChosenContainers.jsx":"102","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\DataTable.jsx":"103","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Curve.jsx":"104","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarIcons.jsx":"105","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarSubmenu.jsx":"106","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\index.js":"107","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\ViewChosenContainersTable.jsx":"108","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Pie.jsx":"109","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Bar.jsx":"110","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useMediaQuery.js":"111","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\utils\\functions.js":"112","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\utils\\api.js":"113","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\AssignDepots.jsx":"114","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\AssignDepotsGrid.js":"115","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\style.js":"116","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\ViewContainersDetails.jsx":"117","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\carousel.jsx":"118","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\Carousel.jsx":"119"},{"size":899,"mtime":1625739004765,"results":"120","hashOfConfig":"121"},{"size":153,"mtime":1625739000846,"results":"122","hashOfConfig":"121"},{"size":6281,"mtime":1627654408655,"results":"123","hashOfConfig":"121"},{"size":377,"mtime":1625739004914,"results":"124","hashOfConfig":"121"},{"size":579,"mtime":1625824200216,"results":"125","hashOfConfig":"121"},{"size":1281,"mtime":1625739004939,"results":"126","hashOfConfig":"121"},{"size":780,"mtime":1625739004705,"results":"127","hashOfConfig":"121"},{"size":611,"mtime":1625739004691,"results":"128","hashOfConfig":"121"},{"size":685,"mtime":1625739004715,"results":"129","hashOfConfig":"121"},{"size":4280,"mtime":1630674108449,"results":"130","hashOfConfig":"121"},{"size":9327,"mtime":1631517127485,"results":"131","hashOfConfig":"121"},{"size":1188,"mtime":1625739001913,"results":"132","hashOfConfig":"121"},{"size":5268,"mtime":1631517089821,"results":"133","hashOfConfig":"121"},{"size":167,"mtime":1625739003483,"results":"134","hashOfConfig":"121"},{"size":445,"mtime":1625739004898,"results":"135","hashOfConfig":"121"},{"size":1118,"mtime":1631094857459,"results":"136","hashOfConfig":"121"},{"size":3121,"mtime":1631094682140,"results":"137","hashOfConfig":"121"},{"size":1026,"mtime":1625739005011,"results":"138","hashOfConfig":"121"},{"size":2768,"mtime":1627658308699,"results":"139","hashOfConfig":"121"},{"size":3346,"mtime":1625739005800,"results":"140","hashOfConfig":"121"},{"size":79,"mtime":1625739003843,"results":"141","hashOfConfig":"121"},{"size":1856,"mtime":1629744987060,"results":"142","hashOfConfig":"121"},{"size":181,"mtime":1625739003760,"results":"143","hashOfConfig":"121"},{"size":736,"mtime":1628793088008,"results":"144","hashOfConfig":"121"},{"size":1315,"mtime":1631262032769,"results":"145","hashOfConfig":"121"},{"size":130,"mtime":1625739003639,"results":"146","hashOfConfig":"121"},{"size":8689,"mtime":1629740372777,"results":"147","hashOfConfig":"121"},{"size":503,"mtime":1625739004348,"results":"148","hashOfConfig":"121"},{"size":923,"mtime":1625739004178,"results":"149","hashOfConfig":"121"},{"size":311,"mtime":1628178010917,"results":"150","hashOfConfig":"121"},{"size":2681,"mtime":1628171599667,"results":"151","hashOfConfig":"121"},{"size":3677,"mtime":1631202123006,"results":"152","hashOfConfig":"121"},{"size":2357,"mtime":1631094488522,"results":"153","hashOfConfig":"121"},{"size":547,"mtime":1625739002573,"results":"154","hashOfConfig":"121"},{"size":19476,"mtime":1630938609283,"results":"155","hashOfConfig":"121"},{"size":1612,"mtime":1625739002619,"results":"156","hashOfConfig":"121"},{"size":903,"mtime":1625739002196,"results":"157","hashOfConfig":"121"},{"size":1077,"mtime":1625739002260,"results":"158","hashOfConfig":"121"},{"size":3456,"mtime":1631100698573,"results":"159","hashOfConfig":"121"},{"size":105,"mtime":1625739003791,"results":"160","hashOfConfig":"121"},{"size":1421,"mtime":1628592300647,"results":"161","hashOfConfig":"121"},{"size":179,"mtime":1625739002054,"results":"162","hashOfConfig":"121"},{"size":720,"mtime":1627646340840,"results":"163","hashOfConfig":"121"},{"size":1213,"mtime":1625739005000,"results":"164","hashOfConfig":"121"},{"size":1324,"mtime":1625739003599,"results":"165","hashOfConfig":"121"},{"size":335,"mtime":1625739004520,"results":"166","hashOfConfig":"121"},{"size":19502,"mtime":1630572252977,"results":"167","hashOfConfig":"121"},{"size":9772,"mtime":1631263012386,"results":"168","hashOfConfig":"121"},{"size":5322,"mtime":1625739005774,"results":"169","hashOfConfig":"121"},{"size":1768,"mtime":1625739003559,"results":"170","hashOfConfig":"121"},{"size":1468,"mtime":1630676387336,"results":"171","hashOfConfig":"121"},{"size":4255,"mtime":1629896715326,"results":"172","hashOfConfig":"121"},{"size":3518,"mtime":1625739001655,"results":"173","hashOfConfig":"121"},{"size":805,"mtime":1625739004623,"results":"174","hashOfConfig":"121"},{"size":7294,"mtime":1631101784744,"results":"175","hashOfConfig":"121"},{"size":3839,"mtime":1631101705097,"results":"176","hashOfConfig":"121"},{"size":935,"mtime":1625739002239,"results":"177","hashOfConfig":"121"},{"size":3354,"mtime":1626356193992,"results":"178","hashOfConfig":"121"},{"size":262,"mtime":1625739002887,"results":"179","hashOfConfig":"121"},{"size":538,"mtime":1631097667493,"results":"180","hashOfConfig":"121"},{"size":2271,"mtime":1625739002046,"results":"181","hashOfConfig":"121"},{"size":1651,"mtime":1631094447844,"results":"182","hashOfConfig":"121"},{"size":20026,"mtime":1630913415092,"results":"183","hashOfConfig":"121"},{"size":1116,"mtime":1625739004497,"results":"184","hashOfConfig":"121"},{"size":576,"mtime":1631206410362,"results":"185","hashOfConfig":"121"},{"size":433,"mtime":1631206471415,"results":"186","hashOfConfig":"121"},{"size":2350,"mtime":1630655413321,"results":"187","hashOfConfig":"121"},{"size":186,"mtime":1625739002228,"results":"188","hashOfConfig":"121"},{"size":9650,"mtime":1631264146514,"results":"189","hashOfConfig":"121"},{"size":3936,"mtime":1631365339687,"results":"190","hashOfConfig":"121"},{"size":20819,"mtime":1631274006735,"results":"191","hashOfConfig":"121"},{"size":13305,"mtime":1631202334993,"results":"192","hashOfConfig":"121"},{"size":578,"mtime":1625739004065,"results":"193","hashOfConfig":"121"},{"size":1808,"mtime":1629896352870,"results":"194","hashOfConfig":"121"},{"size":19987,"mtime":1631086949764,"results":"195","hashOfConfig":"121"},{"size":120,"mtime":1625739004443,"results":"196","hashOfConfig":"121"},{"size":8135,"mtime":1628782488213,"results":"197","hashOfConfig":"121"},{"size":491,"mtime":1631093280933,"results":"198","hashOfConfig":"121"},{"size":1723,"mtime":1631104693640,"results":"199","hashOfConfig":"121"},{"size":1855,"mtime":1628262596158,"results":"200","hashOfConfig":"121"},{"size":5019,"mtime":1625739002461,"results":"201","hashOfConfig":"121"},{"size":836,"mtime":1630600449560,"results":"202","hashOfConfig":"121"},{"size":403,"mtime":1630600531977,"results":"203","hashOfConfig":"121"},{"size":533,"mtime":1628584903307,"results":"204","hashOfConfig":"121"},{"size":124,"mtime":1625739001725,"results":"205","hashOfConfig":"121"},{"size":10899,"mtime":1631206602769,"results":"206","hashOfConfig":"121"},{"size":5941,"mtime":1631261623732,"results":"207","hashOfConfig":"121"},{"size":14720,"mtime":1631260048014,"results":"208","hashOfConfig":"121"},{"size":3363,"mtime":1630599850549,"results":"209","hashOfConfig":"121"},{"size":13979,"mtime":1631365589818,"results":"210","hashOfConfig":"121"},{"size":689,"mtime":1628782780243,"results":"211","hashOfConfig":"121"},{"size":1303,"mtime":1625739004425,"results":"212","hashOfConfig":"121"},{"size":2366,"mtime":1631105072409,"results":"213","hashOfConfig":"121"},{"size":4566,"mtime":1631095520291,"results":"214","hashOfConfig":"121"},{"size":1660,"mtime":1631098450856,"results":"215","hashOfConfig":"121"},{"size":3758,"mtime":1631103893124,"results":"216","hashOfConfig":"121"},{"size":9091,"mtime":1628788477410,"results":"217","hashOfConfig":"121"},{"size":2462,"mtime":1631099544360,"results":"218","hashOfConfig":"121"},{"size":715,"mtime":1625739004437,"results":"219","hashOfConfig":"121"},{"size":1702,"mtime":1630600376801,"results":"220","hashOfConfig":"121"},{"size":10950,"mtime":1631260179043,"results":"221","hashOfConfig":"121"},{"size":10207,"mtime":1631373630151,"results":"222","hashOfConfig":"121"},{"size":10965,"mtime":1628788477410,"results":"223","hashOfConfig":"121"},{"size":1886,"mtime":1625739002116,"results":"224","hashOfConfig":"121"},{"size":197,"mtime":1625739002829,"results":"225","hashOfConfig":"121"},{"size":2277,"mtime":1627380483529,"results":"226","hashOfConfig":"121"},{"size":111,"mtime":1625739002177,"results":"227","hashOfConfig":"121"},{"size":4891,"mtime":1631368436333,"results":"228","hashOfConfig":"121"},{"size":1453,"mtime":1625739002155,"results":"229","hashOfConfig":"121"},{"size":3500,"mtime":1625739002089,"results":"230","hashOfConfig":"121"},{"size":589,"mtime":1625739003968,"results":"231","hashOfConfig":"121"},{"size":127,"mtime":1625739004658,"results":"232","hashOfConfig":"121"},{"size":414,"mtime":1625841012786,"results":"233","hashOfConfig":"121"},{"size":17928,"mtime":1630514571938,"results":"234","hashOfConfig":"121"},{"size":27612,"mtime":1630575189978,"results":"235","hashOfConfig":"121"},{"size":6813,"mtime":1628792236308,"results":"236","hashOfConfig":"121"},{"size":4730,"mtime":1630344165386,"results":"237","hashOfConfig":"121"},{"size":1437,"mtime":1630577948238,"results":"238","hashOfConfig":"121"},{"size":987,"mtime":1630585981087,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"1vbz9fj",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"242"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"242"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"242"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"242"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"242"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"242"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"242"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"242"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"242"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"242"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"242"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"242"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"242"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"242"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"242"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"242"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"242"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"242"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"242"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"242"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"242"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"242"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"242"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"242"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"242"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"242"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"242"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"242"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"242"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"242"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"242"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"242"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"242"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"242"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"242"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"242"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"242"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"242"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"242"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"242"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"242"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"242"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"520"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"302"},"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\index.js",[],["526","527"],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\GlobalStyles.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\App.js",["528","529","530","531"],"import React, { Suspense, lazy } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./common/components/Topbar\";\r\nimport { SidebarProvider } from \"./context/SidebarContext\";\r\nimport { NavbarProvider } from \"./context/NavbarContext\";\r\nimport { CustomClearanceProvider } from \"./context/CustomClearanceContext\";\r\nimport AgentLayout from './views/Agent';\r\nimport AdminLayout from './views/Admin';\r\nimport routes from \"./routes\";\r\n\r\nconst Home = lazy(() => import(/* webpackPrefetch: true */ './views/Buyer/Home'));\r\nconst BuyerHome = lazy(() => import(/* webpackPrefetch: true */ './views/Buyer/Home/Home'));\r\nconst ProductList = lazy(() => import(/* webpackPrefetch: true */ './views/Buyer/ProductList'));\r\nconst Checkout = lazy(() => import(/* webpackPrefetch: true */ './views/Buyer/Checkout'));\r\n// const AgentLayout = lazy(() => import(/* webpackPrefetch: true */ './views/Agent'));\r\n// const AdminLayout = lazy(() => import(/* webpackPrefetch: true */ './views/Admin'));\r\nconst Breadcrumb = lazy(() => import(/* webpackPrefetch: true */ './common/components/Breadcrumb'));\r\n// import MyErrorBoundary from './MyErrorBoundary';\r\n\r\n// const AppRoute = ({ component: Component }) => (\r\n//   <Route render={props => (\r\n//       <Navbar>\r\n//        <Component {...props} />\r\n//       </Navbar>\r\n//   )} />\r\n// )\r\n\r\nfunction WithNavbar() {\r\n  return (\r\n    <div> Page not found </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n\r\n  // const queryString = window.location.search;\r\n  // const urlParams = new URLSearchParams(queryString);\r\n  // const signin = urlParams.get('signin')\r\n\r\n  // if (signin !== null)\r\n  //   var SignedIn = (signin === 'true');\r\n  // else SignedIn = 'false'\r\n\r\n  const items = [\r\n    { to: '/', label: 'Home' },\r\n    { to: '/currentOrders', label: 'Current Orders' },\r\n    { to: '/productList', label: 'Products' },\r\n    { to: '/productList/checkout', label: 'Checkout' },\r\n  ]\r\n\r\n  // console.log(\"NavbarProvider in App\", NavbarProvider)\r\n  // console.log('routes', routes)\r\n  return (\r\n\r\n    <div className=\"app\">\r\n      {/* <MyErrorBoundary> */}\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {/* <Breadcrumb>\r\n          {items.map(({ to, label }) => (\r\n            <Link key={to} to={to}>\r\n              {label}\r\n            </Link>\r\n          ))}\r\n        </Breadcrumb> */}\r\n\r\n        <Router>\r\n          <Switch>\r\n            {/* {routes.map(({ path, Component, provider }, key) => (\r\n              <Route exact path={path} key={key} render={(props) => (\r\n                <>\r\n                  {provider.map((prov) => {\r\n                    return prov\r\n                  })}\r\n                  <Navbar history={history} />\r\n                  <Component {...props} />\r\n                  {provider.map((prov) => {\r\n                    return \"/\" + prov\r\n                  })}\r\n                </>\r\n              )} />\r\n            ))} */}\r\n            <Route exact path=\"/\"\r\n              render={props => {\r\n                return (\r\n                  <NavbarProvider>\r\n                    <Navbar />\r\n                    <Home {...props} />\r\n                  </NavbarProvider>\r\n                )\r\n              }\r\n              }\r\n            />\r\n            <Route exact path=\"/currentorders\"\r\n              render={props => {\r\n                const crumbs =\r\n                  [\r\n                    {\r\n                      title: \"Home\",\r\n                      link: \"/\",\r\n                    },\r\n                    {\r\n                      title: \"Current Orders\",\r\n                      link: \"/currentorders\",\r\n                    }\r\n                  ];\r\n                return (\r\n                  <CustomClearanceProvider><NavbarProvider>\r\n                    <Navbar />\r\n                    <BuyerHome crumbs={crumbs} {...props} />\r\n                  </NavbarProvider></CustomClearanceProvider>\r\n                )\r\n              }\r\n              }\r\n            />\r\n            <Route exact path=\"/productList\"\r\n              render={props => {\r\n                const crumbs =\r\n                  [\r\n                    {\r\n                      title: \"Home\",\r\n                      link: \"/\",\r\n                    },\r\n                    {\r\n                      title: \"Products\",\r\n                    },\r\n                  ];\r\n                return (\r\n                  <NavbarProvider>\r\n                    <Navbar history={history} />\r\n                    <ProductList crumbs={crumbs} {...props} />\r\n                  </NavbarProvider>\r\n                )\r\n              }\r\n              }\r\n            />\r\n            <Route exact path=\"/productList/checkout\"\r\n              render={props => {\r\n                const crumbs =\r\n                  [\r\n                    {\r\n                      title: \"Home\",\r\n                      link: \"/\",\r\n                    },\r\n                    {\r\n                      title: \"Products\",\r\n                      link: \"/productList?page=1\"\r\n                    },\r\n                    {\r\n                      title: \"Checkout\",\r\n                    }\r\n                  ];\r\n                return (\r\n                  <NavbarProvider>\r\n                    <Navbar />\r\n                    <Checkout crumbs={crumbs} {...props} />\r\n                  </NavbarProvider>\r\n                )\r\n              }\r\n              }\r\n            />\r\n            <Route path=\"/admin\"\r\n              render={(props) => (\r\n                <SidebarProvider>\r\n                  <AdminLayout {...props} />\r\n                </SidebarProvider>\r\n              )}\r\n            />\r\n            <Route path=\"/agent\"\r\n              render={(props) => (\r\n                <SidebarProvider>\r\n                  <AgentLayout {...props} />\r\n                </SidebarProvider>\r\n              )}\r\n            />\r\n            <Route component={WithNavbar} /> {/* No match route */}\r\n          </Switch>\r\n        </Router>\r\n      </Suspense>\r\n      {/* </MyErrorBoundary> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n/*** for later on usage */\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes.js",["532"],"// import { Home, BuyerHome, ProductList, Checkout, AdminLayout, AgentLayout } from \"./Components/index\";\r\nimport Home from \"./views/Buyer/Home\";\r\nimport BuyerHome from \"./views/Buyer/Home/Home\";\r\nimport ProductList from \"./views/Buyer/ProductList\";\r\nimport Checkout from \"./views/Buyer/Checkout\";\r\nimport AdminLayout from \"./views/Admin\";\r\nimport AgentLayout from \"./views/Agent\";\r\n\r\nimport { SidebarProvider } from \"./context/SidebarContext\";\r\nimport { NavbarProvider } from \"./context/NavbarContext\";\r\nimport { CustomClearanceProvider } from \"./context/CustomClearanceContext\";\r\n\r\nexport default [\r\n    { path: \"/\", name: \"Home\", provider: [NavbarProvider], Component: Home },\r\n    { path: \"/currentorders\", name: \"Current Orders\", provider: [CustomClearanceProvider, NavbarProvider], Component: BuyerHome },\r\n    {\r\n        path: \"/productList\",\r\n        name: \"Products\",\r\n        provider: [NavbarProvider],\r\n        Component: ProductList\r\n    },\r\n    { path: \"/productList/checkout\", name: \"Checkout\", provider: [NavbarProvider], Component: Checkout },\r\n    { path: \"/admin\", name: \"Admin\", provider: [SidebarProvider, NavbarProvider], Component: AdminLayout },\r\n    { path: \"/agent\", name: \"Agent\", provider: [SidebarProvider, NavbarProvider], Component: AgentLayout }\r\n];","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\NavbarContext.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\CustomClearanceContext.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\context\\SidebarContext.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\Home.jsx",["533","534","535","536","537","538"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserRole, getOrderSum } from \"../../../redux\";\r\nimport MainSearch from \"./MainSearch\";\r\nimport InfoTable from \"../../../common/components/Table/InfoTable\";\r\nimport Breadcrumb from \"../../../common/components/Breadcrumb\";\r\nimport Alert from \"../../../common/components/Alert\";\r\nimport { CustomClearanceContext } from \"../../../context/CustomClearanceContext\";\r\nimport { CustomClearanceData } from \"../../../common/constants/customClearance\";\r\nimport axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst HomePage = tw.section`\r\nmt-16 p-6\r\nmx-auto relative\r\n`;\r\n\r\nconst HomepageTitle = tw.h1`\r\ntext-primary-blue \r\nfont-medium\r\ntext-24\r\n`;\r\n\r\nconst CurrentOrdersSection = tw.section`\r\nh-auto bg-white \r\npt-4 px-10 mt-10 \r\nshadow-md`;\r\n\r\nconst SearchContainersSection = tw.section`\r\npt-10\r\n`;\r\n\r\nconst HomepageSubTitle = tw.h1`\r\ntext-primary-blue font-medium\r\ntext-23 leading-none pb-3\r\n`;\r\n\r\nfunction BuyerHome(props) {\r\n  const {\r\n    // getUserRole,\r\n    userInfo,\r\n    loggedInUser,\r\n    cartData,\r\n    getOrderSum,\r\n  } = props;\r\n  const [alert, setAlert] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const { customClearanceDocument } = useContext(CustomClearanceContext);\r\n\r\n  // const { data, isLoading, isError } = useQuery(\r\n  //   `${containerEndpoints.products}?${filterQuery}`\r\n  // );\r\n\r\n  useEffect(() => {\r\n    // if (props.cartData && props.cartData.status !== 'closed') {\r\n    if (loggedInUser) {\r\n      const filterOrderQuery =\r\n        `customerUid=` + loggedInUser.uid + `&status=booked`;\r\n      // props.getOrderSum(filterOrderQuery)\r\n      // getOrderSum(filterOrderQuery)\r\n      axios.get(\"/orders?\" + filterOrderQuery).then((results) => {\r\n        console.log(\"home /orders results.data\", results.data);\r\n        setOrders(results.data);\r\n      });\r\n    }\r\n  }, [loggedInUser, getOrderSum]);\r\n\r\n  // console.log(\"home orderData\", props.orderData);\r\n  // console.log(\"home cartData\", props.cartData);\r\n  // console.log(\"home userInfo\", props.userInfo);\r\n  // console.log(\"home orders\", orders);\r\n\r\n  let properties = {\r\n    type: \"warning\",\r\n    message: \"Upload your customs clearance documents for order #1290\",\r\n    autoClose: false,\r\n    // dismissTime : 10000\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n    setAlert,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage>\r\n        <Breadcrumb crumbs={props.crumbs} />\r\n        {/* <Alert {...(customClearanceDocument === \"\" ? properties : {})} /> */}\r\n        <HomepageTitle>\r\n          Welcome,{\" \"}\r\n          {Object.keys(userInfo).length > 0 &&\r\n            userInfo.firstName + \" \" + userInfo.lastName}{\" \"}\r\n          !\r\n        </HomepageTitle>\r\n        <CurrentOrdersSection>\r\n          <HomepageSubTitle>Your Current Orders</HomepageSubTitle>\r\n          <InfoTable\r\n            headerColor=\"#ffffff\"\r\n            borderBottom=\"1px solid #d1d1d1\"\r\n            coloredText={true}\r\n            headers={[\r\n              \"Order #\",\r\n              \"Containers\",\r\n              \"Payment\",\r\n              \"Documents\",\r\n              \"Pending Actions\",\r\n              \"Date of Booking\",\r\n              \"Documents\",\r\n            ]}\r\n            order={[\r\n              \"orderId\",\r\n              \"bookingStatus\",\r\n              \"paymentStatus\",\r\n              \"documentStatus\",\r\n              \"pendingActions\",\r\n              \"bookingDate\",\r\n              \"button\",\r\n            ]}\r\n            data={orders}\r\n          />\r\n        </CurrentOrdersSection>\r\n        <SearchContainersSection>\r\n          <HomepageSubTitle tw=\"pb-10\">Search Containers</HomepageSubTitle>\r\n          <MainSearch />\r\n        </SearchContainersSection>\r\n      </HomePage>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n    userRole: state.userRole,\r\n    userInfo: state.userInfo,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getUserRole,\r\n  getOrderSum,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyerHome);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\ProductList.jsx",["539","540","541","542","543","544","545","546","547","548"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails\r\n} from '../../redux';\r\nimport Breadcrumb from \"../../common/components/Breadcrumb\";\r\nimport FilterBox from \"../../common/components/FilterBox\";\r\nimport MultiSelect from \"../../common/components/MultiSelect\";\r\n// import ShoppingCart from \"../../common/components/ShoppingCart/index\";\r\nimport { ContainerCard } from \"../../common/components/Card\";\r\nimport Paginate from \"../../common/components/Paginate\";\r\nimport Loader from \"../../common/styles/Loader\";\r\nimport useQuery from \"../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../common/hooks/useQueryBuilder\";\r\nimport { NavbarContext } from \"../../context/NavbarContext\";\r\nimport countriesData from \"../../common/constants/countries\";\r\n// import citiesData from \"../../common/constants/cities\";\r\nimport containersData from \"../../common/constants/containers\";\r\nimport { containerEndpoints, orderEndpoints } from \"../../common/constants/apiEndpoints\";\r\nimport { PRODUCTS_PAGE_SIZE } from \"../../common/constants/settings\";\r\nimport tw from \"twin.macro\";\r\n\r\n/** Styles **/\r\nconst Wrapper = tw.section`\r\nmt-16 p-6 \r\nmx-auto max-w-full`;\r\n\r\nconst FilterBoxWrapper = tw.div``;\r\n\r\nconst ProductListLayout = tw.div`\r\ngrid md:grid-cols-productListLayout xl:space-x-12 lg:space-x-4`;\r\n\r\nconst ProductListing = tw.div`\r\nmt-9 md:mt-0\r\nflex flex-col`;\r\n\r\nconst MultiSelectWrapper = tw.div`\r\ngrid grid-cols-multiSelect gap-x-4 mb-10`;\r\n\r\nconst ContainercardWrapper = tw.div`\r\nflex flex-col space-y-6 relative h-full`;\r\n\r\nconst Label = tw.label`\r\ntext-15 text-primary-blue font-medium`;\r\n\r\nconst PaginationWrapper = tw.div`\r\nflex justify-end mt-5`;\r\n\r\nconst Error = tw.div`\r\ntext-xs text-primary-gray font-light italic`;\r\n\r\nconst sections = [\r\n  {\r\n    title: \"productType\",\r\n    label: \"Type\",\r\n    options: containersData[\"type\"]\r\n  },\r\n  {\r\n    title: \"productCondition\",\r\n    label: \"Condition\",\r\n    options: containersData[\"condition\"]\r\n  },\r\n  {\r\n    title: \"productSize\",\r\n    label: \"Size\",\r\n    options: containersData[\"size\"]\r\n  },\r\n];\r\n\r\nconst items = [\r\n  {\r\n    title: \"Home\",\r\n    link: \"/\",\r\n  },\r\n  {\r\n    title: \"Products\",\r\n  },\r\n];\r\n\r\nfunction ProductList(props) {\r\n  const { loggedInUser, \r\n          cartData, \r\n          cartDataError, \r\n          orderData, \r\n          orderId,\r\n          crumbs\r\n        } = props;\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { isCartOpen } = useContext(NavbarContext);\r\n  const search = new URLSearchParams(location.search);\r\n\r\n  const [filters, setFilters] = useState({});\r\n  const [sameCountryAlert, setSameCountryAlert] = useState(false);\r\n\r\n  const [countries, setCountries] = useState(\r\n    search.getAll(\"productCountry\").map((item) => {\r\n      return { label: item, value: item };\r\n    }) || []\r\n  );\r\n  const [activePage, setActivePage] = useState(Number(search.get(\"page\")) || 1);\r\n  const [totalItemsCount, setTotalItemsCount] = useState(100);\r\n\r\n  const [cities, setCities] = useState(\r\n    search.getAll(\"productCity\").map((item) => {\r\n      return { label: item, value: item };\r\n    }) || []\r\n  );\r\n\r\n  const { filterQuery } = useQueryBuilder({\r\n    \"minQuantity\": 1,\r\n    \"productCity\": cities.map(city => city.value),\r\n    \"productCountry\": countries.map(country => country.value),\r\n    \"page\": activePage,\r\n    ...filters,\r\n  });\r\n\r\n  const { data, isLoading, isError } = useQuery(\r\n    `${containerEndpoints.products}?${filterQuery}`\r\n  );\r\n\r\n  // const { filterOrderQuery } = useQueryBuilder({\r\n  //   // \"customerUid\": 'S02547862',\r\n  //   \"customerUid\" : loggedInUser && loggedInUser.uid,\r\n  //   \"status\": 'cart',\r\n  //   ...filters,\r\n  // });\r\n\r\n  //   const {\r\n  //     data: cartData,\r\n  //     isError: cartError,\r\n  //     isLoading: cartLoading,\r\n  // } = useQuery(`/orders/list?customerUid=01168982&status=cart`);\r\n\r\n  // const {\r\n  //     data: cartdata,\r\n  //     isError: cartError,\r\n  //     isLoading: cartLoading,\r\n  //   } = useQuery(`${orderEndpoints.cart}?${filterOrderQuery}`)\r\n\r\n  // const { data, isLoading, isError } = useQuery(\r\n  //   `${/orders/list}?${filterOrderQuery}`\r\n  // );  \r\n  // props.getOrderSum(filterOrderQuery)\r\n\r\n  // useEffect(() => {\r\n  //   // if (props.cartData && props.cartData.status !== 'closed') {\r\n  //   if (loggedInUser) {\r\n  //     const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`\r\n  //     // props.getOrderSum(filterOrderQuery)\r\n  //   }\r\n  // }, [loggedInUser]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log('ProductList: useEffect outside if cartData', cartData)\r\n  //   if (cartDataError === '' && cartData && cartData.length > 0 && cartData[0].status === 'cart') {\r\n  //     // console.log('ProductList: useEffect cartData', cartData)\r\n  //     // console.log('cartData[0].orderId', cartData[0].orderId)\r\n  //     // props.getOrderDetails(props.orderId === null ? localStorage.getItem('order_ID') : props.orderId)\r\n  //     // props.getOrderDetails(cartData[0].orderId)\r\n  //     // props.getOrderDetails(orderId)\r\n  //   }\r\n  // }, [loggedInUser, cartData]);\r\n\r\n  useEffect(() => {\r\n    history.replace(\"/productList?\" + filterQuery);\r\n  }, [filterQuery]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setTotalItemsCount(data.length);\r\n    }\r\n  }, [data, setTotalItemsCount]);\r\n\r\n  // console.log('ProductList: cartData', cartData)\r\n  // console.log('ProductList: orderData', orderData)\r\n  // console.log('ProductList: cartDataError', cartDataError)\r\n  // console.log('ProductList: loggedInUser', loggedInUser)\r\n  // console.log('productList crumbs', crumbs)\r\n  // console.log('productList sameCountryAlert', sameCountryAlert)\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <Breadcrumb crumbs={crumbs} />\r\n      <ProductListLayout>\r\n        <FilterBoxWrapper>\r\n          <FilterBox\r\n            initialFilters={{\r\n              productSize: search.getAll(\"productSize\"),\r\n              productCondition: search.getAll(\"productCondition\"),\r\n              productType: search.getAll(\"productType\"),\r\n            }}\r\n            sections={sections}\r\n            title=\"Filter By\"\r\n            getFilters={setFilters}\r\n          />\r\n        </FilterBoxWrapper>\r\n        <ProductListing>\r\n          <MultiSelectWrapper>\r\n            <div>\r\n              <Label> Choose Country </Label>\r\n              <MultiSelect\r\n                tw=\"mt-1\"\r\n                className=\"multi-select\"\r\n                options={countriesData}\r\n                value={countries}\r\n                onChange={setCountries}\r\n                labelledBy={\"Select\"}\r\n              />\r\n            </div>\r\n            {/* <div>\r\n              <Label> Choose City </Label>\r\n              <MultiSelect\r\n                tw=\"mt-1\"\r\n                className=\"multi-select\"\r\n                options={citiesData}\r\n                value={cities}\r\n                onChange={setCities}\r\n                labelledBy={\"Select\"}\r\n              />\r\n            </div> */}\r\n          </MultiSelectWrapper>\r\n          <ContainercardWrapper>\r\n            {isLoading ? (\r\n              <Loader format=\"smaller\" />\r\n            ) : isError ? (\r\n              <Error> { isError.message } </Error>\r\n            ) : (\r\n              data.products.map((product) => (\r\n                <ContainerCard\r\n                  key={product.productId}\r\n                  productId={product.productId}\r\n                  productSize={product.productSize}\r\n                  productCity={product.productCity}\r\n                  productType={product.productTypeDisplay}\r\n                  productCondition={product.productCondition}\r\n                  productCountry={product.productCountry}\r\n                  productPrice={product.productPrice}\r\n                  productCurrency={product.productCurrency}\r\n                  inStock={product.inStock}\r\n                  sameCountryAlert={sameCountryAlert}\r\n                  setSameCountryAlert={setSameCountryAlert}\r\n                />\r\n              ))\r\n            )}\r\n          </ContainercardWrapper>\r\n          <PaginationWrapper>\r\n            {data && <Paginate\r\n              innerClass=\"pagination\"\r\n              activePage={activePage}\r\n              itemsCountPerPage={PRODUCTS_PAGE_SIZE}\r\n              totalItemsCount={totalItemsCount}\r\n              pageRangeDisplayed={5}\r\n              onChange={setActivePage}\r\n            />\r\n            }\r\n          </PaginationWrapper>\r\n        </ProductListing>\r\n      </ProductListLayout>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    orderDataError: state.orderDataError,\r\n    cartDataError: state.cartDataError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Breadcrumb.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\actions.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\store.jsx",["549"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport Reducer from \"./reducer\";\r\n// import CartReducer from \"./cartReducer\";\r\n\r\n// const appReducer = combineReducers({\r\n//     Reducer,\r\n//     cartReducer\r\n// });\r\n\r\nconst store = createStore(Reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\index.jsx",["550","551","552"],"import React, { useContext, Suspense, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, useLocation, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserRole, getUserProfile } from \"../../redux\";\r\nimport Sidebar from \"../../common/components/Sidebar\";\r\nimport Loader from \"../../common/styles/Loader\";\r\nimport routes from \"../../routes/agent\";\r\nimport { roles } from \"../../routes/sidebar\";\r\nimport { Header } from \"../../common/components/Topbar\";\r\nimport { SidebarContext } from \"../../context/SidebarContext\";\r\nimport tw from \"twin.macro\";\r\n\r\nfunction Layout(props) {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const { isSidebarOpen, closeSidebar, setRole } = useContext(SidebarContext);\r\n  const { loggedInUser, getUserProfile, getUserRole, userRole, userInfo } = props;\r\n\r\n  useEffect(() => {\r\n    console.log('agent loggedInUser',loggedInUser )\r\n    // if (!loggedInUser) { getUserProfile();\r\n    if (loggedInUser) {\r\n      getUserRole(loggedInUser.uid);\r\n\r\n      // getUserProfile()\r\n      // .then((response) => {\r\n        // if (loggedInUser) getUserRole(loggedInUser.uid);\r\n        // else history.push(\"/\");\r\n      // })\r\n    } else { history.push(\"/\"); }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    closeSidebar();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setRole(roles.AGENT);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Header\r\n          username={Object.keys(userInfo).length > 0 && userInfo.firstName + \" \" + userInfo.lastName}\r\n          items={[\r\n            // {\r\n            //   link: \"/agent/profile\",\r\n            //   label: \"Profile\",\r\n            // },\r\n            {\r\n              link: \"/agent/logout\",\r\n              label: \"Logout\",\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div\r\n        tw=\"flex h-screen pt-16\"\r\n        css={[isSidebarOpen && tw`overflow-hidden`]}\r\n      >\r\n        <div tw=\"lg:pt-5 lg:pl-5\">\r\n          <Sidebar />\r\n        </div>\r\n        <div tw=\"w-full p-5 overflow-y-auto\">\r\n          <main tw=\"min-h-containersSelection\">\r\n            <Suspense fallback={<Loader format=\"smaller\" />}>\r\n              <Switch>\r\n                <Redirect exact from=\"/agent\" to=\"/agent/dashboard\" />\r\n                {routes.map((route, i) => {\r\n                  return route.component ? (\r\n                    <Route\r\n                      key={i}\r\n                      exact={true}\r\n                      path={`/agent${route.path}`}\r\n                      render={(props) => <route.component {...props} />}\r\n                    />\r\n                  ) : null;\r\n                })}\r\n              </Switch>\r\n            </Suspense>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n    userRole: state.userRole,\r\n    userInfo: state.userInfo,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getUserProfile,\r\n  getUserRole\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\sidebar.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\index.jsx",["553","554"],"import React, { useContext, Suspense, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, useLocation, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserRole } from \"../../redux\";\r\nimport routes from \"../../routes/admin\";\r\nimport { roles } from \"../../routes/sidebar\";\r\nimport { SidebarContext } from \"../../context/SidebarContext\";\r\nimport Sidebar from \"../../common/components/Sidebar\";\r\nimport { Header } from \"../../common/components/Topbar\";\r\nimport Loader from \"../../common/styles/Loader\";\r\nimport tw from \"twin.macro\";\r\n\r\nfunction Layout(props) {\r\n  let history = useHistory();\r\n  const { isSidebarOpen, closeSidebar, setRole } = useContext(SidebarContext);\r\n  const { loggedInUser, getUserRole, userRole, userInfo } = props;\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser) {\r\n      getUserRole(loggedInUser.uid)\r\n    } else { history.push(\"/\"); }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    closeSidebar();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setRole(roles.ADMIN);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Header\r\n          username={Object.keys(userInfo).length > 0 && userInfo.firstName + \" \" + userInfo.lastName}\r\n          items={[\r\n            // {\r\n            //   link: \"/admin/profile\",\r\n            //   label: \"Profile\",\r\n            // },\r\n            {\r\n              // link: \"/admin/logout\",\r\n              label: \"Logout\",\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div\r\n        tw=\"flex h-screen pt-16\"\r\n        css={[isSidebarOpen && tw`overflow-hidden`]}\r\n      >\r\n        <div tw=\"lg:pt-5 lg:pl-5\">\r\n          <Sidebar />\r\n        </div>\r\n        <div tw=\"w-full p-5 overflow-y-auto\">\r\n          <main>\r\n            <Suspense fallback={<Loader format=\"smaller\" />}>\r\n              <Switch>\r\n                <Redirect exact from=\"/admin\" to=\"/admin/dashboard\" />\r\n                {routes.map((route, i) => {\r\n                  return route.component ? (\r\n                    <Route\r\n                      key={i}\r\n                      exact={true}\r\n                      path={`/admin${route.path}`}\r\n                      render={(props) => <route.component {...props} />}\r\n                    />\r\n                  ) : null;\r\n                })}\r\n              </Switch>\r\n            </Suspense>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n    userRole: state.userRole,\r\n    userInfo: state.userInfo,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getUserRole\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\index.jsx",["555","556"],"import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getOrderStatus\r\n} from '../../../redux';\r\nimport CartDetails from \"./CartDetails\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport ConfirmDetails from \"./ConfirmDetails\";\r\nimport ShoppingCart from \"../../../common/components/ShoppingCart\";\r\nimport CreditCard from \"../../../common/components/CreditCard\";\r\nimport Check from \"../../../common/components/Check\";\r\nimport Breadcrumb from \"../../../common/components/Breadcrumb\";\r\nimport { Button } from \"../../../common/styles\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst Wrapper = styled.section`\r\n  ${tw`pt-88 px-6 mx-auto`}\r\n  @media(min-width: 976px) {\r\n    ${tw``}\r\n  }\r\n`;\r\n\r\nconst VLine = tw.div`\r\nw-vLine h-35\r\nself-center\r\nbg-casual-gray \r\n`;\r\n\r\nfunction Checkout(props) {\r\n  const { orderStatus, getOrderStatus, crumbs } = props;\r\n  const [step, setStep] = useState(1);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Breadcrumb crumbs={crumbs} />\r\n      <div tw=\"grid grid-cols-formSteps bg-secondary-gray\">\r\n        <Button\r\n          disabled={orderStatus !== 'booked' ? false : true}\r\n          onClick={() => setStep(1)}\r\n          color={step === 1 ? \"primary-blue\" : \"outline-free\"}\r\n          tw=\"grid grid-cols-2ColAuto justify-items-end items-center gap-5 text-xl font-light h-checkoutHeaderButtons border-0\"\r\n        >\r\n          <ShoppingCart fillColor={step === 1 ? \"#ffffff\" : \"#04246A\"} \r\n                        width=\"30px\" \r\n                        height=\"30px\" \r\n                        alt=\"Shopping Cart\"\r\n          />\r\n          <div tw=\"justify-self-start\">Cart</div>\r\n        </Button>\r\n        <VLine />\r\n        {/* <Button\r\n          disabled={step >= 2 && orderStatus !== 'booked' ? false : true}\r\n          onClick={() => setStep(2)}\r\n          color={step === 2 ? \"primary-blue\" : \"outline-free\"}\r\n          tw=\"grid grid-cols-2ColAuto justify-items-end items-center gap-5 text-xl font-light h-checkoutHeaderButtons border-0\"\r\n        >\r\n          <CreditCard fillColor={step === 2 ? \"#ffffff\" : \"#04246A\"} width=\"30px\" height=\"30px\" alt=\"Credit Cart\" />\r\n          <div tw=\"justify-self-start\">Payment Details</div>\r\n        </Button>\r\n        <VLine /> */}\r\n        <Button\r\n          disabled={step > 2 && orderStatus !== 'booked' ? false : true}\r\n          color={step === 3 ? \"primary-blue\" : \"outline-free\"}\r\n          tw=\"grid grid-cols-2ColAuto justify-items-end items-center gap-5 text-xl font-light h-checkoutHeaderButtons border-0\"\r\n        >\r\n          <Check fillColor={step === 3 ? \"#ffffff\" : \"#04246A\"} width=\"30px\" height=\"30px\" alt=\"Confirmation check\" />\r\n          <div tw=\"justify-self-start\">Confirmation</div>\r\n        </Button>\r\n        {/* <Breadcrumb items={items} /> */}\r\n      </div>\r\n      {step === 1 ? (\r\n        <CartDetails {...props} toggleStep={(value) => { setStep(value) }} />\r\n      ) : step === 2 ? (\r\n        <PaymentDetails toggleStep={(value) => { setStep(value) }} />\r\n      ) : (\r\n        <ConfirmDetails toggleStep={(value) => { setStep(value) }} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    orderStatus: state.orderStatus\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getOrderStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\settings.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\customClearance.js",["557"],"import { useContext } from \"react\";\r\nimport { CustomClearanceContext } from \"../../context/CustomClearanceContext\";\r\n\r\nfunction CustomClearanceData() {\r\n  const { customClearanceDocument, paymentProofDocument } = useContext(CustomClearanceContext);\r\n\r\n  const customClearance = [\r\n    {\r\n      \"orderId\": 1290,\r\n      \"bookingStatus\": \"not ready\",\r\n      \"paymentStatus\": \"invoice sent\",\r\n      \"documentStatus\": customClearanceDocument === \"Uploaded\" && paymentProofDocument === \"Uploaded\" ? \"Uploaded / Not Validated\" : \"Buyer / Not Uploaded\",\r\n      \"pendingActions\": \"Upload Payment Proof\",\r\n      \"bookingDate\": \"21/8/2020\",\r\n      \"button\": customClearanceDocument === \"Uploaded\" && paymentProofDocument === \"Uploaded\" ? \"Manage\" : \"Upload\"\r\n    },\r\n    {\r\n      \"orderId\": 1190,\r\n      \"bookingStatus\": \"picked up\",\r\n      \"paymentStatus\": \"paid\",\r\n      \"documentStatus\": \"Uploaded / Validated\",\r\n      \"pendingActions\": \"None\",\r\n      \"bookingDate\": \"06/07/2020\",\r\n      \"button\": \"Manage\"\r\n    },\r\n    {\r\n      \"orderId\": 1187,\r\n      \"bookingStatus\": \"picked up\",\r\n      \"paymentStatus\": \"paid\",\r\n      \"documentStatus\": \"Uploaded / Not Validated\",\r\n      \"pendingActions\": \"None\",\r\n      \"bookingDate\": \"06/07/2020\",\r\n      \"button\": \"View\"\r\n    }\r\n  ]\r\n\r\n  return customClearance\r\n}\r\n\r\nconst currentOrdersStatus = {\r\n  'not ready': \"gray\",\r\n  'invoice sent': \"yellow\",\r\n  'picked up': 'green',\r\n  'paid': 'green',\r\n  'Uploaded / Validated': 'green',\r\n  'not uploaded': 'gray'\r\n};\r\n\r\nconst orderAddress = [\r\n  {\r\n    \"containerID\": \"CMAU 784209\",\r\n    \"POOL_ADDRESS_FULL\": \"MUELLE MSC S/N PUERTO DE VALENCIA 46024 ES\"\r\n  },\r\n  {\r\n    \"containerID\": \"CMAU 347560\",\r\n    \"POOL_ADDRESS_FULL\": \"PUERTO DE ALICANTE PROLONGACIÃ“N SUR 03008 ES\"\r\n  }\r\n]\r\n\r\nconst viewAddress = []\r\n\r\nexport { CustomClearanceData, currentOrdersStatus, orderAddress };","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\countries.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\containers.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\apiEndpoints.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\cities.js",[],["558","559"],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ShoppingCart\\index.js",["560","561","562","563","564","565","566","567","568","569"],"import { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    connectUser,\r\n    disconnectUser,\r\n    getUserProfile,\r\n    getOrderID,\r\n    getOrderDetails,\r\n    getOrderSum,\r\n    getProductsList,\r\n    updateOrderDetails\r\n} from '../../../redux';\r\nimport Counter from \"../Counter\";\r\nimport currencies from \"../../constants/currencies\";\r\nimport { NavbarContext } from \"../../../context/NavbarContext\";\r\nimport { Button, Card, Loader } from \"../../styles\";\r\nimport { CloseMenuIcon } from \"../../../assets/icons\";\r\nimport tw, { styled, css } from \"twin.macro\";\r\n\r\n/** w-305 */\r\nconst GoToCheckoutButton = tw(Button)`\r\nborder-0 w-305 h-41 text-sm self-end mb-1.5`;\r\n\r\n/** 'fixed right-6' for fixed design **/\r\nconst ShoppingCard = tw(Card)`\r\ngrid grid-rows-cart gap-4\r\nh-maxContent \r\nbg-white \r\nhover:bg-white`;\r\n// = styled.input(({ hasBorder }) => [\r\n//     `color: black;`,\r\n//     hasBorder && tw`border-purple-500`,\r\n//   ])\r\n\r\nconst noContentStyles = css`\r\n    ${tw`grid-rows-1`}\r\n  }\r\n`\r\n\r\nconst ShoppingTable = tw.table`\r\nw-full table-auto relative`;\r\n\r\nconst TableTh = tw.th`\r\ntext-primary-blue pb-1 text-base text-left`;\r\n\r\nfunction ShoppingCart(props) {\r\n    const { loggedInUser,\r\n        orderId,\r\n        productData,\r\n        orderData,\r\n        cartData,\r\n        cartDataError,\r\n        orderDataError,\r\n        currentOrders = false\r\n    } = props\r\n    let history = useHistory();\r\n    const value = useContext(NavbarContext);\r\n\r\n    const handleClick = () => {\r\n        if (productData) history.push(\"/productList/checkout\");\r\n        props.setIsCartOpen(false);\r\n    };\r\n\r\n    const closeShoppingCart = () => {\r\n        props.setIsCartOpen(!value.iscartOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser && orderId) \r\n        props.getOrderDetails(orderId)\r\n    }, [orderId]);\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser) \r\n        props.getProductsList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser) {\r\n            const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`\r\n            props.getOrderSum(filterOrderQuery)\r\n        }\r\n    }, []);\r\n\r\n    //   (orderData && productData && productData.products && orderData.map((order) => (\r\n    //                         productData.products.map((product) => console.log('currencies[product.productCurrency]', currencies[product.productCurrency]) || (\r\n    //                             order.productId === product.productId && \r\n    //                             <tr tw=\"text-15 h-14 text-primary-blue font-normal border-b border-gray-200 capitalize\">\r\n    //                                 <td tw=\"leading-extra-loose\">\r\n    //                                     <p tw=\"w-11/12 truncate\">{order.quantity}x {product.productTypeDisplay}, {product.productSize}' {product.productTypeSizeDisplay}, {product.productCondition}<br />\r\n    //                                         <span tw=\"text-13 text-light-gray tracking-wide\">{order.productId === product.productId && `${product.productCity}, ${product.productCountry}`}</span>\r\n    //                                     </p>\r\n    //                                 </td>   \r\n    //                                 <td tw=\"text-center\">{currencies[product.productCurrency]} {order.price}</td>\r\n    //                             </tr>\r\n    //                         ))\r\n    //                     ))\r\n    //                     )\r\n\r\n    useEffect(() => {\r\n        if (orderData && productData && productData.products) {\r\n            orderData.map((order) => (\r\n                productData.products.map((product) => (\r\n                    order.productId === product.productId &&\r\n                    localStorage.setItem('currency', currencies[product.productCurrency])\r\n                ))\r\n            ))\r\n        }\r\n    }, [productData]);\r\n\r\n    const items = { ...localStorage };\r\n    // console.log(\"items in localstorage\", items)\r\n    return (\r\n        <ShoppingCard css={[cartDataError && noContentStyles]}>\r\n            <ShoppingTable cellSpacing=\"10\" cellPadding=\"2\">\r\n                <thead>\r\n                    <tr tw=\"border-b border-gray-200\">\r\n                        <TableTh colSpan=\"2\">Shopping Cart</TableTh>\r\n                        <TableTh></TableTh>\r\n                        <th tw=\"cursor-pointer text-primary-blue\">\r\n                            <CloseMenuIcon width=\"13px\" height=\"13px\" onClick={closeShoppingCart} />\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cartDataError && <tr><td><span tw=\"text-14 pt-2 italic\">Your shopping cart is empty</span></td></tr>}\r\n                    {!orderData ? (\r\n                        <div tw=\"min-h-loader\" colSpan=\"2\">\r\n                            <Loader format=\"smaller\" />\r\n                        </div>\r\n                    ) :\r\n                        (orderData && cartDataError !== 'error' && productData && productData.products && orderData.map((order) => (\r\n                            productData.products.map((product) => (\r\n                                order.productId === product.productId &&\r\n                                <tr tw=\"text-15 h-14 text-primary-blue font-normal border-b border-gray-200 capitalize\">\r\n                                    <td tw=\"leading-extra-loose\">\r\n                                        <p tw=\"w-11/12 truncate\">{order.quantity} x {product.productTypeDisplay}, {product.productSize}' {product.productTypeSizeDisplay}, {product.productCondition}<br />\r\n                                            <span tw=\"text-13 text-light-gray tracking-wide\">{order.productId === product.productId && `${product.productCity}, ${product.productCountry}`}</span>\r\n                                        </p>\r\n                                    </td>\r\n                                    {/* <td><Counter number={order.quantity} /></td> */}\r\n                                    <td tw=\"text-center\">{currencies[product.productCurrency]} {order.total}</td>\r\n                                </tr>\r\n                            ))\r\n                        ))\r\n                        )\r\n                    }\r\n                </tbody>\r\n\r\n                {!cartData ? (\r\n                    <div tw=\"min-h-loader\" colSpan=\"2\">\r\n                        <Loader format=\"smaller\" />\r\n                    </div>\r\n                ) :\r\n                    // (props.orderData && props.productData &&\r\n                    (cartDataError !== 'error' && cartData && cartData[0] &&\r\n                        <tfoot>\r\n                            <tr tw=\"text-13 text-primary-blue font-normal\">\r\n                                {/* <td></td> */}\r\n                                <td tw=\"text-right pt-1.5\">SubTotal <span tw=\"text-9\">Excl. taxes</span></td>\r\n                                <td tw=\"text-center pt-1.5\">{localStorage.getItem('currency')} {cartData[0].amount}</td>\r\n                            </tr>\r\n                            <tr tw=\"text-15 text-primary-blue font-medium\">\r\n                                {/* <td></td> */}\r\n                                <td tw=\"text-right pt-1.5\">Total <span tw=\"text-9\">Incl. taxes ({cartData && [(cartData[0].taxAmount / cartData[0].amount) * 100]}%)</span></td>\r\n\r\n                                <td tw=\"text-center pt-1.5\">{localStorage.getItem('currency')} {(cartData[0].amount + cartData[0].taxAmount)} </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    )\r\n                }\r\n            </ShoppingTable>\r\n            {!cartDataError &&\r\n                <GoToCheckoutButton color=\"primary-blue\"\r\n                    onClick={handleClick} >\r\n                    Go To Checkout\r\n                </GoToCheckoutButton>\r\n            }\r\n        </ShoppingCard>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        count: state.count,\r\n        loggedIn: state.loggedIn,\r\n        loggedInUser: state.loggedInUser,\r\n        loggedOut: state.loggedOut,\r\n        orderId: state.orderId,\r\n        orderCurrency: state.orderCurrency,\r\n        orderData: state.orderData,\r\n        orderDataError: state.orderDataError,\r\n        cartData: state.cartData,\r\n        cartDataError: state.cartDataError,\r\n        productData: state.productData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    connectUser,\r\n    disconnectUser,\r\n    getUserProfile,\r\n    getOrderID,\r\n    getOrderDetails,\r\n    getOrderSum,\r\n    getProductsList,\r\n    updateOrderDetails\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Loader.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useQueryBuilder.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\api\\useQuery.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\MainSearch.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Alert.jsx",["570"],"import React, { useState, useEffect } from \"react\";\r\nimport alertInfos from \"../constants/alertInfos\";\r\nimport PropTypes from \"prop-types\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst NotificationWrapper = styled.div`\r\n  ${tw`w-365 h-50 fixed z-40 inset-x-0 m-auto top-65`}\r\n`;\r\n\r\nconst Notification = styled.div`\r\n  ${tw`h-full grid\r\n    content-center items-center\r\n    grid-cols-alert grid-rows-1\r\n    gap-x-2.5\r\n    transition duration-300 ease\r\n    cursor-pointer overflow-hidden\r\n    py-7 px-15 opacity-90 shadow-alert\r\n    hover:shadow-alertHover hover:opacity-100\r\n    `};\r\n  & {\r\n    grid-template-areas: \"a b c\";\r\n  }\r\n`;\r\n\r\nconst NotificationIcon = styled.img`\r\n   {\r\n    grid-area: a;\r\n  }\r\n`;\r\n\r\nconst NotificationTitle = styled.p`\r\n  ${tw`font-bold text-base text-center`};\r\n  & {\r\n    grid-area: b;\r\n  }\r\n`;\r\n\r\nconst DismissButton = styled.button`\r\n  ${tw`font-bold text-base`};\r\n  & {\r\n    grid-area: c;\r\n  }\r\n`;\r\n\r\nconst Alert = (props) => {\r\n  const {\r\n    type,\r\n    message,\r\n    autoClose,\r\n    dismissTime = 5000,\r\n    width,\r\n    height,\r\n    font,\r\n    iconWidth,\r\n    iconHeight,\r\n    paddingTop,\r\n    paddingBottom,\r\n    closeIconFontSize,\r\n    setSameCountryAlert,\r\n    setAlert,\r\n    // setAlertConfirm = false\r\n  } = props;\r\n  console.log('Alert props', props)\r\n  const [show, setShow] = useState(true);\r\n\r\n  const deleteAlert = () => {\r\n    setShow(false);\r\n    if (setAlert.setAlertConfirm) setAlert.setAlertConfirm(false); else setAlert(false);\r\n    // if (setAlertConfirm) setAlertConfirm(false)\r\n    if (setSameCountryAlert) setSameCountryAlert(false)\r\n  };\r\n\r\n    useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (autoClose) {\r\n        deleteAlert();\r\n      }\r\n    }, dismissTime);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [autoClose, dismissTime, deleteAlert]);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <NotificationWrapper\r\n          style={{ width: width ? width : 365, height: height ? height : 50 }}\r\n        >\r\n          {alertInfos.map((alertInfo, i) =>\r\n            alertInfo[\"type\"] === type ? (\r\n              <Notification\r\n                key={i}\r\n                style={{\r\n                  backgroundColor: alertInfo.backgroundColor,\r\n                  paddingTop: paddingTop ? paddingTop : \"1.75rem\",\r\n                  paddingBottom: paddingBottom ? paddingBottom : \"1.75rem\",\r\n                }}\r\n              >\r\n                <NotificationIcon\r\n                  src={alertInfo.icon}\r\n                  style={{\r\n                    width: iconWidth ? iconWidth : \"auto\",\r\n                    height: iconHeight ? iconHeight : \"auto\",\r\n                  }}\r\n                  alt={alertInfo.label}\r\n                />\r\n                <NotificationTitle\r\n                  style={{\r\n                    color: alertInfo.color,\r\n                    fontSize: font ? font : \"1rem\",\r\n                  }}\r\n                >\r\n                  {message ? message : alertInfo.label}\r\n                </NotificationTitle>\r\n                <DismissButton\r\n                  style={{\r\n                    color: alertInfo.color,\r\n                    fontSize: closeIconFontSize ? closeIconFontSize : \"1rem\",\r\n                  }}\r\n                  onClick={() => deleteAlert()}\r\n                >\r\n                  X\r\n                </DismissButton>\r\n              </Notification>\r\n            ) : null\r\n          )}\r\n        </NotificationWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  message: PropTypes.string,\r\n  autoClose: PropTypes.bool,\r\n  dismissTime: PropTypes.number,\r\n};\r\n\r\nexport default Alert;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\FilterBox.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Paginate.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\InfoTable.jsx",["571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586"],"import React, { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { getOrderDetails, getProductsList } from \"../../../redux\";\r\nimport ShoppingCart from \"../ShoppingCart/\";\r\nimport UploadDocuments from \"../../../common/components/UploadDocuments\";\r\nimport ViewDocuments from \"../../../common/components/ViewDocuments\";\r\n// import ViewContainersDetails from \"./ViewContainersDetails.jsx\";\r\n// import { orderAddress } from \"../../../common/constants/customClearance\";\r\nimport currencies from \"../../../common/constants/currencies\";\r\nimport { Button, Text } from \"../../styles\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst TableWrapper = tw.div`\r\npy-2 align-middle \r\ninline-block min-w-full \r\nrounded-sm px-4\r\n`;\r\n\r\nconst Table = tw.table`\r\nmin-w-full text-center\r\n`;\r\n\r\nconst TheadRow = tw.tr`\r\nh-48\r\ntext-black \r\nbg-extra-light-blue\r\n`;\r\n\r\nconst TheadCol = tw.th`\r\npy-3\r\ntext-primary-blue font-medium\r\ntext-sm md:text-17 \r\nwhitespace-nowrap\r\n`;\r\n\r\nconst TbodyRow = tw.tr`\r\nhover:bg-gray-100\r\nlast:border-0\r\n`;\r\n// xl:py-4\r\nconst TbodyCol = tw.td`\r\npx-6 sm:py-2\r\ntext-primary-blue font-normal\r\ntext-sm md:whitespace-nowrap\r\nsm:whitespace-nowrap md:whitespace-normal\r\n`;\r\n\r\nfunction InfoTable({\r\n  headers,\r\n  data,\r\n  order,\r\n  headerColor,\r\n  headerFontSize,\r\n  alignTdsTop,\r\n  bgColor,\r\n  width,\r\n  height,\r\n  borderBottom,\r\n  coloredText,\r\n  bookingOrder = null,\r\n  ...props\r\n}) {\r\n  const { getOrderDetails, getProductsList, orderData, productData } = props;\r\n\r\n  const [container, setContainer] = useState([]);\r\n  const [address, setAddress] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [type, setType] = useState([]);\r\n  const [size, setSize] = useState([]);\r\n  const [typeSize, setTypeSize] = useState([]);\r\n  const [condition, setCondition] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [currency, setCurrency] = useState([]);\r\n  const [orderFullDetails, setOrderFullDetails] = useState([]);\r\n  const [ex, setEx] = useState([]);\r\n  const [render, setRender] = useState(false);\r\n\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const useForceUpdate = () => useState()[1];\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  // useEffect(() => {\r\n  //   if (getOrderDetails && bookingOrder) getOrderDetails(bookingOrder);\r\n  // }, [getOrderDetails, bookingOrder]);\r\n\r\n  // const getBookingInfo = (bookingOrder) => {\r\n  //   data.map((booking, index) => {\r\n  //     if (booking.orderId === bookingOrder)\r\n  //     {\r\n  //       axios.get('/orderDetails/' + bookingOrder).then((results) => {\r\n  //         console.log('home orderDetails results.data', results.data )\r\n  //         // setOrders(results.data);\r\n  //       })\r\n  //     }\r\n\r\n  //   })\r\n\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (getProductsList) getProductsList();\r\n  }, [getProductsList, bookingOrder]);\r\n\r\n  useEffect(() => {\r\n    if (typeof productData !== \"undefined\") setProduct(productData);\r\n  }, [productData]);\r\n\r\n  useEffect(() => {\r\n    if (bookingOrder) {\r\n      // data.map((booking, index) => {\r\n      // if (booking.orderId === bookingOrder) {\r\n      axios.get(\"/orderDetails/\" + bookingOrder).then((results) => {\r\n        console.log(\"home orderDetails results.data\", results.data);\r\n        // setOrders(results.data);\r\n        let quantities = [];\r\n        let price = [];\r\n        results.data.map((oneOrderDetails, index) => {\r\n          console.log(\"useeffect index\", index);\r\n          // quantities.push(oneOrderDetails.quantity);\r\n          setQuantity((quantity) => [...quantity, oneOrderDetails.quantity]);\r\n          setPrice((price) => [...price, oneOrderDetails.price]);\r\n\r\n          // if (getProductsList) {\r\n          // getProductsList().then((response) => {\r\n          console.log(\"useEffect productData\", productData);\r\n          console.log(\"useEffect product\", product);\r\n          if (productData) {\r\n            productData.products.map((oneProduct) => {\r\n              if (oneOrderDetails.productId === oneProduct.productId) {\r\n                // setType((type) => [...type, oneProduct.productTypeDisplay]);\r\n                // setSize((size) => [...size, oneProduct.productSize]);\r\n                // setTypeSize((typeSize) => [\r\n                //   ...typeSize,\r\n                //   oneProduct.productTypeSizeDisplay,\r\n                // ]);\r\n                // setCondition((condition) => [\r\n                //   ...condition,\r\n                //   oneProduct.productCondition,\r\n                // ]);\r\n                // setAddress((address) => [\r\n                //   ...address,\r\n                //   oneProduct.productCity + oneProduct.productCountry,\r\n                // ]);\r\n                // setContainer((container) => [\r\n                //   ...container,\r\n                //   oneProduct.productDepot,\r\n                // ]);\r\n                setCurrency((currency) => [\r\n                  ...currency,\r\n                  oneProduct.productCurrency,\r\n                ]);\r\n                setOrderFullDetails((orderFullDetails) => [\r\n                  ...orderFullDetails,\r\n                  {\r\n                    Quantity: oneOrderDetails.quantity,\r\n                    Price: oneOrderDetails.price,\r\n                    Type: oneProduct.productTypeDisplay,\r\n                    Size: oneProduct.productSize,\r\n                    TypeSize: oneProduct.productTypeSizeDisplay,\r\n                    Condition: oneProduct.productCondition,\r\n                    Address: oneProduct.productCity + oneProduct.productCountry,\r\n                    Container: oneProduct.productDepot,\r\n                  },\r\n                ]);\r\n                // setEx((ex) => [\r\n                //   ...ex,\r\n                //   {\r\n                //     Quantity: 1,\r\n                //     Price: 1000,\r\n                //     Type: \"dry\",\r\n                //     Size: 20,\r\n                //     Address: \"MILANOItaly\",\r\n                //     Condition: \"re-use\",\r\n                //     Container: 3,\r\n                //     //  Container: \"C\",        ​​\r\n                //     TypeSize: \"ST\",\r\n                //   },\r\n                // ]);\r\n                setEx([\r\n                  ...ex,\r\n                  oneOrderDetails.quantity,\r\n                  oneOrderDetails.price,\r\n                  oneProduct.productTypeDisplay,\r\n                  oneProduct.productSize,\r\n                  oneProduct.productTypeSizeDisplay,\r\n                  oneProduct.productCondition,\r\n                  oneProduct.productCity + \", \" + oneProduct.productCountry,\r\n                  oneProduct.productDepot,\r\n                ]);\r\n                setRender(true);\r\n                // forceUpdate()\r\n              }\r\n\r\n              // {currencies[product.productCurrency]} {order.total}\r\n            });\r\n          }\r\n          // })\r\n          // }\r\n        });\r\n        // setQuantity(quantities);\r\n      });\r\n      // }\r\n      // });\r\n    }\r\n    forceUpdate();\r\n  }, [getProductsList, bookingOrder, productData]);\r\n\r\n  // useEffect(() => {\r\n  //   forceUpdate()\r\n  // },[ex, render])\r\n  // useEffect(() => {\r\n  //   if (getOrderDetails && bookingOrder)\r\n  //   getBookingInfo(bookingOrder)\r\n  // }, [getBookingInfo, bookingOrder])\r\n  console.log(\"home ex\", ex);\r\n  console.log(\"home data\", data);\r\n  console.log(\"home getOrderDetails\", getOrderDetails);\r\n  console.log(\"home bookingOrder\", bookingOrder);\r\n  console.log(\"home productData\", productData);\r\n  console.log(\"home product\", product);\r\n  console.log(\"home quantity\", quantity);\r\n  console.log(\"home currency\", currency);\r\n  console.log(\r\n    \"home container data\",\r\n    quantity,\r\n    price,\r\n    type,\r\n    size,\r\n    typeSize,\r\n    condition,\r\n    address,\r\n    container,\r\n    currency\r\n  );\r\n  console.log(\"orderFullDetails\", orderFullDetails);\r\n\r\n  // console.log(\"InfoTable props\", props);\r\n  const styleText = (text) => {\r\n    switch (text) {\r\n      case \"none\":\r\n      case \"not ready\":\r\n      case \"not uploaded\":\r\n        return \"gray\";\r\n\r\n      case \"invoice sent\":\r\n        return \"yellow\";\r\n\r\n      case \"Uploaded / Not Validated\":\r\n        return \"blue\";\r\n\r\n      case \"picked up\":\r\n      case \"paid\":\r\n      case \"Uploaded / Validated\":\r\n        return \"green\";\r\n\r\n      default:\r\n      // code block\r\n    }\r\n  };\r\n\r\n  const currencySymbol = (country) => {\r\n    switch (country) {\r\n      case \"italy\":\r\n      case \"spain\":\r\n        return \" €\";\r\n      default:\r\n        return \" £\";\r\n    }\r\n  };\r\n\r\n  function getButton(status, orderId) {\r\n    if (status === \"uploaded /not validated\") {\r\n      return (\r\n        <Modal\r\n          inline\r\n          width=\"508px\"\r\n          paddingBottom=\"80px\"\r\n          titleFontSize=\"24px\"\r\n          component={\r\n            <Button color=\"primary-blue\" tw=\"w-128\">\r\n              Manage\r\n            </Button>\r\n          }\r\n          title=\"Manage Documents\"\r\n          children={\r\n            <UploadDocuments key={Math.random()} bookingOrder={orderId} />\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return status === \"uploaded / validated\" ? (\r\n      <Modal\r\n        inline\r\n        width=\"508px\"\r\n        paddingBottom=\"32px\"\r\n        titleFontSize=\"24px\"\r\n        component={\r\n          <Button color=\"primary-blue\" tw=\"w-128\">\r\n            View\r\n          </Button>\r\n        }\r\n        title=\"View Documents\"\r\n        children={<ViewDocuments key={Math.random()} bookingOrder={orderId} />}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        inline\r\n        width=\"508px\"\r\n        paddingBottom=\"32px\"\r\n        titleFontSize=\"24px\"\r\n        component={\r\n          <Button color=\"primary-blue\" tw=\"w-128\">\r\n            Upload\r\n          </Button>\r\n        }\r\n        title=\"Upload Documents\"\r\n        children={\r\n          <UploadDocuments key={Math.random()} bookingOrder={orderId} />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      tw=\"overflow-x-auto m-auto my-0\"\r\n      style={{\r\n        backgroundColor: bgColor ? bgColor : \"#ffffff\",\r\n        width: width ? width : \"100%\",\r\n        height: height ? height : \"max-content\",\r\n        maxWidth: \"100%\",\r\n      }}\r\n    >\r\n      <TableWrapper>\r\n        <Table>\r\n          <thead>\r\n            <TheadRow\r\n              style={{\r\n                backgroundColor: headerColor ? headerColor : \"#E6EAF0\",\r\n                borderBottom: borderBottom ? borderBottom : 0,\r\n              }}\r\n            >\r\n              {/* {ex} */}\r\n              {/* {orderFullDetails.length > 0 ? orderFullDetails[0].Quantity : \"empty array\"} */}\r\n              {headers &&\r\n                headers.map(\r\n                  (title) =>\r\n                    console.log(\"title\", title) || (\r\n                      <TheadCol\r\n                        key={title}\r\n                        scope=\"col\"\r\n                        style={{\r\n                          fontSize: headerFontSize ? headerFontSize : 14,\r\n                          textAlign: ex && ex.length > 0 ? \"left\" : \"center\",\r\n                        }}\r\n                      >\r\n                        {/* {title === 'Total Amount' ? title+currency()} */}\r\n                        {title}\r\n                      </TheadCol>\r\n                    )\r\n                )}\r\n            </TheadRow>\r\n            {/* {ex.length > 0 && (\r\n              <TheadRow\r\n                style={{\r\n                  backgroundColor: headerColor ? headerColor : \"#E6EAF0\",\r\n                  borderBottom: borderBottom ? borderBottom : 0,\r\n                }}\r\n              >\r\n                {ex.map(\r\n                  (title) =>\r\n                    console.log(\"title\", title) || (\r\n                      <TheadCol\r\n                        key={title}\r\n                        scope=\"col\"\r\n                        style={{ fontSize: 14 }}\r\n                      >\r\n                        {title}\r\n                      </TheadCol>\r\n                    )\r\n                )}\r\n              </TheadRow>\r\n            )} */}\r\n          </thead>\r\n          <tbody>\r\n            {ex.length > 0 && (\r\n              <TbodyRow\r\n                style={{\r\n                  borderBottom: borderBottom ? borderBottom : 0,\r\n                  verticalAlign: alignTdsTop ? \"top\" : \"middle\",\r\n                }}\r\n              >\r\n                <TbodyCol\r\n                  style={{ fontSize: 14, textAlign: \"left\", paddingLeft: 0 }}\r\n                >\r\n                  {/* {ex.map((title, i) => (\r\n                   <span> {title} </span>\r\n                    ) )} */}\r\n                  <span tw=\"text-15 h-14 text-primary-blue font-normal capitalize\">\r\n                    {\" \"}\r\n                    {ex[0] +\r\n                      \" x \" +\r\n                      ex[2] +\r\n                      \", \" +\r\n                      ex[3] +\r\n                      \"' \" +\r\n                      ex[4] +\r\n                      \", \" +\r\n                      ex[5]}{\" \"}\r\n                  </span>\r\n                  <span> {ex[1]} </span>\r\n                  <div tw=\"text-13 text-light-gray tracking-wide\"> {ex[6]}</div>\r\n                </TbodyCol>\r\n                <TbodyCol style={{ fontSize: 14, textAlign: \"left\" }}>\r\n                  <span> {ex[1]} </span>\r\n                </TbodyCol>\r\n              </TbodyRow>\r\n            )}\r\n\r\n            {data &&\r\n              data.map((item, i) => (\r\n                <TbodyRow\r\n                  key={i}\r\n                  style={{\r\n                    borderBottom: borderBottom ? borderBottom : 0,\r\n                    verticalAlign: alignTdsTop ? \"top\" : \"middle\",\r\n                  }}\r\n                >\r\n                  {order.map(\r\n                    (key) =>\r\n                      console.log(\"key\", key, item[key], item) ||\r\n                      (key === \"button\" ? (\r\n                        // (key === \"customsClearance\" ? (\r\n                        <TbodyCol key={item[key]}>\r\n                          {/* {item[key] === \"Upload\" || item[key] === \"Manage\" ? ( */}\r\n                          {getButton(item[\"documentStatus\"], item[\"orderId\"])}\r\n                        </TbodyCol>\r\n                      ) : key === \"pendingActions\" ? (\r\n                        <TbodyCol key={item[key]}>\r\n                          {item[\"paymentStatus\"] === \"invoice sent\" &&\r\n                          item[\"paymentProof\"] === \"not uploaded\"\r\n                            ? \"Upload Payment Proof\"\r\n                            : item[\"paymentStatus\"] === \"paid\" &&\r\n                              item[\"customsClearance\"] === \"not uploaded\"\r\n                            ? \"Upload Customs Clearance Proof\"\r\n                            : \"none\"}\r\n                        </TbodyCol>\r\n                      ) : coloredText ? (\r\n                        <TbodyCol key={item[key]}>\r\n                          {key !== \"bookingStatus\" ? (\r\n                            <Text color={styleText(item[key])}>\r\n                              {item[key]}\r\n                            </Text>\r\n                          ) : (\r\n                            <>\r\n                              <Text color={styleText(item[key])}>\r\n                                {item[key]}\r\n                              </Text>\r\n                              {/* { quantity.length > 0 && \r\n                             quantity.length > 0 && \r\n                             price.length > 0 && \r\n                             type.length > 0 && \r\n                             size.length > 0 && \r\n                             typeSize.length > 0 && \r\n                             condition.length > 0 && \r\n                             address.length > 0 && \r\n                             container.length > 0 && \r\n                             currency.length > 0 && */}\r\n                              {console.log(\"return ex\", ex)}\r\n                              {/* {forceUpdate()} */}\r\n                              {productData && (\r\n                                <Modal\r\n                                  render={render}\r\n                                  ex={ex}\r\n                                  grid\r\n                                  width=\"435px\"\r\n                                  paddingBottom=\"25.5px\"\r\n                                  component={\r\n                                    item[\"paymentStatus\"] !== \"none\"\r\n                                      ? \"Order Details\"\r\n                                      : \"\"\r\n                                  }\r\n                                  title={\"order #\" + item.orderId}\r\n                                  children={\r\n                                    <InfoTable\r\n                                      productData={productData && productData}\r\n                                      // orderFullDetails={\r\n                                      //   orderFullDetails.length > 0 &&\r\n                                      //   orderFullDetails\r\n                                      // }\r\n                                      // ex={ex}\r\n                                      bookingOrder={item.orderId}\r\n                                      width=\"384px\"\r\n                                      headerColor=\"#f3f5f7\"\r\n                                      headerFontSize=\"17px\"\r\n                                      alignTdsTop={true}\r\n                                      bgColor=\"#f3f5f7\"\r\n                                      borderBottom=\"1px solid #d1d1d1\"\r\n                                      headers={[\"Containers Details\"]}\r\n                                      order={[]}\r\n                                      // order={[\r\n                                      //   container[0],\r\n                                      //   address[0],\r\n                                      //   quantity[0],\r\n                                      //   type[0],\r\n                                      //   condition[0],\r\n                                      // ]}\r\n                                      data={ex}\r\n                                    />\r\n                                  }\r\n                                />\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </TbodyCol>\r\n                      ) : (\r\n                        <TbodyCol key={item[key]}>\r\n                          {item[key] && key === \"bookingDate\"\r\n                            ? item[key].substring(0, 10)\r\n                            : key === \"orderId\"\r\n                            ? item[key]\r\n                            : key === \"amount\"\r\n                            ? item[key] + currency\r\n                            : item[key]}\r\n                          {/* {(item[key] instanceof Date) ? new Date(item[key].toDateString()) : item[key]} */}\r\n                        </TbodyCol>\r\n                      ))\r\n                  )}\r\n                </TbodyRow>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </TableWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nInfoTable.propTypes = {\r\n  headers: PropTypes.arrayOf(String),\r\n  data: PropTypes.arrayOf(Object),\r\n  order: PropTypes.arrayOf(String),\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    productData: state.productData,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getOrderDetails,\r\n  getProductsList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoTable);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ShoppingCart.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Check.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\CreditCard.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\redux\\reducer.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\currencies.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\MultiSelect\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\admin.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\routes\\agent.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\constants\\alertInfos.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\CartDetails.jsx",["587","588","589","590","591","592","593","594","595","596","597","598"],"import React, { useState, useRef, useEffect, useMountEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport currencies from \"../../../common/constants/currencies\";\r\nimport { Button, Card, Input, Loader } from \"../../../common/styles\";\r\nimport { Container3DIcon, ShoppingBag } from \"../../../assets/icons\";\r\nimport Alert from \"../../../common/components/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n} from \"../../../redux\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\n// import useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport {\r\n  orderEndpoints,\r\n  containerEndpoints,\r\n} from \"../../../common/constants/apiEndpoints\";\r\nimport axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst HeaderTitle = tw.h1`\r\nfont-medium text-2xl \r\ntext-primary-blue \r\nmt-6 mb-6\r\n`;\r\n\r\nconst CartTable = tw.table`\r\ntable-fixed min-w-full\r\ntext-primary-blue\r\n`;\r\n\r\nconst CartTableTh = tw.th`\r\npx-6 py-3 text-left font-medium\r\ntext-sm md:text-2xl\r\nwhitespace-nowrap\r\n`;\r\n\r\nconst CartTableTd = tw.td`\r\nleading-7 font-normal\r\npx-6 py-4 relative\r\nwhitespace-nowrap                    \r\ntext-sm md:text-17\r\n`;\r\n\r\nconst OrderSummaryCard = tw(Card)`\r\np-8 flex flex-col w-full\r\n`;\r\n\r\nconst OrderSummaryCardHeader = tw.h1`\r\ntext-gray-900 text-sm md:text-2xl \r\nfont-medium mb-5 \r\ntext-primary-blue\r\n`;\r\n\r\nconst CheckoutBtn = tw(Button)`\r\nborder-0 py-2 px-8 text-sm\r\nmt-4 h-45\r\n`;\r\n\r\nconst LeftSide = tw.div`\r\nlg:w-2/3 w-full lg:pr-16 mb-10\r\n`;\r\n\r\nconst RightSide = tw.div`\r\nlg:w-1/3  w-full\r\n`;\r\n\r\nconst RemoveQuantity = tw.div`\r\ntext-primary-red text-sm \r\nunderline absolute \r\nbottom-3.5 cursor-pointer\r\n`;\r\n\r\nconst EmptyCard = tw(Card)`\r\ngrid content-center justify-center grid-rows-3RowsAuto \r\nh-414 gap-y-25 text-casual-gray \r\np-8 mt-40 overflow-x-auto\r\n`;\r\n\r\nconst EmptyCardMessage = tw.div`\r\ntext-17 font-normal leading-20.8\r\n`;\r\n/* h-10 is changed to h-45 for consistency with all the buttons of the checkout page */\r\nconst GoToShoppingBtn = tw(Button)`\r\ntext-sm h-45\r\n`;\r\n\r\nconst ContinueShoppingBtn = tw.span`\r\nfont-light underline text-primary-blue \r\ntext-xl w-full block text-right \r\npt-2.5 cursor-pointer`;\r\n\r\nfunction EmptyCart() {\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/productList?page=1\");\r\n  };\r\n\r\n  return (\r\n    <EmptyCard>\r\n      <ShoppingBag tw=\"w-full h-xxl\" alt=\"Shopping Bag\" />\r\n      <EmptyCardMessage>\r\n        {\" \"}\r\n        You have no items in your shopping cart .\r\n        <br />\r\n        Go to the shopping list to add containers\r\n      </EmptyCardMessage>\r\n      <GoToShoppingBtn color=\"primary-blue\" onClick={() => handleClick()}>\r\n        Go To Shopping List\r\n      </GoToShoppingBtn>\r\n    </EmptyCard>\r\n  );\r\n}\r\n\r\nfunction CartDetails({ toggleStep, ...props }) {\r\n  // const orderID = localStorage.getItem('orderId');\r\n  let history = useHistory();\r\n  const {\r\n    loggedInUser,\r\n    orderId,\r\n    orderData,\r\n    cartData,\r\n    productData,\r\n    orderDataError,\r\n    cartDataError,\r\n  } = props;\r\n  // const [quantity, setQuantity] = useState({ [productId] : 1 })\r\n  const [quantity, setQuantity] = useState({ id: 1 });\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  // console.log('cartDetails : loggedInUser', loggedInUser)\r\n  // console.log('cartDetails : orderId', orderId)\r\n  // console.log('cartDetails : productData', productData)\r\n  // const [rows, setRows] = useState([\r\n  //                                     {\r\n  //                                       id: 1,\r\n  //                                        name: \"Reefer, 40' HC, Recycle\",\r\n  //                                        country: \"Milan, Italy\",\r\n  //                                        quantity: \"1\",\r\n  //                                        price: \"$1,100\",\r\n  //                                        total: \"$1,100\"\r\n  //                                     },\r\n  //                                     {\r\n  //                                       id: 2,\r\n  //                                        name: \" Dry, 20' ST, Reuse\",\r\n  //                                        country: \"Milan, Italy\",\r\n  //                                        quantity: \"2\",\r\n  //                                        price: \"$900\",\r\n  //                                        total: \"$1,800\"\r\n  //                                     }\r\n  //                                 ]);\r\n  // const [rows, setRows] = useState(localStorage.getItem('totalAmount'))\r\n  // useEffect(() => {\r\n  //   if (loggedInUser) {\r\n  //     props.getOrderDetails(orderId);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (loggedInUser) {\r\n  //     const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`\r\n  //     props.getOrderSum(filterOrderQuery)\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   props.getProductsList();\r\n  // }, [])\r\n\r\n  // if (loggedInUser && orderId) {\r\n  //   props.getOrderDetails(orderId);\r\n  //   props.getProductsList();\r\n  //   const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n  //   props.getOrderSum(filterOrderQuery)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser) {\r\n      const filterOrderQuery =\r\n        `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n      props.getOrderSum(filterOrderQuery);\r\n    }\r\n  }, [loggedInUser]);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser && orderId) {\r\n      props.getOrderDetails(orderId).then(props.getProductsList());\r\n    }\r\n  }, [loggedInUser, orderId]);\r\n\r\n  useEffect(() => {\r\n    // setAlert(false)\r\n  }, [orderData]);\r\n\r\n  // console.log(\"cartDetails: loggedInUser\", loggedInUser)\r\n  // console.log(\"CartDetails : orderId\", orderId)\r\n  // console.log(\"cartData && cartData[0] && cartData[0].amount > 0 && cartDataError !== 'error'\", cartData && cartData[0] && cartData[0].amount > 0 && cartDataError !== 'error')\r\n  // console.log(\"cartDetails: cartData\", cartData)\r\n\r\n  function isNumber(evt) {\r\n    evt = evt ? evt : window.event;\r\n    var charCode = evt.which ? evt.which : evt.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleChange(evt, id, inStock) {\r\n    setAlert(false);\r\n    localStorage.setItem(\"inStock\", inStock);\r\n    const containerQuantity = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : quantity[\"id\"];\r\n    setQuantity({ [id]: evt.target.value });\r\n    // console.log('Cartdetails quantity', quantity)\r\n    // if (isNaN(Number(event.target.value))) {\r\n    //   return;\r\n    // } else {\r\n    //   this.setState({ value: event.target.value });\r\n    // }\r\n\r\n    if (\r\n      evt.target.value !== \"\" &&\r\n      Number(evt.target.value) &&\r\n      !isNaN(Number(evt.target.value))\r\n    ) {\r\n      let filterQuery = {\r\n        customerUid: loggedInUser.uid,\r\n        productId: id,\r\n        quantity: evt.target.value,\r\n      };\r\n      // props.updateOrderDetails(localStorage.getItem('order_ID'), filterQuery)\r\n      // props.getProductsList()\r\n      // props.getOrderSum(localStorage.getItem('order_ID'))\r\n      // props.getOrderDetails(localStorage.getItem('order_ID'))\r\n\r\n      // props.updateOrderDetails(orderId, filterQuery)\r\n      // props.getOrderDetails(orderId)\r\n\r\n      const filterOrderQuery =\r\n        `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n      // props.getOrderSum(filterOrderQuery)\r\n      // props.getOrderDetails(orderId)\r\n      evt.target.value > inStock\r\n        ? setAlert(true)\r\n        : props\r\n            .updateOrderDetails(orderId, filterQuery)\r\n            .then((response) => {\r\n              props.getOrderSum(filterOrderQuery);\r\n            })\r\n            .then((response) => {\r\n              props.getOrderDetails(orderId);\r\n            });\r\n      // .then(response => {\r\n      //   console.log('is cartdataError false ')\r\n      //   // setCasesFields(response.data.result.record_set);\r\n      //   if (cartDataError === 'error') setIsVignetteShown(false)\r\n      // }\r\n      // )\r\n    }\r\n  }\r\n\r\n  const handleRemoveSpecificRow = (id) => {\r\n    let filterQuery = {\r\n      customerUid: loggedInUser.uid,\r\n      productId: id,\r\n      quantity: 0,\r\n    };\r\n    const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n    props\r\n      .updateOrderDetails(orderId, filterQuery)\r\n      .then((response) => {\r\n        props.getOrderSum(filterOrderQuery);\r\n      })\r\n      .then((response) => {\r\n        props.getOrderDetails(orderId);\r\n      })\r\n      .then((response) => {\r\n        // console.log('cartDetails : handleRemoveSpecificRow orderData', orderData)\r\n        props.getProductsList();\r\n      });\r\n\r\n    // props.updateOrderDetails(localStorage.getItem('order_ID'), filterQuery)\r\n    // props.getOrderDetails(localStorage.getItem('order_ID'))\r\n    // props.getProductsList()\r\n    // props.getOrderSum(localStorage.getItem('order_ID'))\r\n  };\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/productList?page=1\");\r\n  };\r\n\r\n  const isInputNumber = (evt) => {\r\n    var ch = String.fromCharCode(evt.which);\r\n    if (!/[0-9]/.test(ch)) {\r\n      evt.preventDefault();\r\n    }\r\n  };\r\n\r\n  let deleteProps = {\r\n    message: \"Are you sure you want to remove item ?\",\r\n    button1: \"Cancel\",\r\n    button2: \"Remove\",\r\n    buttonColor: \"outline-blue\",\r\n  };\r\n\r\n  let alertProps = {\r\n    type: \"error\",\r\n    message:\r\n      \"Quantity is larger than instock ( \" +\r\n      localStorage.getItem(\"inStock\") +\r\n      \" ), kindly choose a valid number\",\r\n    autoClose: false,\r\n    // dismissTime : 3000,\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n    setAlert,\r\n  };\r\n\r\n  // console.log('cartDetails : orderData', orderData)\r\n  // console.log('cartDetails : orderDataError', orderDataError)\r\n\r\n  return (\r\n    <section>\r\n      {alert && <Alert {...(alert ? alertProps : {})} />}\r\n      {cartData &&\r\n      cartData[0] &&\r\n      cartData[0].amount > 0 &&\r\n      cartDataError !== \"error\" ? (\r\n        <>\r\n          <HeaderTitle>Your Items</HeaderTitle>\r\n          <div tw=\"flex flex-wrap\">\r\n            <LeftSide>\r\n              <Card tw=\"p-8 overflow-x-auto\">\r\n                <CartTable>\r\n                  <thead>\r\n                    <tr tw=\"border-b border-gray-200\">\r\n                      <CartTableTh>Details</CartTableTh>\r\n                      <CartTableTh>Quantity</CartTableTh>\r\n                      <CartTableTh>Price</CartTableTh>\r\n                      <CartTableTh>Total</CartTableTh>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody tw=\"capitalize\">\r\n                    {orderData &&\r\n                      orderData.map(\r\n                        (order) =>\r\n                          productData &&\r\n                          productData.length > 0 &&\r\n                          productData.products.map(\r\n                            (product, index) =>\r\n                              order.productId === product.productId && (\r\n                                <tr\r\n                                  tw=\"py-10 border-b border-gray-200 last:border-b-0\"\r\n                                  className={\"wrapper index_\" + index}\r\n                                  key={index}\r\n                                >\r\n                                  <CartTableTd>\r\n                                    <Container3DIcon tw=\"inline mr-5\" />\r\n                                    <p tw=\"inline-block\">\r\n                                      {product.productTypeDisplay},{\" \"}\r\n                                      {product.productSize}'{\" \"}\r\n                                      {product.productTypeSizeDisplay},{\" \"}\r\n                                      {product.productCondition}\r\n                                      <span tw=\"block text-13 text-light-gray tracking-wide\">\r\n                                        {order.productId ===\r\n                                          product.productId &&\r\n                                          `${product.productCity}, ${product.productCountry}`}\r\n                                      </span>\r\n                                      <Modal\r\n                                        width=\"auto\"\r\n                                        height=\"auto\"\r\n                                        padding=\"20px\"\r\n                                        titleFontSize=\"24px\"\r\n                                        component={\r\n                                          <RemoveQuantity>\r\n                                            Remove\r\n                                          </RemoveQuantity>\r\n                                        }\r\n                                        title=\"Delete item\"\r\n                                        children={\r\n                                          <Popup\r\n                                            name=\"delete\"\r\n                                            {...deleteProps}\r\n                                            item={product}\r\n                                            onClick={() => {\r\n                                              handleRemoveSpecificRow(\r\n                                                product.productId\r\n                                              );\r\n                                            }}\r\n                                          />\r\n                                        }\r\n                                      />\r\n                                    </p>\r\n                                  </CartTableTd>\r\n                                  <CartTableTd>\r\n                                    <Input\r\n                                      defaultValue={order.quantity}\r\n                                      onKeyPress={(event) =>\r\n                                        isInputNumber(event)\r\n                                      }\r\n                                      value={quantity[product.productId]}\r\n                                      maxLength=\"3\"\r\n                                      pattern=\"[0-9]*\"\r\n                                      onInput={(e) =>\r\n                                        handleChange(\r\n                                          e,\r\n                                          product.productId,\r\n                                          product.inStock\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </CartTableTd>\r\n                                  <CartTableTd>\r\n                                    {currencies[product.productCurrency]}{\" \"}\r\n                                    {order.price}\r\n                                  </CartTableTd>\r\n                                  <CartTableTd>\r\n                                    {currencies[product.productCurrency]}{\" \"}\r\n                                    {order.total}\r\n                                  </CartTableTd>\r\n                                </tr>\r\n                              )\r\n                          )\r\n                      )}\r\n                  </tbody>\r\n                </CartTable>\r\n              </Card>\r\n              <ContinueShoppingBtn\r\n                onClick={() => {\r\n                  handleClick();\r\n                }}\r\n              >\r\n                Continue Shopping\r\n              </ContinueShoppingBtn>\r\n            </LeftSide>\r\n            <RightSide>\r\n              <OrderSummaryCard>\r\n                <OrderSummaryCardHeader>Order Summary</OrderSummaryCardHeader>\r\n                <hr tw=\"text-gray-200\" />\r\n                <CartTable>\r\n                  <tbody tw=\"border-b border-gray-200\">\r\n                    {orderData &&\r\n                      orderData.map(\r\n                        (order) =>\r\n                          productData &&\r\n                          productData.length > 0 &&\r\n                          productData.products.map(\r\n                            (product, index) =>\r\n                              order.productId === product.productId && (\r\n                                <tr tw=\"py-10 capitalize\" key={index}>\r\n                                  <CartTableTd>\r\n                                    {\" \"}\r\n                                    {product.productTypeDisplay},{\" \"}\r\n                                    {product.productSize}'{\" \"}\r\n                                    {product.productTypeSizeDisplay},{\" \"}\r\n                                    {product.productCondition}\r\n                                  </CartTableTd>\r\n                                  <CartTableTd> {order.quantity} </CartTableTd>\r\n                                  <CartTableTd>\r\n                                    {localStorage.getItem(\"currency\")}{\" \"}\r\n                                    {order.total}{\" \"}\r\n                                  </CartTableTd>\r\n                                </tr>\r\n                              )\r\n                          )\r\n                      )}\r\n                    <tr>\r\n                      <CartTableTd>\r\n                        <b>VAT</b>\r\n                      </CartTableTd>\r\n                      <CartTableTd>\r\n                        {\" \"}\r\n                        {cartData && [\r\n                          (cartData[0].taxAmount / cartData[0].amount) * 100,\r\n                        ]}\r\n                        %\r\n                      </CartTableTd>\r\n                      <CartTableTd>\r\n                        {localStorage.getItem(\"currency\")}{\" \"}\r\n                        {cartData && cartData[0].taxAmount}\r\n                      </CartTableTd>\r\n                    </tr>\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <CartTableTd>\r\n                      <b> Total Cost</b>\r\n                    </CartTableTd>\r\n                    <CartTableTd></CartTableTd>\r\n                    <CartTableTd>\r\n                      {localStorage.getItem(\"currency\")}{\" \"}\r\n                      {cartData && cartData[0].amount + cartData[0].taxAmount}\r\n                    </CartTableTd>\r\n                  </tfoot>\r\n                </CartTable>\r\n                <CheckoutBtn\r\n                  color=\"primary-blue\"\r\n                  onClick={() => {\r\n                    toggleStep(3);\r\n                  }}\r\n                >\r\n                  Checkout\r\n                </CheckoutBtn>\r\n              </OrderSummaryCard>\r\n            </RightSide>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <EmptyCart />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    count: state.count,\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    orderDataError: state.orderDataError,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n    productData: state.productData,\r\n    updateProduct: state.updateProduct,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDetails);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\ConfirmDetails.jsx",["599"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport { Button, Card } from \"../../../common/styles\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n  getOrderStatus\r\n} from '../../../redux';\r\nimport { ConfirmationChecked, BackSpace } from \"../../../assets/icons\";\r\nimport axios from 'axios';\r\nimport tw from \"twin.macro\";\r\n\r\nconst CartTable = tw.table`\r\ntable-fixed min-w-full\r\nmt-10 mb-4\r\n`;\r\n\r\nconst CartTableTh = tw.th`\r\npb-1.5 text-left w-1/4\r\ntext-sm md:text-base \r\nwhitespace-nowrap\r\n`;\r\n\r\nconst CartTableTd = tw.td`\r\nleading-8 text-primary-blue \r\ntext-seemore whitespace-nowrap                    \r\n`;\r\n\r\nconst ThankYouMessageTitle = tw.h1`\r\nfont-medium text-3xl\r\ntext-primary-blue pb-1.5\r\n`;\r\n\r\nconst ThankYouDescription = tw.div`\r\ntext-primary-blue text-xl \r\nleading-normal pb-6\r\n`;\r\n\r\nfunction ConfirmDetails({ toggleStep, ...props }) {\r\n  const { orderData, cartData, productData, orderId, getOrderStatus } = props;\r\n  const [step, setStep] = useState(1);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleClick = (link) => {\r\n    getOrderStatus('cart')\r\n    history.push(link);\r\n  };\r\n\r\n  const bookCart = () => {\r\n    props.getOrderDetails(orderId)\r\n      .then(response => {\r\n        orderData.map((orderDetails) => {\r\n          const filterQuery = {\r\n            \"productId\": orderDetails['productId'],\r\n            \"minusQuantity\": orderDetails['quantity'],\r\n            \"plusQuantity\": 0\r\n          }\r\n          axios\r\n            .put('/products', filterQuery)\r\n            .then(\r\n              () => {\r\n                const filterBookingQuery = {\r\n                  \"bookingStatus\": \"None\",\r\n                  \"customsClearanceMethod\": \"CMA CGM\",\r\n                  \"documentStatus\": \"Not Uploaded\",\r\n                  \"paymentStatus\": \"None\",\r\n                  \"status\": \"booked\"\r\n                }\r\n                axios.put('/orders/' + orderId, filterBookingQuery).then(\r\n                  () => {\r\n                    console.log('booking success !');\r\n                    getOrderStatus('booked')\r\n                    setStep(2);\r\n                  }, (error) => {\r\n                    console.log('Update Order booking error !', error);\r\n                  }\r\n                )\r\n              },\r\n              (error) => {\r\n                console.log('booking error !', error)\r\n              }\r\n            );\r\n        })\r\n      })\r\n  }\r\n\r\n  // function goToThankyouMessage() {\r\n  //   setStep(2);\r\n  // }\r\n\r\n  let confirmProps = {\r\n    message: \"confirm message after getting the Items updates from the stock\",\r\n    button1: \"Proceed\",\r\n    button2: \"Cancel Booking\",\r\n    buttonColor: \"primary-blue\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {step === 1 ? (\r\n        <section tw=\"w-668 h-512 mt-40 mx-auto max-w-full\">\r\n          <Card tw=\"pt-7 sm:px-11 pb-7\">\r\n            <h1 tw=\"text-lg font-medium text-primary-blue text-2xl\"> Order Summary </h1>\r\n            <CartTable>\r\n              <thead>\r\n                <tr tw=\"border-b border-gray-200\">\r\n                  <CartTableTh tw=\"text-primary-blue font-medium text-seemore text-left w-3/10\">Description</CartTableTh>\r\n                  <CartTableTh tw=\"text-primary-blue font-medium text-seemore text-center w-3/10\">Quantity</CartTableTh>\r\n                  <CartTableTh tw=\"text-primary-blue font-medium text-seemore text-center w-3/10\">Price</CartTableTh>\r\n                  <CartTableTh tw=\"text-lighter-blue font-medium text-seemore text-right cursor-pointer w-1/10\" onClick={() => { toggleStep(1) }}>Edit</CartTableTh>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orderData && orderData.map((order) => (\r\n                  productData && productData.products.map((product, index) => (\r\n                    order.productId === product.productId &&\r\n                    <tr key={index}>\r\n                      <CartTableTd tw='pt-1'>{product.productTypeDisplay}, {product.productSize}' {product.productTypeSizeDisplay}, {product.productCondition}</CartTableTd>\r\n                      <CartTableTd tw=\"text-center\"> {order.quantity} </CartTableTd>\r\n                      <CartTableTd tw=\"text-center\">{localStorage.getItem('currency')} {order.total} </CartTableTd>\r\n                      <CartTableTd></CartTableTd>\r\n                    </tr>\r\n                  ))))}\r\n                <tr tw=\"border-b border-gray-200\">\r\n                  <CartTableTd tw=\"font-medium w-3/10 pb-1.5\">VAT</CartTableTd>\r\n                  <CartTableTd tw=\"w-3/10\"></CartTableTd>\r\n                  <CartTableTd tw=\"text-center w-3/10\">{localStorage.getItem('currency')} {cartData && cartData[0].taxAmount}</CartTableTd>\r\n                  <CartTableTd></CartTableTd>\r\n                </tr>\r\n              </tbody>\r\n              <tfoot tw=\"text-primary-blue \">\r\n                <tr>\r\n                  <td tw=\"w-3/10\"></td>\r\n                  <td tw=\"text-center w-3/10 font-medium pt-1.5 text-seemore\">Total</td>\r\n                  <td tw=\"text-center w-3/10 font-medium text-seemore\">{localStorage.getItem('currency')} {cartData && cartData[0].amount + cartData[0].taxAmount}</td>\r\n                </tr>\r\n              </tfoot>\r\n            </CartTable>\r\n\r\n            <h1 tw=\"text-lg font-medium text-primary-blue text-2xl\"> Billing Details </h1>\r\n\r\n            <table tw=\"table-fixed min-w-full mb-40 mt-10\">\r\n              <thead tw=\"text-left border-b border-gray-200\">\r\n                <tr>\r\n                  <th tw=\"text-primary-blue font-medium text-seemore pb-1.5 w-2/5\">Payment Method</th>\r\n                  <th tw=\"text-primary-blue font-medium text-seemore pb-1.5 w-2/5\">Billing Details</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody tw=\"text-left\">\r\n                <tr tw=\"align-top\">\r\n                  <td tw=\"leading-5 text-gray-600 w-2/4 py-2 text-seemore\">Wire Transfer</td>\r\n                  <td tw=\"leading-5 text-gray-600 w-1/4 py-2 text-seemore\">\r\n                    To be provided to you in the invoice you will receive via email in the next few days\r\n                </td>\r\n                  <td></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div tw=\"flex space-x-5\">\r\n              <Modal className=\"modal\" width=\"450px\"\r\n                height=\"auto\"\r\n                titleFontSize=\"24px\"\r\n                component={\r\n                  <Button color=\"primary-blue\"\r\n                    tw=\"w-full p-0 h-45 text-sm\"\r\n                  > Confirm Order </Button>\r\n                }\r\n                title=\"In Stock Update\"\r\n                children={<Popup name=\"proceed\" setStep={setStep} bookCart={bookCart} {...confirmProps} />}\r\n              />\r\n              <Button color=\"outline-blue\"\r\n                tw=\"w-full rounded-none p-0 h-45 text-sm\"\r\n                onClick={() => { handleClick(\"/productList?page=1\") }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </section>\r\n      ) : (\r\n          <section tw=\"mt-40 mx-auto max-w-full\">\r\n            <Card tw=\"grid grid-rows-confirmation justify-items-center items-start gap-y-7 text-center pt-10 sm:pl-lg sm:pr-lg pb-7\">\r\n              <ThankYouMessageTitle>Thank you for your Order!</ThankYouMessageTitle>\r\n              <ConfirmationChecked tw=\"w-92 h-92\" alt=\"Checked\" />\r\n              <ThankYouDescription>\r\n                An agent will get in contact soon to provide you with the invoice by email. <br />\r\n              Please note that you need to neutralize the container by repainting and removing any CMA CGM branding.\r\n            </ThankYouDescription>\r\n              <div tw=\"max-w-full p-0 h-45 grid justify-items-center items-center grid-cols-2ColAuto gap-x-5\">\r\n                <Button\r\n                  color=\"primary-blue\"\r\n                  tw=\"w-56 max-w-full p-0 h-45 text-sm grid justify-items-center items-center grid-cols-2ColAuto gap-x-1.5\"\r\n                  onClick={() => { handleClick(\"/productList?page=1\") }}>\r\n                  <BackSpace tw=\"justify-self-end\" />\r\n                  <span tw=\"justify-self-start\"> Back to Shopping</span>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary-blue\"\r\n                  tw=\"w-56 max-w-full p-0 h-45 text-sm grid justify-items-center items-center grid-cols-2ColAuto gap-x-1.5\"\r\n                  onClick={() => { handleClick(\"/currentorders\") }}>\r\n                  <span tw=\"justify-self-end\"> View Orders</span>\r\n                  <BackSpace tw=\"justify-self-start transform rotate-180\" />\r\n                </Button>\r\n              </div>\r\n            </Card>\r\n          </section>\r\n      )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    count: state.count,\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n    productData: state.productData,\r\n    updateProduct: state.updateProduct,\r\n    orderDataError: state.orderDataError,\r\n    orderStatus: state.orderStatus\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n  getOrderStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmDetails);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Checkout\\PaymentDetails.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\ViewDocuments.jsx",["600","601"],"import React, { useState } from \"react\";\r\nimport { Button } from \"../../common/styles\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst Wrapper = tw.div`\r\nmd:(max-w-full mx-0) mx-auto max-w-85\r\n`;\r\n\r\nexport default function UploadDocuments(props) {\r\n    const [step, setStep] = useState(1);\r\n    const [document, setDocument] = useState(\"Custom Clearance\");\r\n    console.log('UploadDocuments props', props)\r\n\r\n    return (\r\n        <Wrapper>\r\n            <section tw='grid grid-cols-2FullCols max-w-400 m-auto'>\r\n                <Button tw=\"text-xs md:text-xl font-normal\"\r\n                    onClick={() => setStep(1)}\r\n                    color={step === 1 ? \"neutral-blue\" : \"neutral\"}\r\n                >\r\n                    <span>Custom Clearance</span>\r\n                </Button>\r\n                <Button tw=\"text-xs md:text-xl font-normal\"\r\n                    onClick={() => { setStep(2); setDocument(\"Payment Proof\") }}\r\n                    color={step === 2 ? \"neutral-blue\" : \"neutral\"}\r\n                >\r\n                    <span>Payment Proof</span>\r\n                </Button>\r\n            </section>\r\n            <section tw=\"max-w-400 mx-auto pt-45 text-left\">\r\n                <div style={{\r\n                    color: '#599bff',\r\n                    fontSize: 17,\r\n                    fontWeight: 'normal',\r\n                    paddingBottom: 37,\r\n                    verticalAlign: 'top'\r\n                }}>\r\n                    {step === 1 ?\r\n                        '1290_CustomsClearance.pdf' : '1290_PaymentProof.pdf'\r\n                    }\r\n                </div>\r\n                <Button tw=\"w-full\" color=\"primary-blue\" onClick={() => props.setShowModal(false)} > Close</Button>\r\n            </section>\r\n        </Wrapper >\r\n    );\r\n}\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\UploadDocuments.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Modal\\Modal.jsx",["602","603"],"import React, { useState, useRef } from \"react\";\r\nimport { CloseMenuIcon } from \"../../../assets/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport useOutsideAlerter from \"../../hooks/useOutsideAlerter\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\n// pt-2 removed from Modaltrigger, check home buyer Upload Document modal\r\nconst ModalTrigger = tw.div`\r\nfocus:outline-none cursor-pointer \r\ntext-xs text-secondary-blue\r\nw-full`;\r\n\r\nconst WrapperCN = tw.div`\r\njustify-center items-center \r\nflex overflow-x-hidden overflow-y-auto \r\nfixed inset-0 z-modal outline-none \r\nfocus:outline-none w-auto mx-0\r\nshadow-md \r\np-5 \r\n`;\r\n\r\nconst ModalCN = tw.div`\r\nrelative w-auto max-w-3xl\r\nmx-0 \r\n`;\r\n\r\nconst BackdropCN = styled.div`\r\n  ${tw`opacity-50 fixed inset-0 \r\nz-modal-backdrop bg-black\r\n`};\r\n  & {\r\n    margin-left: 0 !important;\r\n  }\r\n`;\r\n\r\nconst Notification = styled.div`\r\n  ${tw`h-full grid\r\n    content-center items-center\r\n    grid-cols-alert grid-rows-1\r\n    gap-x-2.5\r\n    transition duration-300 ease\r\n    cursor-pointer overflow-hidden\r\n    py-7 px-15 opacity-90 shadow-alert\r\n    hover:shadow-alertHover hover:opacity-100\r\n    `};\r\n  & {\r\n    grid-template-areas: \"a b c\";\r\n  }\r\n`;\r\n\r\nconst CloseWrapperCN = tw.div`\r\nrelative flex flex-col w-full\r\n`;\r\n\r\nconst CloseBtnCN = tw.button`\r\nself-start`;\r\n\r\nconst CloseCN = tw.span`\r\n`;\r\n\r\nconst HeaderWrapperCN = tw.div`\r\ngrid grid-cols-modal justify-center\r\nitems-center p-4\r\n`;\r\n// grid grid-cols-modalHeader items-center justify-items-end\r\nconst HeaderTitleCN = tw.h3`\r\ntext-xl font-semibold\r\nfont-medium text-primary-blue\r\n`;\r\n\r\nconst ContentWrapperCN = tw.div`\r\nmax-w-halfFull md:max-w-full m-auto\r\nborder-0 rounded-none shadow-lg \r\nrelative flex flex-col \r\ntext-center text-primary-blue\r\nw-full bg-white outline-none \r\nfocus:outline-none\r\n`;\r\n\r\nexport default function Modal({\r\n  component,\r\n  title,\r\n  titleColor,\r\n  children,\r\n  width,\r\n  height,\r\n  paddingBottom,\r\n  padding,\r\n  titleFontSize,\r\n  inline = false,\r\n  grid = false,\r\n  ...props\r\n}) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, () => {\r\n    setShowModal(false);\r\n  });\r\n\r\n  console.log(\"modal productData\", props.productData);\r\n  console.log(\"modal props\", props);\r\n\r\n  const childrenWithProps = React.Children.map(children, (child) => {\r\n    // checking isValidElement is the safe way and avoids a typescript error too\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { setShowModal: setShowModal });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ModalTrigger\r\n        style={{ display: inline ? \"inline\" : grid ? \"grid\" : \"inherit\" }}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        {component}\r\n      </ModalTrigger>\r\n      {showModal ? (\r\n        <>\r\n          <WrapperCN>\r\n            <ModalCN ref={wrapperRef}>\r\n              <ContentWrapperCN\r\n                style={{\r\n                  width: width ? width : \"auto\",\r\n                  height: height ? height : \"auto\",\r\n                  paddingBottom: paddingBottom ? paddingBottom : \"inherit\",\r\n                  paddingLeft: padding ? padding : 0,\r\n                  paddingRight: padding ? padding : 0,\r\n                }}\r\n              >\r\n                <HeaderWrapperCN>\r\n                  {title && (\r\n                    <HeaderTitleCN\r\n                      style={{\r\n                        fontSize: titleFontSize ? titleFontSize : 20,\r\n                        color: titleColor ? titleColor : \"#04246A\",\r\n                      }}\r\n                    >\r\n                      {title}\r\n                    </HeaderTitleCN>\r\n                  )}\r\n                  <CloseBtnCN onClick={() => setShowModal(false)}>\r\n                    <CloseCN data-testid=\"close\">\r\n                      <CloseMenuIcon tw=\"w-4\" />\r\n                    </CloseCN>\r\n                  </CloseBtnCN>\r\n                </HeaderWrapperCN>\r\n                {childrenWithProps}\r\n              </ContentWrapperCN>\r\n            </ModalCN>\r\n          </WrapperCN>\r\n          <BackdropCN></BackdropCN>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  title: PropTypes.string,\r\n  component: PropTypes.node.isRequired,\r\n};\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\assets\\icons\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\text.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\UserProfileMenu.jsx",["604","605"],"import React, { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderDetails,\r\n  getUserRole,\r\n} from \"../../../redux\";\r\nimport { Button } from \"../../styles\";\r\nimport DropdownComponent from \"../Dropdown\";\r\nimport ShoppingCart from \"../ShoppingCart/\";\r\n// import useQuery from \"../../hooks/api/useQuery\";\r\nimport {\r\n  ShoppingCartIcon,\r\n  Logout,\r\n  // CloseMenuIcon,\r\n  // Container3DIcon,\r\n} from \"../../../assets/icons\";\r\nimport { NavbarContext } from \"../../../context/NavbarContext\";\r\n// import axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst UserProfileMenuWrapper = tw.div`\r\ngrid grid-cols-3ColAuto \r\nitems-center gap-x-sm \r\ntext-primary-blue\r\n`;\r\n\r\nconst Vignette = tw.span`\r\nabsolute -top-9 -right-9\r\ntext-9 rounded-3xl bg-primary-red\r\nw-15 h-15 text-white font-normal\r\ngrid content-center justify-center\r\n`;\r\n\r\nconst UserIcon = tw.div`\r\nw-10 h-10 text-sm\r\ngrid items-center justify-items-center\r\nrounded-full border-primary-blue\r\nborder-userIcon`;\r\n\r\nfunction UserProfileMenu(props) {\r\n  let history = useHistory();\r\n\r\n  const {\r\n    loggedIn,\r\n    loggedInUser,\r\n    getUserRole,\r\n    userRole,\r\n    orderData,\r\n    cartDataError,\r\n    orderId,\r\n  } = props;\r\n  const value = useContext(NavbarContext);\r\n  // const { setIsVignetteShown } = useContext(NavbarContext);\r\n  console.log(\"UserProfileMenu : value\", value);\r\n  // console.log(\"UserProfileMenu : history.location\", history.location);\r\n  // console.log(\r\n  //   \"history.location.pathname.indexOf('/admin')\",\r\n  //   history.location.pathname.indexOf(\"/admin\")\r\n  // );\r\n  // console.log('UserProfileMenu : orderData', orderData)\r\n  //  console.log('UserProfileMenu : loggedIn', loggedIn)\r\n  //  console.log('UserProfileMenu : loggedInUser', loggedInUser)\r\n  console.log(\"userRole userRole\", userRole);\r\n  useEffect(() => {\r\n    // joseph: S01171192 agent\r\n    // Ramona S01168982 admin\r\n    // Georges: S01227927 buyer\r\n    if (loggedIn) {\r\n      getUserRole(loggedInUser.uid).then((response) => {\r\n        switch (userRole) {\r\n          case \"buyer\":\r\n            // if (history.location.pathname.indexOf('/admin') > -1 || history.location.pathname.indexOf('/agent') > -1 )\r\n            // if (!loggedIn) history.push(\"/\");\r\n            break;\r\n          case \"agent\":\r\n            history.push(\"/agent\");\r\n            break;\r\n          case \"admin\":\r\n            history.push(\"/admin\");\r\n            break;\r\n          default:\r\n          // history.push(\"/\");\r\n          // alert(\"nothing\");\r\n        }\r\n      });\r\n    }\r\n\r\n    //   async function getTheUserRole() {\r\n    //     if (loggedIn) {\r\n    //     await getUserRole(loggedInUser.uid)\r\n    //     // response = await response\r\n    //     switch (userRole) {\r\n    //       case \"buyer\":\r\n    //         // if (history.location.pathname.indexOf('/admin') > -1 || history.location.pathname.indexOf('/agent') > -1 )\r\n    //         // if (!loggedIn) history.push(\"/\");\r\n    //         break;\r\n    //       case \"agent\":\r\n    //         history.push(\"/agent\");\r\n    //         break;\r\n    //       case \"admin\":\r\n    //         history.push(\"/admin\");\r\n    //         break;\r\n    //       default:\r\n    //       // history.push(\"/\");\r\n    //       // alert(\"nothing\");\r\n    //     }\r\n    //   }\r\n    //  }\r\n    //  getTheUserRole()\r\n  }, [userRole]);\r\n\r\n  const handleClick = () => {\r\n    value.setIsCartOpen(!value.isCartOpen);\r\n    // props.openShoppingCart(true)\r\n    // console.log('UserProfileMenu value.isCartOpen', value.isCartOpen)\r\n  };\r\n\r\n  const handleLogoutClick = (event) => {\r\n    if (loggedIn) {\r\n      props.disconnectUser(history);\r\n      window.localStorage.clear();\r\n      // props.getUserProfile()\r\n    }\r\n  };\r\n\r\n  const getProductOriginTotalQuantity = () => {\r\n    if (orderData && value) {\r\n      var itemsOriginQuantity = orderData.reduce(\r\n        (total, obj) => obj.quantity + total,\r\n        0\r\n      );\r\n      value.setIsVignetteShown(true);\r\n    }\r\n    return itemsOriginQuantity;\r\n  };\r\n  // console.log('UserProfileMenu : getProductOriginTotalQuantity()', getProductOriginTotalQuantity())\r\n  return (\r\n    <UserProfileMenuWrapper\r\n      style={{\r\n        color: history.location.pathname === \"/\" ? \"#ffffff\" : \"#04246A\",\r\n      }}\r\n    >\r\n      <UserIcon\r\n        style={{\r\n          borderColor:\r\n            history.location.pathname === \"/\" ? \"#ffffff\" : \"#04246A\",\r\n        }}\r\n      >\r\n        {loggedInUser && loggedInUser[\"given_name\"].charAt(0)}\r\n      </UserIcon>\r\n      {history.location.pathname !== \"/productList/checkout\" && (\r\n        <DropdownComponent\r\n          aria-label=\"Menu\"\r\n          isCartOpen={value.isCartOpen}\r\n          setIsCartOpen={value.setIsCartOpen}\r\n          width=\"auto\"\r\n          disclosure={\r\n            <Button tw=\"p-0\">\r\n              <ShoppingCartIcon\r\n                onClick={handleClick}\r\n                tw=\"outline-none\"\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                alt=\"Shopping Cart\"\r\n              />\r\n              {/* {cartDataError !=='error' && value && value.isVignetteShown && orderData && orderData.length > 0 && */}\r\n              {cartDataError !== \"error\" &&\r\n                value &&\r\n                value.isVignetteShown &&\r\n                history.location.pathname !== \"/\" && (\r\n                  <Vignette onClick={handleClick}>\r\n                    {/* {Object.keys(value.quantity).length !== 0 ?\r\n                                                    getProductOriginTotalQuantity() + Object.values(value.quantity).reduce((sum, qty) => sum + qty) :\r\n                                                    getProductOriginTotalQuantity()\r\n                                                } */}\r\n                    {getProductOriginTotalQuantity()}\r\n                  </Vignette>\r\n                )}\r\n            </Button>\r\n          }\r\n          items={[<ShoppingCart setIsCartOpen={handleClick} />]}\r\n        ></DropdownComponent>\r\n      )}\r\n\r\n      {/* {value && value.isVignetteShown &&\r\n                    <Vignette onClick={handleClick}>\r\n                        {Object.keys(value.quantity).length !== 0 ?\r\n                            Object.values(value.quantity).reduce((sum, qty) => sum + qty) :\r\n                            null\r\n                        }\r\n                        {/* {\r\n                            getProductOriginTotalQuantity()  \r\n                        } */}\r\n      {/* </Vignette>\r\n                }  */}\r\n      <Logout tw=\"cursor-pointer\" onClick={(evt) => handleLogoutClick(evt)} />\r\n\r\n      {/* pop up display in case we decided to re-add it  */}\r\n    </UserProfileMenuWrapper>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    userRole: state.userRole,\r\n    loggedOut: state.loggedOut,\r\n    openShoppingCart: state.openShoppingCart,\r\n    orderData: state.orderData,\r\n    cartDataError: state.cartDataError,\r\n    orderId: state.orderId,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderDetails,\r\n  getUserRole,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileMenu);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\Navbar.jsx",["606"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport UserProfileMenu from \"./UserProfileMenu\";\r\nimport { connectUser, disconnectUser, getUserProfile } from \"../../../redux\";\r\nimport { Button } from \"../../styles\";\r\nimport { Logo, LogoColored } from \"../../../assets/images\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst Wrapper = tw.div`\r\nw-full \r\nfixed bg-white\r\nz-50 shadow \r\ntop-0 h-16\r\n`;\r\n\r\n// const List = tw.ul`\r\n// flex items-center\r\n// hidden space-x-8\r\n// lg:flex\r\n// `;\r\n\r\n// const ListItem = tw.li`\r\n// text-primary-blue \r\n// text-base\r\n// cursor-pointer\r\n// font-normal\r\n// `;\r\n\r\n// const ListAnchor = tw.a`\r\n// tracking-wide \r\n// text-gray-700 transition-colors \r\n// duration-200 \r\n// hover:text-primary-blue\r\n// `;\r\n\r\n// const MenuBtn = tw(Button)`\r\n// p-2 -mt-2 -mr-2 \r\n// transition duration-200 \r\n// rounded hover:bg-gray-200 \r\n// focus:bg-gray-200 focus:outline-none\r\n// `;\r\n\r\nconst LoginBtn = tw(Button)`\r\nw-100 rounded-none\r\n`;\r\n\r\nfunction Navbar(props) {\r\n  let history = useHistory();\r\n  const { loggedIn, loggedInUser, getUserProfile } = props;\r\n\r\n  useEffect(() => {\r\n    if (!loggedInUser) getUserProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (\r\n    //   !loggedIn &&\r\n    //   (window.location.pathname.toLowerCase() === \"/currentorders\" ||\r\n    //     window.location.pathname.toLowerCase() === \"/productlist/checkout\")\r\n    // ) {\r\n    //   history.push(\"/\");\r\n    // }\r\n  }, [history, loggedIn]);\r\n\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        background: history.location.pathname === \"/\" ? \"none\" : \"white\",\r\n        boxShadow:\r\n          history.location.pathname === \"/\"\r\n            ? \"none\"\r\n            : \"0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06)\",\r\n      }}\r\n    >\r\n      <div\r\n        tw=\"h-full relative flex items-center justify-between\"\r\n        style={{\r\n          padding:\r\n            history.location.pathname === \"/\" ? \"8px 25px 0 7px\" : \"0 25px\",\r\n        }}\r\n      >\r\n        <a\r\n          href=\"/\"\r\n          aria-label=\"CMA CGM\"\r\n          title=\"CMA CGM\"\r\n          tw=\"inline-flex items-center\"\r\n        >\r\n          <img\r\n            src={history.location.pathname === \"/\" ? Logo : LogoColored}\r\n            tw=\"mx-auto\"\r\n            style={{\r\n              width: history.location.pathname === \"/\" ? \"6rem\" : \"4rem\",\r\n              paddingTop: history.location.pathname === \"/\" ? \"8px\" : \"inherit\",\r\n            }}\r\n            alt=\"CMA CGM\"\r\n          />\r\n        </a>\r\n        {/* { (!props.signin && window.location.pathname !== '/checkout' && window.location.pathname !== '/home') ?     */}\r\n        {!loggedInUser ? (\r\n          <LoginBtn\r\n            color=\"outline-blue\"\r\n            onClick={() =>\r\n              window.location.replace(\r\n                `${\r\n                  process.env.NODE_ENV === \"development\"\r\n                    ? \"http://localhost:3001\"\r\n                    : \"\"\r\n                }/auth/sso/login?initialURL=${history.location.pathname}`\r\n              )\r\n            }\r\n            // onClick={() => window.location.replace(`https://auth-int.cma-cgm.com:9031/as/authorization.oauth2?response_type=code&redirect_uri=https%3A%2F%2Fcsp-app-front.fpaas-dev.cld.cma-cgm.com%2Fauth%2Fsso%2Fcallback&scope=csp%3Aread%3Afe&client_id=webapp-csp&prompt=login`)}\r\n          >\r\n            Sign in\r\n          </LoginBtn>\r\n        ) : (\r\n          <UserProfileMenu />\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Counter\\index.jsx",["607"],"import React, { useState } from 'react';\r\nimport tw from \"twin.macro\";\r\nimport \"./styles.css\";\r\n\r\nconst CounterWrapper = tw.div`\r\ngrid grid-cols-counter\r\n`;\r\n\r\nconst CounterButton = tw.button`\r\nw-18 h-18 \r\nborder rounded-xl\r\nrelative\r\nbefore:absolute inset-0\r\nfocus:outline-none\r\n`;\r\n\r\nconst Number = tw.span`\r\ntext-primary-blue text-base\r\n`;\r\n\r\nfunction Counter(props) {\r\n  const [clicks, setClicks] = useState(props.number ? props.number : 0);\r\n\r\n  const IncrementItem = () => {\r\n    setClicks(clicks + 1)\r\n  }\r\n  const DecreaseItem = () => {\r\n    clicks > 0 && setClicks(clicks - 1)\r\n  }\r\n\r\n  return (\r\n    <CounterWrapper className=\"counterWrapper\">\r\n      <CounterButton className=\"circle minus\" onClick={() => DecreaseItem()}></CounterButton>\r\n      <span> {clicks} </span>\r\n      <CounterButton className=\"circle plus\" onClick={() => IncrementItem()}></CounterButton>\r\n    </CounterWrapper>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Topbar\\Header.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\card.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\ShoppingCard.jsx",["608","609","610"],"import { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CloseMenuIcon } from \"../../../assets/icons\";\r\nimport { Card } from \"../../styles\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport default function ShoppingCard() {\r\nlet history = useHistory();\r\n\r\nconst handleClick = () => {\r\n   history.push(\"/checkout\");\r\n};\r\n\r\nreturn(\r\n<div tw=\"grid grid-rows-2 p-2.5 overflow-x-auto w-full h-308 bg-white hover:bg-white\">\r\n<table cellSpacing=\"10\" cellPadding=\"2\" tw=\"w-full table-auto\">\r\n    <thead>\r\n        <tr tw=\"border-b\">\r\n            <th tw=\"text-primary-blue pb-1 text-base\" colSpan=\"2\">Shopping Cart</th>\r\n            <th></th>\r\n            <th tw=\"cursor-pointer text-primary-blue\">\r\n                <CloseMenuIcon width=\"13px\" height=\"13px\" />\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr tw=\"text-15 h-14 text-primary-blue font-normal py-10 border-b\">\r\n            <td tw=\"leading-extra-loose\">\r\n                <p tw=\"w-11/12 truncate\">2x Dry, 20' ST, Reuse<br />\r\n                    <span tw=\"text-13 text-light-gray tracking-wide\">Milan, Italy</span>\r\n                </p>\r\n            </td>\r\n            <td tw=\"text-center\">$1,800</td>\r\n        </tr>\r\n        <tr tw=\"text-15 h-14 text-primary-blue font-normal py-10 border-b\">\r\n            <td tw=\"truncate leading-extra-loose\">\r\n                <p tw=\"w-11/12 truncate\">1x Reefer, 40' HC, Recycle<br />\r\n                    <span tw=\"text-13 text-light-gray tracking-wide\">Milan, Italy</span>\r\n                </p>\r\n            </td>\r\n            <td tw=\"text-center\">$1,100</td>\r\n        </tr>\r\n    </tbody>\r\n    <tfoot>\r\n        <tr tw=\"text-13 text-primary-blue font-normal\">\r\n            <td></td>\r\n            <td tw=\"text-right pt-1.5\">SubTotal</td>\r\n            <td tw=\"text-center pt-1.5\">$2,900</td>\r\n        </tr>\r\n        <tr tw=\"text-15 text-primary-blue font-medium\">\r\n            <td></td>\r\n            <td tw=\"text-right pt-1.5\">Total</td>\r\n            <td tw=\"text-center pt-1.5\">$3,190</td>\r\n        </tr>\r\n    </tfoot>\r\n</table>\r\n<Button color=\"primary-blue\" tw=\"border-0 w-269 h-41 text-sm self-end mb-1.5\"\r\n    onClick={() => { handleClick() }} >Go To Checkout</Button>\r\n</div>\r\n    )\r\n }","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\InfoCard.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Card\\ContainerCard.jsx",["611","612","613","614","615","616"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n  getOrderCurrency,\r\n} from \"../../../redux\";\r\nimport Alert from \"../Alert\";\r\n// import Counter from \"../Counter\";\r\nimport { Button, Card, Input, Tooltip } from \"../../styles\";\r\nimport { Container3DIcon } from \"../../../assets/icons\";\r\nimport currencies from \"../../constants/currencies\";\r\nimport { NavbarContext } from \"../../../context/NavbarContext\";\r\n// import axios from \"axios\";\r\n// import { mutate } from \"swr\";\r\nimport PropTypes from \"prop-types\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst Wrapper = tw(Card)`\r\nmd:flex flex-wrap hidden\r\njustify-between \r\npx-4 py-5 space-x-3\r\n`;\r\n\r\nconst WrapperMobile = tw(Card)`\r\nmd:hidden \r\nflex \r\nflex-wrap \r\n`;\r\n\r\nconst VLine = tw.div`\r\nflex \r\nitems-center \r\nbg-gray-200\r\nw-0.5\r\n`;\r\n\r\nconst ContainerIcon = tw.div`\r\npl-4 py-1\r\n`;\r\n\r\nconst Item = tw.div`\r\nflex items-center flex-1\r\ncapitalize text-center\r\ntruncate text-primary-blue\r\npx-4 py-1 text-15 relative\r\n`;\r\n\r\nconst InnerWrapperMobile = tw.div`\r\np-4 h-full flex \r\nflex-col items-center \r\ntext-center\r\n`;\r\n\r\nconst RemoveQuantity = tw.div`\r\ntext-primary-red text-sm \r\nunderline absolute \r\n-bottom-7 cursor-pointer\r\n`;\r\n\r\nconst QuantityLabel = tw.p`\r\nfont-medium text-17 text-primary-blue\r\n`;\r\n\r\nfunction ContainerCard({\r\n  productType,\r\n  productCondition,\r\n  productPrice,\r\n  productCurrency,\r\n  productCity,\r\n  productSize,\r\n  productCountry,\r\n  productId,\r\n  inStock,\r\n  sameCountryAlert,\r\n  setSameCountryAlert,\r\n  ...props\r\n}) {\r\n  let history = useHistory();\r\n  const {\r\n    loggedInUser,\r\n    orderData,\r\n    cartData,\r\n    orderId,\r\n    // orderIdError,\r\n    cartDataError,\r\n    orderDataError,\r\n  } = props;\r\n  // const value = useContext(NavbarContext);\r\n  const [alert, setAlert] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [addToCart, clickAddToCart] = useState({ [productId]: false });\r\n  const [containerQuantity, setContainerQuantity] = useState(1);\r\n  const [onChange, setOnChange] = useState(false);\r\n  // const [remove, setRemove] = useState({ [productId]: false });\r\n  const { quantity, setQuantity, setIsVignetteShown, setIsCartOpen } =\r\n    useContext(NavbarContext);\r\n  const [itemOriginQuantity, setItemOriginQuantity] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   props.getOrderDetails(orderId)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect alert\", alert);\r\n  // }, [alert]);\r\n\r\n  useEffect(() => {\r\n    // console.log('useEffect orderDataError', orderDataError)\r\n    if (orderDataError === \"error\") {\r\n      setContainerQuantity(1);\r\n      setIsVignetteShown(false);\r\n    }\r\n  }, [orderDataError, history]);\r\n\r\n  const getProductOriginQuantity = (id) => {\r\n    var itemOriginQuantity;\r\n    // console.log('getProductOriginQuantity : orderData', orderData)\r\n    // console.log('getProductOriginQuantity : orderDataError', orderDataError)\r\n    // console.log('getProductOriginQuantity : addToCart'+[id], addToCart[id])\r\n    // orderDataError !== 'error' && orderData.length > 0 && orderData.some((order) => {\r\n    orderData.length > 0 &&\r\n      orderData.some((order) => {\r\n        // console.log('getProductOriginQuantity : order', order)\r\n        if (order.productId === id) {\r\n          // console.log('getProductOriginQuantity : id', id)\r\n          itemOriginQuantity = order.quantity;\r\n          // setItemOriginQuantity(order.quantity)\r\n          setIsVignetteShown(true);\r\n          // quantity['productId-'+productId] = parseInt(order.quantity);\r\n          // setQuantity({ ...quantity });\r\n          // console.log('getProductOriginQuantity : order.productId', order.productId)\r\n          // console.log('getProductOriginQuantity : productId', productId)\r\n          // console.log('getProductOriginQuantity : order.quantity', order.quantity)\r\n          return true;\r\n        } else {\r\n          itemOriginQuantity = 0;\r\n          // setItemOriginQuantity(0)\r\n          return false;\r\n        }\r\n      });\r\n    return itemOriginQuantity;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getProductOriginQuantity(productId) && orderDataError !== \"error\")\r\n      setContainerQuantity(getProductOriginQuantity(productId));\r\n  }, [orderDataError, productId, getProductOriginQuantity]);\r\n\r\n  useEffect(() => {\r\n    // console.log('ContainerCard : useEffect orderData', orderData)\r\n    orderData.length > 0 &&\r\n      orderData.map((order) => {\r\n        if (order.productId === productId) {\r\n          // console.log('getProductOriginQuantity : order', order)\r\n          // console.log('ContainerCard : useEffect order.productId', order.productId)\r\n          // console.log('getProductOriginQuantity : productId', productId)\r\n          // console.log('ContainerCard : useEffect order.quantity', order.quantity)\r\n          setItemOriginQuantity(order.quantity);\r\n          // setContainerQuantity(order.quantity)\r\n          setIsVignetteShown(true);\r\n          // quantity['productId-'+productId] = parseInt(order.quantity);\r\n          // setQuantity({ ...quantity });\r\n          // console.log('ContainerCard : useEffect itemOriginQuantity before', itemOriginQuantity)\r\n        } else {\r\n          setItemOriginQuantity(0);\r\n          // setContainerQuantity(1);\r\n          // console.log('ContainerCard : useEffect itemOriginQuantity null', itemOriginQuantity)\r\n        }\r\n        // console.log('ContainerCard : useEffect itemOriginQuantity', itemOriginQuantity)\r\n      });\r\n    // console.log('getProductOriginQuantity itemOriginQuantity', itemOriginQuantity)\r\n    // return itemOriginQuantity\r\n  }, [orderData, addToCart, containerQuantity]);\r\n\r\n  function AddToCart() {\r\n    // console.log('AddToCart : containerQuantity', containerQuantity)\r\n    // console.log('productCountry originCountry', productCountry, cartData[0][\"originCountry\"])\r\n\r\n    if (\r\n      !cartDataError &&\r\n      cartData &&\r\n      cartData[0][\"originCountry\"] &&\r\n      cartData[0][\"originCountry\"] !== productCountry.toLowerCase()\r\n    ) {\r\n      if (!sameCountryAlert && alert === false) {\r\n        setAlert(true);\r\n        setSameCountryAlert(true);\r\n        setMessage(\r\n          \"Only containers from the same country can be added to cart\"\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (containerQuantity > inStock) {\r\n      setAlert(true);\r\n      setMessage(\r\n        \"Quantity is larger than the stock, kindly choose a valid number\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (containerQuantity !== \"\") {\r\n      clickAddToCart({ ...addToCart, [productId]: true });\r\n      quantity[productId] = parseInt(containerQuantity);\r\n      setQuantity({ ...quantity });\r\n      setIsVignetteShown(true);\r\n\r\n      let filterQuery = {\r\n        customerUid: loggedInUser.uid,\r\n        productId: productId,\r\n        price: productPrice,\r\n        quantity: containerQuantity,\r\n      };\r\n\r\n      const filterOrderQuery =\r\n        `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n      props\r\n        .getOrderID(filterQuery)\r\n        .then((response) => {\r\n          props.getOrderSum(filterOrderQuery);\r\n          setItemOriginQuantity(0);\r\n        })\r\n        .then((response) => {\r\n          if (orderId) props.getOrderDetails(orderId);\r\n        });\r\n\r\n      //   props.updateOrderDetails(orderId, filterQuery)\r\n      // .then(response => {\r\n      //   props.getOrderSum(filterOrderQuery)\r\n      // })\r\n      // .then(response => { props.getOrderDetails(orderId) })\r\n      // .then( response => {\r\n      //   if(orderId) props.getOrderDetails(orderId)\r\n      // })\r\n\r\n      // if (addToCart[productId]) {\r\n      //   quantity[productId] = parseInt(containerQte);\r\n      //   setQuantity({ ...quantity });\r\n      //   setIsVignetteShown(true)\r\n      // }\r\n    }\r\n  }\r\n\r\n  // const getoriginQuantity = async () => {\r\n  //   try {\r\n  //     const originQuantity = await getProductOriginQuantity(productId);\r\n  //     setContainerQuantity(getProductOriginQuantity(productId) === 0 ? 1 : getProductOriginQuantity(productId))\r\n  //   } catch (error) {\r\n  //     console.log('error')\r\n  //   }\r\n  // }\r\n\r\n  function handleChange(evt, id) {\r\n    setOnChange(true);\r\n    setAlert(false);\r\n\r\n    const containerQte = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : quantity;\r\n    if (evt.target.value !== \"\") setContainerQuantity(containerQte);\r\n\r\n    // console.log('handleChange : addToCart' + [productId], addToCart[productId])\r\n    // console.log('handleChange : getProductOriginQuantity(productId)', getProductOriginQuantity(productId))\r\n    // if (addToCart[productId] || productExists(true) && containerQte !== \"\") {\r\n    // console.log('addToCart[productId]', addToCart[productId])\r\n    // console.log('getProductOriginQuantity(productId)', getProductOriginQuantity(productId))\r\n    if (addToCart[productId] || getProductOriginQuantity(productId) > 0) {\r\n      if (evt.target.value > inStock) {\r\n        setAlert(true);\r\n        setMessage(\r\n          \"Quantity is larger than the stock, kindly choose a valid number\"\r\n        );\r\n        return;\r\n      } else if (evt.target.value !== \"\" && Number(containerQte)) {\r\n        // console.log('quantity less than in Stock')\r\n        let filterQuery = {\r\n          customerUid: loggedInUser.uid,\r\n          productId: productId,\r\n          quantity: evt.target.value,\r\n        };\r\n\r\n        const filterOrderQuery =\r\n          `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n        props\r\n          .updateOrderDetails(orderId, filterQuery)\r\n          .then((response) => {\r\n            props.getOrderSum(filterOrderQuery);\r\n          })\r\n          .then((response) => {\r\n            if (orderId) props.getOrderDetails(orderId);\r\n          })\r\n          .then((response) => {\r\n            if (cartDataError === \"error\") setIsVignetteShown(false);\r\n          });\r\n\r\n        if (addToCart[productId]) {\r\n          quantity[productId] = parseInt(containerQte);\r\n          setQuantity({ ...quantity });\r\n          setContainerQuantity(containerQte);\r\n          setIsVignetteShown(true);\r\n        }\r\n      } else {\r\n        setContainerQuantity(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleRemove() {\r\n    // alert(\"handleRemove\");\r\n    clickAddToCart({ ...addToCart, [productId]: false });\r\n    // setOnChange(false);\r\n\r\n    let filterQuery = {\r\n      customerUid: loggedInUser.uid,\r\n      productId: productId,\r\n      quantity: 0,\r\n    };\r\n\r\n    const filterOrderQuery = `customerUid=` + loggedInUser.uid + `&status=cart`;\r\n\r\n    props\r\n      .updateOrderDetails(orderId, filterQuery)\r\n      .then((response) => {\r\n        props.getOrderSum(filterOrderQuery);\r\n      })\r\n      .then((response) => {\r\n        if (orderId) props.getOrderDetails(orderId);\r\n      });\r\n\r\n    setContainerQuantity(1);\r\n    setItemOriginQuantity(0);\r\n    setQuantity({});\r\n    // console.log('handleRemove : addToCart' + [productId], addToCart[productId])\r\n    // console.log('handleRemove : onChange', onChange)\r\n    // setIsVignetteShown(false);\r\n\r\n    // setDefaultvalue(1)\r\n    // setQuantity([...quantity, containerQuantity])\r\n\r\n    // setRemove({ ...remove, [productId]: true })\r\n    // console.log('remove containerQuantity', containerQuantity)\r\n    // console.log('remove addToCart', addToCart)\r\n  }\r\n\r\n  // console.log(\"productExists(true)\", productExists(true))\r\n  // console.log(\"productExists(false)\", productExists(false))\r\n\r\n  // useEffect(() => {\r\n  //   if (!onChange) {\r\n  //     // setContainerQuantity(itemOriginQuantity === 0 ? 1 : itemOriginQuantity)\r\n  //   }\r\n  // }, [itemOriginQuantity])\r\n\r\n  //   const getoriginQuantity = async () => {\r\n  //   try {\r\n  //     const originQuantity = await getProductOriginQuantity(productId);\r\n  //     setContainerQuantity(getProductOriginQuantity(productId) === 0 ? 1 : getProductOriginQuantity(productId))\r\n  //   } catch (error) {\r\n  //     console.log('error')\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   if (!onChange && typeof getProductOriginQuantity(productId) !== 'undefined') {\r\n  //     setContainerQuantity(getProductOriginQuantity(productId) === 0 ? 1 : getProductOriginQuantity(productId))\r\n  //   }\r\n  // }, [getProductOriginQuantity(productId)])\r\n\r\n  // if(productExists(true)) setIsVignetteShown(true)\r\n  // var defaultvalue = typeof getProductOriginQuantity(productId) === 'undefined' || getProductOriginQuantity(productId) === 0 ? containerQuantity : getProductOriginQuantity(productId)\r\n\r\n  let alertProps = {\r\n    type: \"error\",\r\n    message: message,\r\n    autoClose: false,\r\n    // dismissTime : 3000,\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n    setAlert,\r\n    setSameCountryAlert,\r\n  };\r\n\r\n  console.log(\r\n    \"Quanity + Remove\" + [productId],\r\n    (!addToCart[productId] && getProductOriginQuantity(productId) > 0) ||\r\n      (addToCart[productId] &&\r\n        cartDataError !== \"error\" &&\r\n        cartData.amount !== 0)\r\n  );\r\n\r\n  // console.log('ContainerCard: orderDataError', orderDataError)\r\n  // console.log('ContainerCard: cartDataError', cartDataError)\r\n  // console.log('ContainerCard: productID', productId)\r\n  // console.log('ContainerCard: itemOriginQuantity', itemOriginQuantity)\r\n  // console.log('remove quantity condition', ((!addToCart[productId] && itemOriginQuantity > 0) || addToCart[productId]) && cartDataError !== 'error' && cartData.amount !== 0 )\r\n  // console.log('ContainerCard: productId', productId)\r\n  // console.log('ContainerCard: quantity', quantity)\r\n  // console.log('ContainerCard: containerQuantity', containerQuantity)\r\n  // console.log('ContainerCard: itemOriginQuantity', itemOriginQuantity)\r\n  // console.log('ContainerCard: orderData', orderData)\r\n  // console.log('ContainerCard: orderDataError', orderDataError)\r\n  // console.log('ContainerCard: addToCart' + [productId], addToCart[productId])\r\n  // if (productId && orderData) console.log('ContainerCard: getProductOriginQuantity(productId)', getProductOriginQuantity(productId))\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {\r\n        //getProductOriginQuantity(productId)\r\n      }\r\n      {/* {\"itemOriginQuantity: \" + itemOriginQuantity} */}\r\n      {/* {\"containerQuantity: \" + containerQuantity} */}\r\n      {/* {((!addToCart[productId] && getProductOriginQuantity(productId) > 0) || addToCart[productId]) && cartDataError !== 'error' ? 'true' : \"false\"} */}\r\n      <Wrapper>\r\n        {alert && <Alert {...(alert ? alertProps : {})} />}\r\n        <ContainerIcon>\r\n          <Container3DIcon alt=\"Container\" />\r\n        </ContainerIcon>\r\n        <Item>\r\n          <p tw=\"w-full\">{productType}</p>\r\n        </Item>\r\n        <VLine />\r\n        <Item>\r\n          <Tooltip>\r\n            <p tw=\"truncate w-full\">\r\n              {productCity}, {productCountry}\r\n            </p>\r\n          </Tooltip>\r\n        </Item>\r\n        <VLine />\r\n        <Item>\r\n          <p tw=\"w-full\">{productSize}ft</p>\r\n        </Item>\r\n        <VLine />\r\n        <Item tw=\"overflow-visible\">\r\n          <p tw=\"w-full\">{productCondition}</p>\r\n        </Item>\r\n        <VLine />\r\n        {loggedInUser ? (\r\n          <>\r\n            <Item>\r\n              <p tw=\"w-full\">\r\n                {currencies[productCurrency]} {productPrice}\r\n              </p>\r\n            </Item>\r\n            <VLine />\r\n            <Item>\r\n              <p tw=\"w-full\">In Stock: {inStock} </p>\r\n            </Item>\r\n            <Item tw=\"overflow-visible m-0\">\r\n              {/* {(addToCart[productId] || productExists(true)) && */}\r\n              {/* {((addToCart[productId] || getProductOriginQuantity(productId) > 0)) && orderDataError !== 'error' && */}\r\n              {((!addToCart[productId] &&\r\n                getProductOriginQuantity(productId) > 0) ||\r\n                addToCart[productId]) &&\r\n                cartDataError !== \"error\" &&\r\n                cartData.amount !== 0 && (\r\n                  <>\r\n                    <QuantityLabel>Quantity:</QuantityLabel>\r\n                    <RemoveQuantity onClick={handleRemove}>\r\n                      Remove\r\n                    </RemoveQuantity>\r\n                  </>\r\n                )}\r\n              {/* <Counter /> */}\r\n              <Input\r\n                tw=\"ml-sm\"\r\n                defaultValue={\r\n                  itemOriginQuantity > 0\r\n                    ? itemOriginQuantity\r\n                    : containerQuantity\r\n                }\r\n                value={containerQuantity}\r\n                maxLength=\"3\"\r\n                pattern=\"[0-9]*\"\r\n                onChange={(e) => handleChange(e, productId)}\r\n              />\r\n              {/* {!addToCart[productId] && !productExists(true) && */}\r\n              {((!addToCart[productId] &&\r\n                getProductOriginQuantity(productId) === 0) ||\r\n                cartDataError === \"error\") && (\r\n                <>\r\n                  <Button\r\n                    color=\"primary-blue\"\r\n                    tw=\"h-10 ml-2.5\"\r\n                    onClick={AddToCart}\r\n                  >\r\n                    Add to cart\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Item>\r\n              <p tw=\"w-full\">\r\n                Starting at: <br /> {currencies[productCurrency]} {productPrice}\r\n              </p>\r\n            </Item>\r\n            <Item tw=\"overflow-visible\">\r\n              <Button\r\n                color=\"primary-blue\"\r\n                onClick={() =>\r\n                  window.location.replace(\r\n                    `${\r\n                      process.env.NODE_ENV === \"development\"\r\n                        ? \"http://localhost:3001\"\r\n                        : \"\"\r\n                    }/auth/sso/login?initialURL=${history.location.pathname}`\r\n                  )\r\n                }\r\n              >\r\n                Sign in to buy\r\n              </Button>\r\n            </Item>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n      <WrapperMobile>\r\n        <InnerWrapperMobile>\r\n          <Container3DIcon\r\n            tw=\"flex-shrink-0 w-full h-20 object-cover object-center mb-4\"\r\n            alt=\"Container\"\r\n          />\r\n          <div tw=\"w-full text-primary-blue text-sm leading-6 text-left\">\r\n            <p tw=\"capitalize\">{productType}</p>\r\n            <p>\r\n              Starting at: {currencies[productCurrency]} {productPrice}\r\n            </p>\r\n            <p tw=\"capitalize\">\r\n              {productCity}, {productCountry} | {productSize}ft |{\" \"}\r\n              {productCondition}\r\n            </p>\r\n            <span tw=\"inline-flex mt-4\">\r\n              <Button color=\"primary-blue\">\r\n                {loggedInUser ? \"Add to cart\" : \"Sign in to buy\"}\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </InnerWrapperMobile>\r\n      </WrapperMobile>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderId: state.orderId,\r\n    orderIdError: state.orderIdError,\r\n    orderData: state.orderData,\r\n    orderDataError: state.orderDataError,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n  getOrderCurrency,\r\n};\r\n\r\nContainerCard.propTypes = {\r\n  productType: PropTypes.string.isRequired,\r\n  productCondition: PropTypes.string.isRequired,\r\n  minPrice: PropTypes.number,\r\n  productCity: PropTypes.string.isRequired,\r\n  productSize: PropTypes.number.isRequired,\r\n  productCountry: PropTypes.string.isRequired,\r\n  productId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerCard);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\checkbox.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\input.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\select.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\button.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Collapse\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\InStock.jsx",["617","618","619","620"],"import React, { useEffect, useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { tableReducer } from \"../../../common/components/Table/DataTable\";\r\nimport {\r\n  hideLoading,\r\n  showLoading,\r\n  updateData,\r\n  saveRowEditors,\r\n  closeRowEditors,\r\n} from \"ka-table/actionCreators\";\r\nimport { ActionType } from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport { containerEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { ContainerTable, tablePropsInit } from \"./common/ContainerTable\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport {\r\n  StyledDownloadIcon as DownloadIcon,\r\n  HeaderTitle,\r\n  HeaderWrapper,\r\n  Line,\r\n  Number,\r\n} from \"./common/style\";\r\nimport { flattenData } from \"../../../common/utils/functions\";\r\nimport Alert from \"../../../common/components/Alert.jsx\";\r\nimport { Card, Button, Loader } from \"../../../common/styles\";\r\nimport axios from \"axios\";\r\nimport { mutate } from \"swr\";\r\nimport \"twin.macro\";\r\n\r\nconst InStock = () => {\r\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  const [filters, setFilters] = useState({\r\n    page: 1,\r\n    containerStatus: \"available\",\r\n  });\r\n  const [alert, setAlert] = useState(false);\r\n  const [movedContainers, setMovedContainers] = useState(0);\r\n  const [deleteContainers, setDeleteContainers] = useState(false);\r\n\r\n  const { filterQuery } = useQueryBuilder(filters);\r\n  const { data, isError, isLoading } = useQuery(\r\n    `${containerEndpoints.list}?${filterQuery}`\r\n  );\r\n\r\n  const {\r\n    data: containersCount,\r\n    isCountError,\r\n    isCountLoading,\r\n  } = useQuery(`${containerEndpoints.count}?containerStatus=available`);\r\n\r\n  function capitalize(arr) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var condition = arr[i].containerCondition;\r\n      var type = arr[i].containerTypeDisplay;\r\n      if (condition !== null)\r\n        arr[i].containerCondition =\r\n          condition.slice(0, 1).toUpperCase() +\r\n          condition.slice(1).toLowerCase();\r\n      if (type !== null)\r\n        arr[i].containerTypeDisplay =\r\n          type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(showLoading());\r\n    } else if (data) {\r\n      dispatch(hideLoading());\r\n      dispatch({ type: \"LOAD_TOTAL_PAGES\", payload: data.length });\r\n      dispatch(updateData(capitalize(data.containers)));\r\n    } else {\r\n      dispatch(hideLoading());\r\n      dispatch(updateData([]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isLoading, isError]);\r\n\r\n  const handleEdit = (containerId, updatedObject) => {\r\n    dispatch(showLoading());\r\n    axios\r\n      .put(\r\n        `${containerEndpoints.list}/${containerId}`,\r\n        updatedObject\r\n      )\r\n      .then(\r\n        () => {\r\n          dispatch(hideLoading());\r\n          dispatch(\r\n            saveRowEditors(containerId, {\r\n              validate: true,\r\n            })\r\n          );\r\n        },\r\n        (error) => {\r\n          dispatch(hideLoading());\r\n          dispatch(closeRowEditors(containerId));\r\n          //TODO: Replace with Alert\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const dispatch = (action) => {\r\n    switch (action.type) {\r\n      case ActionType.UpdateFilterRowValue:\r\n        let updatedFilters = {};\r\n        switch (action.columnKey) {\r\n          case \"containerPrice\":\r\n            updatedFilters[\"maxPrice\"] = action.filterRowValue;\r\n            break;\r\n          case \"containerTypeDisplay\":\r\n            updatedFilters[\"containerType\"] = action.filterRowValue;\r\n            break;\r\n          default:\r\n            updatedFilters[action.columnKey] = action.filterRowValue;\r\n        }\r\n        setFilters({ ...filters, ...updatedFilters });\r\n        break;\r\n      case ActionType.UpdatePageIndex:\r\n        setFilters({ ...filters, page: action.pageIndex + 1 });\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n        break;\r\n      case \"INTERCEPT_EDIT\":\r\n        const containerId = action.rowKeyValue;\r\n        changeTableProps((prevState) => {\r\n          let updateObject = {\r\n            containerCondition: \"\",\r\n            containerPrice: \"\",\r\n            containerStatus: \"\",\r\n          };\r\n          prevState.editableCells\r\n            .filter(\r\n              (cell) =>\r\n                cell.rowKeyValue === containerId &&\r\n                cell.columnKey !== \"editColumn\"\r\n            )\r\n            .forEach(\r\n              (key) =>\r\n                (updateObject[key.columnKey] = key.editorValue\r\n                  ? key.editorValue\r\n                  : \"\")\r\n            );\r\n          handleEdit(containerId, updateObject);\r\n          return tableReducer(prevState, action);\r\n        });\r\n        break;\r\n      default:\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n    }\r\n  };\r\n\r\n  // const before containersToUpdate is removed as it is now declared in the upper scope\r\n  const handleStatus = (deleted) => {\r\n    containersToUpdate = selectedData.map((container) => {\r\n      return {\r\n        containerNo: container.containerNo,\r\n        // containerStatus: deleted ? \"deleted\" : \"awaiting confirmation\",\r\n      };\r\n    });\r\n\r\n    const selectedContainersNumbers = flattenData(\r\n      containersToUpdate,\r\n      \"containerNo\"\r\n    );\r\n\r\n    dispatch(showLoading());\r\n    axios.put(\"/products/laraContainers\", containersToUpdate).then(\r\n      () => {\r\n        dispatch(hideLoading());\r\n        if (deleted) {\r\n          setDeleteContainers(true);\r\n        }\r\n        setMovedContainers(containersToUpdate.length);\r\n        setAlert(true);\r\n\r\n        mutate(`${containerEndpoints.count}?containerStatus=available`);\r\n        dispatch(\r\n          updateData(\r\n            kaPropsUtils.getData(tableProps).filter((elem) => {\r\n              return !selectedContainersNumbers.includes(elem.containerNo);\r\n            })\r\n          )\r\n        );\r\n      },\r\n      (error) => {\r\n        dispatch(hideLoading());\r\n        //TODO: Replace with Alert\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  let props = {\r\n    type: \"success\",\r\n    message:\r\n      movedContainers +\r\n      (deleteContainers\r\n        ? \" containers deleted\"\r\n        : \" containers moved to awaiting confirmation\"),\r\n    autoClose: false,\r\n    // dismissTime : 10000\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n  };\r\n\r\n  var containersToUpdate = selectedData.map((container) => {\r\n    return {\r\n      containerNo: container.containerNo,\r\n    };\r\n  });\r\n\r\n  let deleteContainersinStockProps = {\r\n    message:\r\n      \"Are you sure you want to delete \" +\r\n      containersToUpdate.length +\r\n      (containersToUpdate.length === 1 ? \" container\" : \" containers ?\"),\r\n    button1: \"Cancel\",\r\n    button2: \"Delete\",\r\n    buttonColor: \"outline-blue\",\r\n  };\r\n\r\n  let moveToAwaitingConfirmationProps = {\r\n    message:\r\n      \"Are you sure you want to move \" +\r\n      containersToUpdate.length +\r\n      (containersToUpdate.length === 1 ? \" container\" : \" containers ?\") +\r\n      \" to 'Containers Awaiting Confirmation' List ? This will hide them from potential buyers.\",\r\n    button1: \"Move Containers\",\r\n    button2: \"Cancel\",\r\n    buttonColor: \"outline-blue\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <Alert {...(alert ? props : {})} />\r\n        <HeaderTitle>\r\n          Containers In Stock\r\n          <Line />\r\n          <Number>{containersCount && `${containersCount.count}`}</Number>\r\n          <CSVLink\r\n            data={kaPropsUtils.getData(tableProps)}\r\n            headers={tableProps.columns.map((c) => ({\r\n              label: c.title,\r\n              key: c.key,\r\n            }))}\r\n            filename=\"containers.data.csv\"\r\n          >\r\n            <DownloadIcon />\r\n          </CSVLink>\r\n        </HeaderTitle>\r\n        {selectedData.length ? (\r\n          <div tw=\"space-x-3 grid grid-cols-2ColAuto h-minContent\">\r\n            <Modal\r\n              width=\"450px\"\r\n              height=\"auto\"\r\n              titleFontSize=\"24px\"\r\n              component={\r\n                <Button color=\"primary-blue\">\r\n                  Move to awaiting confirmation\r\n                </Button>\r\n              }\r\n              title=\"Move to awaiting confirmation\"\r\n              children={\r\n                <Popup\r\n                  name=\"moveToAwaitingConfirmation\"\r\n                  {...moveToAwaitingConfirmationProps}\r\n                  accept={() => handleStatus(false)}\r\n                />\r\n              }\r\n            />\r\n            {/* <Modal\r\n              width=\"450px\"\r\n              height=\"auto\"\r\n              titleFontSize=\"24px\"\r\n              component={<Button color=\"primary-blue\">Delete</Button>}\r\n              title=\"Delete\"\r\n              children={\r\n                <Popup\r\n                  name=\"deleteContainersInStock\"\r\n                  {...deleteContainersinStockProps}\r\n                  accept={handleStatus}\r\n                />\r\n              }\r\n            /> */}\r\n          </div>\r\n        ) : null}\r\n      </HeaderWrapper>\r\n      <Card tw=\"p-10\">\r\n        <ContainerTable name=\"inStock\" tableProps={tableProps} dispatch={dispatch} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InStock;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\Selection.jsx",["621","622","623","624","625","626","627"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n} from \"../../../redux\";\r\nimport ChooseContainers from \"./ChooseContainers\";\r\nimport ListDocuments from \"./ListDocuments\";\r\nimport { ShoppingCartIcon, DocumentIcon } from \"../../../assets/icons\";\r\nimport { Card, Button } from \"../../../common/styles\";\r\n\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst Header = tw.div`\r\ntext-primary-blue text-17 font-bold\r\n`;\r\n\r\nconst RefId = tw.span`\r\nfont-normal`;\r\n\r\nconst Wrapper = styled.section``;\r\n\r\nconst SelectionCard = tw(Card)`\r\nh-full min-h-containersSelection`;\r\n\r\nconst Title = tw.div`\r\ngrid grid-cols-2 \r\nmax-w-275 pt-5\r\n`;\r\n\r\nconst TabBtn = tw(Button)`\r\ngrid grid-cols-25Auto gap-2.5\r\ntext-17 text-left pl-0\r\n`;\r\n\r\nconst SelectContainers = (props) => {\r\n  const {\r\n    loggedInUser,\r\n    orderId,\r\n    orderData,\r\n    cartData,\r\n    productData,\r\n    cartDataError,\r\n  } = props;\r\n  const [step, setStep] = useState(1);\r\n\r\n  // const queryString = window.location.search;\r\n  // const urlParams = new URLSearchParams(queryString);\r\n  // const referenceNo = urlParams.get('refNo')\r\n\r\n  // useEffect(() => {\r\n  //     props.getOrderDetails(props.location.booking.reference)\r\n  // }, [])\r\n\r\n  // console.log('SelectContainers props.orderData', props.orderData)\r\n  // console.log('SelectContainers props.orderId', props.orderId)\r\n  // console.log('SelectContainers props.location', props.location)\r\n  console.log(\"selection orderId\", props.location.state.reference);\r\n  return (\r\n    <SelectionCard>\r\n      {/* <Header>Booking Reference #: <RefId>{referenceNo}</RefId> </Header> */}\r\n      <Header>\r\n        Booking Reference #: <RefId>{props.location.state.reference}</RefId>{\" \"}\r\n      </Header>\r\n      <Wrapper>\r\n        <Title>\r\n          <TabBtn\r\n            onClick={() => setStep(1)}\r\n            color={step === 1 ? \"neutral-blue\" : \"neutral\"}\r\n          >\r\n            <ShoppingCartIcon\r\n              tw=\"outline-none\"\r\n              width=\"25px\"\r\n              height=\"25px\"\r\n              style={{ color: step === 2 ? \"#d3dce1\" : \"#04246A\" }}\r\n              alt=\"Shopping Cart\"\r\n            />\r\n            <p style={{ color: step === 1 ? \"#04246A\" : \"#d3dce1\" }}>Booking</p>\r\n          </TabBtn>\r\n          <TabBtn\r\n            onClick={() => setStep(2)}\r\n            color={step === 2 ? \"neutral-blue\" : \"neutral\"}\r\n          >\r\n            <DocumentIcon\r\n              tw=\"outline-none\"\r\n              width=\"25px\"\r\n              height=\"25px\"\r\n              style={{ fill: step === 1 ? \"#d3dce1\" : \"#04246A\" }}\r\n              alt=\"Documents\"\r\n            />\r\n            <p style={{ color: step === 1 ? \"#d3dce1\" : \"#04246A\" }}>\r\n              Documents\r\n            </p>\r\n          </TabBtn>\r\n        </Title>\r\n        <section>\r\n          {step === 1 ? (\r\n            <ChooseContainers orderId={props.location.state.reference} />\r\n          ) : (\r\n            <ListDocuments orderId={props.location.state.reference} />\r\n          )}\r\n        </section>\r\n      </Wrapper>\r\n    </SelectionCard>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    count: state.count,\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n    productData: state.productData,\r\n    updateProduct: state.updateProduct,\r\n    orderDataError: state.orderDataError,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectContainers);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\BookingList.jsx",["628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  // ITableProps,\r\n  kaReducer,\r\n  // Table\r\n} from \"ka-table\";\r\nimport { mutate } from \"swr\";\r\nimport {\r\n  closeRowEditors,\r\n  hideLoading,\r\n  saveRowEditors,\r\n  showLoading,\r\n  updateData,\r\n  updateCellValue,\r\n  changeCellValue,\r\n} from \"ka-table/actionCreators\";\r\nimport { ActionType } from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\n// import Modal from \"../../../common/components/Modal/Modal\";\r\n// import Popup from \"../../../common/components/Popup\";\r\nimport { Card, Button, Select, Loader } from \"../../../common/styles\";\r\nimport {\r\n  StyledDownloadIcon as DownloadIcon,\r\n  HeaderTitle,\r\n  HeaderWrapper,\r\n  Line,\r\n  Number,\r\n} from \"./common/style\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { tableReducer } from \"../../../common/components/Table/DataTable\";\r\nimport { BookingTable, tablePropsInit } from \"./common/BookingTable\";\r\nimport DropdownComponent from \"../../../common/components/Dropdown\";\r\nimport { flattenData } from \"../../../common/utils/functions\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { orderEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport axios from \"axios\";\r\nimport {\r\n  deselectAllFilteredRows,\r\n  deselectRow,\r\n  selectAllFilteredRows,\r\n  selectRow,\r\n  selectRowsRange,\r\n  updateFilterRowValue,\r\n  openRowEditors,\r\n  updateEditorValue,\r\n} from \"ka-table/actionCreators\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst ViewBookings = (props) => {\r\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  const [filters, setFilters] = useState({\r\n    page: 1,\r\n    status: \"booked\",\r\n  });\r\n  const [alert, setAlert] = useState(false);\r\n  const [confirmedContainers, setConfirmedContainers] = useState(0);\r\n  const { loggedInUser } = props;\r\n\r\n  const { filterQuery } = useQueryBuilder(filters);\r\n\r\n  const { data, isError, isLoading } = useQuery(\r\n    `${orderEndpoints.cart}?${filterQuery}`\r\n  );\r\n\r\n  const [bookingData, setBookingData] = useState(data);\r\n  const [isClose, setIsClose] = useState(false);\r\n  // console.log('isError', isError)\r\n  // console.log(\"BookingList: typeof isError\", typeof isError);\r\n\r\n  // useEffect(() => {\r\n  //   if (isError && typeof isError === \"object\")\r\n  //     dispatch(updateData(\"No items match your search\"));\r\n  // }, [isError]);\r\n  // const { data: customerData, isCountError, isCountLoading } = useQuery(\r\n  //   `${customerEndpoints.list}`\r\n  // );\r\n\r\n  // const { data: containersCount, isCountError, isCountLoading } = useQuery(\r\n  //   `${containerEndpoints.count}?containerStatus=awaiting confirmation`\r\n  // );\r\n  const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  // useEffect(() => {\r\n  //   const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n\r\n  // const selectedData = kaPropsUtils.areAllFilteredRowsSelected(tableProps);\r\n  // const selectedData = tableProps;\r\n  console.log(\"BookingList: tablePropsInit\", tablePropsInit);\r\n  // console.log('BookingList: selectedData', selectedData)\r\n\r\n  // const dispatch = (action) => {\r\n  //   // console.log('BookingList: dispatch action.type', action.type)\r\n  //   changeTableProps((prevState) => kaReducer(prevState, action));\r\n  // };\r\n\r\n  async function getBookings() {\r\n    try {\r\n      await axios.get('/locations?agentUid='+loggedInUser.uid)\r\n        .then(function (response) {\r\n          console.log('getBookings locations response.data', response.data);\r\n          axios.get('../orders?page=1&status=booked&originCountry='+response.data.containers[0].country).then(\r\n                  (res) => {\r\n                    console.log('get bookings success !');\r\n                    console.log('get bookings response !', res);\r\n                    setBookingData(res.data)\r\n                  }, (error) => {\r\n                    console.log('get bookings error !', error);\r\n                  }\r\n                )\r\n          // return res.redirect(`${process.env.AUTH_ROUTE_URL}/success`);\r\n        })\r\n        .catch(function (error) {\r\n          console.log('getBookings response error', error);\r\n          // return error.message;\r\n        });\r\n    } catch {\r\n      throw new Error('Bookings Invalidity')\r\n    }\r\n  }\r\n\r\n    useEffect(() =>{\r\n      // getBookings()\r\n    }, [])\r\n\r\n   // axios\r\n  // .put('/locations?agentUid='+loggedInUser)\r\n  // .then(\r\n  //   (response) => {\r\n  //     axios.put('orders?status='booked'&originCountry='+response.data.containers[0].country).then(\r\n  //       () => {\r\n  //         console.log('booking success !');\r\n  //         getOrderStatus('booked')\r\n  //         setStep(2);\r\n  //       }, (error) => {\r\n  //         console.log('Update Order booking error !', error);\r\n  //       }\r\n  //     )\r\n  //   },\r\n  //   (error) => {\r\n  //     console.log('booking error !', error)\r\n  //   }\r\n  // }\r\n\r\n  // axios.get(`/profile`).then((results) => {\r\n  //   dispatch({\r\n  //     type: 'GET_USER_SUCCESS',\r\n  //     loggedInUser: results.data,\r\n  //   })\r\n  // }).catch(error => {\r\n  //   // throw(error)\r\n  //   dispatch({\r\n  //     type: 'GET_USER_SUCCESS',\r\n  //     loggedInUser: null,\r\n  //   })\r\n  // })\r\n  \r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect bookingData\", bookingData);\r\n    // console.log('useEffect data', data)\r\n    if (isLoading) {\r\n      dispatch(showLoading());\r\n    } else if (data || bookingData) {\r\n      dispatch(hideLoading());\r\n      if (!bookingData && data) {\r\n              // const appendFullNameToAgents = data.agents.map(v => ({...v, fullName: v.firstName+ \" \"+v.lastName}))\r\n        console.log(\"!bookingData && data\");\r\n        console.log(\"bookingDate : data object\", data);\r\n        // console.log(\r\n        // \"bookingDate : typeof bookingDate\",\r\n        // typeof data[0].bookingDate\r\n        // );\r\n        // console.log(\"bookingDate : typeof orderId\", typeof data[0].orderId);\r\n        // console.log(\"bookingDate : typeof orderDate\", typeof data[0].orderDate);\r\n        // console.log(\r\n        // \"bookingDate : typeof customerUid\",\r\n        // typeof data[0].customerUid\r\n        // );\r\n        dispatch({ type: \"LOAD_TOTAL_PAGES\", payload: data.length });\r\n        const appendFullNameToBuyers = data.map(v => ({...v, fullName: v.customerFirstName+ \" \"+v.customerLastName}))\r\n        console.log('appendFullNameToBuyers', appendFullNameToBuyers)\r\n        // var date = new Date(); // Will use computers date by default.\r\n        // console.log('booking : date', date); // Wed Jan 01 2014 13:28:56 GMT-1000 (Hawaiian Standard Time)\r\n        // console.log('booking : typeof date', typeof date);\r\n        // var json = JSON.stringify(date);\r\n        // console.log('booking : json', json);  // \"2014-01-01T23:28:56.782Z\"\r\n        // console.log('booking : json', typeof json);\r\n        //parameters will specify date you put to input\r\n        // var date = new Date(year, month, day, hours, minutes, seconds, milliseconds);\r\n        // console.log('bookingDate : var date = new Date(), date is of type Date => typeof date', typeof date, '& date instanceof Date', date instanceof Date)\r\n        // console.log(\"bookingDate : typeof date\", typeof date);\r\n        // console.log(\"bookingDate : typeof date 2\", date instanceof Date);\r\n        // console.log(\r\n        // 'bookingDate : but typeof bookingDate', typeof data[0].bookingDate, '& bookingDate instanceof Date',\r\n        // data[0].bookingDate instanceof Date, 'hence bookingDate is not of type Date'\r\n        // );\r\n        // console.log('Object.prototype.toString.call(bookingDate)', Object.prototype.toString.call(data[0].bookingDate))\r\n        setBookingData(appendFullNameToBuyers);\r\n        dispatch(updateData(appendFullNameToBuyers));\r\n      } else {\r\n        const appendFullNameToBuyers = bookingData.map(v => ({...v, fullName: v.customerFirstName+ \" \"+v.customerLastName}))\r\n        // console.log('appendFullNameToBuyers', appendFullNameToBuyers)\r\n        // console.log(\"not !bookingData && data\");\r\n        // console.log(\"useEffect bookingData\");\r\n        setBookingData(bookingData);\r\n        dispatch(updateData(appendFullNameToBuyers));\r\n      }\r\n      // console.log(\"BookingList: data typeof \", typeof data);\r\n      // console.log(\"BookingList: data\", data);\r\n      // console.log(\r\n      //   \"BookingList: data typeof orderDate\",\r\n      //   typeof data[0][\"orderDate\"]\r\n      // );\r\n\r\n      // if (!bookingData) dispatch(updateData(data));\r\n      // else\r\n      // dispatch(updateData(bookingData));\r\n    } else {\r\n      dispatch(hideLoading());\r\n      dispatch(updateData([]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isLoading, isError, bookingData]);\r\n\r\n  const handleStatus = (confirm) => {\r\n    const containersToUpdate = selectedData.map((container) => {\r\n      return {\r\n        containerNo: container.containerNo,\r\n        containerStatus: confirm ? \"available\" : \"unavailable\",\r\n      };\r\n    });\r\n    const selectedContainersNumbers = flattenData(\r\n      containersToUpdate,\r\n      \"containerNo\"\r\n    );\r\n    dispatch(showLoading());\r\n    axios.put(orderEndpoints.updateContainerStatus, containersToUpdate).then(\r\n      () => {\r\n        dispatch(hideLoading());\r\n        if (confirm) {\r\n          setConfirmedContainers(containersToUpdate.length);\r\n          setAlert(true);\r\n        }\r\n        mutate(`${orderEndpoints.count}?containerStatus=awaiting confirmation`);\r\n        dispatch(\r\n          updateData(\r\n            kaPropsUtils.getData(tableProps).filter((elem) => {\r\n              return !selectedContainersNumbers.includes(elem.containerNo);\r\n            })\r\n          )\r\n        );\r\n      },\r\n      (error) => {\r\n        dispatch(hideLoading());\r\n        //TODO: Replace with Alert\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleEdit = (containerId, updatedObject) => {\r\n    // console.log(\"handleEdit updatedObject1\", updatedObject);\r\n    const filterQuery = {\r\n      bookingStatus: updatedObject.bookingStatus,\r\n      customsClearanceMethod: \"\",\r\n      documentStatus: \"\",\r\n      paymentStatus: updatedObject.paymentStatus,\r\n      status: \"booked\",\r\n    };\r\n    // console.log(\"handleEdit updatedObject2\", updatedObject);\r\n\r\n    var bookingD = [...bookingData];\r\n    var index = bookingD.findIndex(\r\n      (x) => x.orderId === parseInt(updatedObject.orderId)\r\n    );\r\n    if (index === -1) {\r\n    }\r\n    // handle error\r\n    else {\r\n      // console.log(\"bookingD index\", index);\r\n      if (updatedObject.bookingStatus.length > 0)\r\n        bookingD[index].bookingStatus = updatedObject.bookingStatus;\r\n      if (updatedObject.paymentStatus.length > 0)\r\n        bookingD[index].paymentStatus = updatedObject.paymentStatus;\r\n      // console.log(\"bookingD\", bookingD);\r\n      setIsClose(true);\r\n      setBookingData([...bookingD]);\r\n    }\r\n\r\n    dispatch(showLoading());\r\n    axios.put(\"/orders/\" + updatedObject.orderId, filterQuery).then(\r\n      (results) => {\r\n        // console.log(\"results.data\", results.data);\r\n        dispatch(hideLoading());\r\n      },\r\n      (error) => {\r\n        dispatch(hideLoading());\r\n        // dispatch(closeRowEditors(containerId));\r\n        //TODO: Replace with Alert\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const dispatch = (action) => {\r\n    // console.log(\"dispatch action\", action);\r\n    // changeTableProps((prevState) => tableReducer(prevState, action));\r\n    // console.log(\"dispatch action.type\", action.type);\r\n\r\n    switch (action.type) {\r\n      case ActionType.UpdateFilterRowValue:\r\n        let updatedFilters = {};\r\n        switch (action.columnKey) {\r\n          case \"bookingDate\":\r\n            console.log(\"it is a date\");\r\n            // console.log('bookingDate value', action.filterRowValue)\r\n            // var d = new Date(action.filterRowValue);\r\n            // console.log('new date d', d)\r\n            // var month = d.getMonth(),\r\n            // date = d.getDate(),\r\n            // year = d.getFullYear();\r\n            // console.log('year + month + date', year + '-' + month + '-' +date)\r\n            updatedFilters[\"bookingDate\"] = action.filterRowValue;\r\n            // .toLocaleDateString(\"en\", {\r\n            //   year: \"numeric\",\r\n            //   month: \"2-digit\",\r\n            //   day: \"2-digit\",\r\n            // })\r\n            // .replaceAll(\"/\", \"-\");\r\n            break;\r\n          case \"containerTypeDisplay\":\r\n            updatedFilters[\"containerType\"] = action.filterRowValue;\r\n            break;\r\n          case \"customerFirstName\":\r\n            updatedFilters[\"customerUid\"] = action.filterRowValue;\r\n            break;\r\n          default:\r\n            console.log(\"dispatch filters\", action.filterRowValue);\r\n            updatedFilters[action.columnKey] = action.filterRowValue;\r\n        }\r\n        setFilters({ ...filters, ...updatedFilters });\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n        break;\r\n\r\n      case ActionType.UpdatePageIndex:\r\n        setFilters({ ...filters, page: action.pageIndex + 1 });\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n        break;\r\n\r\n      case \"INTERCEPT_EDIT\":\r\n        // console.log(\"INTERCEPT_EDIT clicked\");\r\n        // const containerId = action.rowKeyValue;\r\n        // console.log(\"INTERCEPT_EDIT containerId\");\r\n        // console.log(\"INTERCEPT_EDIT column\");\r\n        changeTableProps((prevState) => {\r\n          // console.log(\"prevState\", prevState);\r\n          let updateObject = {\r\n            orderId: \"\",\r\n            bookingStatus: \"\",\r\n            paymentStatus: \"\",\r\n          };\r\n\r\n          prevState.selectedRows\r\n            // .filter(\r\n            //   (cell) =>\r\n            //     console.log(\"selectedRows cell\", cell) ||\r\n            //     (cell.rowKeyValue === containerId &&\r\n            //       cell.columnKey !== \"editColumn\")\r\n            // )\r\n            .forEach((key, i) => {\r\n              updateObject[\"orderId\"] = key;\r\n              action.column === \"bookingStatus\"\r\n                ? (updateObject[\"bookingStatus\"] = action.value)\r\n                : (updateObject[\"paymentStatus\"] = action.value);\r\n              handleEdit(key, updateObject);\r\n            });\r\n          return tableReducer(prevState, action);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n    }\r\n  };\r\n\r\n  console.log(\"BookingList: tableProps\", tableProps);\r\n  // console.log(\"BookingList: filters\", filters);\r\n  // if (bookingData && bookingData[0].bookingDate) {\r\n  //   console.log(\"bookingData\", bookingData);\r\n  //   console.log(\"bookingData date\", bookingData[0].bookingDate);\r\n  //   console.log(\"bookingData typeof date\", typeof bookingData[0].bookingDate);\r\n  // }\r\n  // console.log(\r\n  //   \"BookingList: selectedData\",\r\n  //   kaPropsUtils.getSelectedData(tableProps)\r\n  // );\r\n  // console.log(\"BookingList: kaPropsUtils\", kaPropsUtils);\r\n  // console.log('customerData', customerData)\r\n  // console.log(\"tableProps.selectedRows\", tableProps.selectedRows);\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <HeaderTitle>\r\n          Bookings\r\n          <Line />\r\n          <Number>{tableProps && tableProps.data.length}</Number>\r\n          <CSVLink\r\n            data={kaPropsUtils.getData(tableProps)}\r\n            headers={tableProps.columns.map((c) => ({\r\n              label: c.title,\r\n              key: c.key,\r\n            }))}\r\n            filename=\"bookings.data.csv\"\r\n          >\r\n            <DownloadIcon />\r\n          </CSVLink>\r\n        </HeaderTitle>\r\n        {tableProps.selectedRows && tableProps.selectedRows.length ? (\r\n          <div tw=\"grid grid-cols-2ColAuto h-minContent\">\r\n            <DropdownComponent\r\n              aria-label=\"Menu\"\r\n              isClose={isClose}\r\n              disclosure={\r\n                <Button tw=\"flex\" onClick={() => setIsClose(false)}>\r\n                  <h1 tw=\"text-primary-blue text-15\">Change Booking Status </h1>\r\n                  <svg\r\n                    style={{ width: 15 }}\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n                      clip-rule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </Button>\r\n              }\r\n              items={[\r\n                <option\r\n                  value=\"none\"\r\n                  tw=\"text-13\"\r\n                  onClick={() => {\r\n                    // setCloseDropdown(true);\r\n                    dispatch({\r\n                      type: \"INTERCEPT_EDIT\",\r\n                      column: \"bookingStatus\",\r\n                      value: \"none\",\r\n                      //   // rowKeyValue,\r\n                    });\r\n                    // dispatch(updateCellValue(rowKeyValue, column.key, editorValue));\r\n                  }}\r\n                >\r\n                  None\r\n                </option>,\r\n                <option\r\n                  value=\"ready for pick up\"\r\n                  tw=\"text-13\"\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"INTERCEPT_EDIT\",\r\n                      column: \"bookingStatus\",\r\n                      value: \"ready for pick up\",\r\n                      //   // rowKeyValue,\r\n                    });\r\n                    // dispatch(updateCellValue(rowKeyValue, column.key, editorValue));\r\n                  }}\r\n                >\r\n                  Ready for Pick up\r\n                </option>,\r\n                <option\r\n                  value=\"picked up\"\r\n                  tw=\"text-13\"\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"INTERCEPT_EDIT\",\r\n                      column: \"bookingStatus\",\r\n                      value: \"picked up\",\r\n                      //   // rowKeyValue,\r\n                    });\r\n                    // dispatch(updateCellValue(rowKeyValue, column.key, editorValue));\r\n                  }}\r\n                >\r\n                  Picked up\r\n                </option>,\r\n              ]}\r\n            ></DropdownComponent>\r\n            <DropdownComponent\r\n              aria-label=\"Menu\"\r\n              isClose={isClose}\r\n              disclosure={\r\n                <Button tw=\"flex\" onClick={() => setIsClose(false)}>\r\n                  <h1 tw=\"text-primary-blue text-15\">Change Payment Status </h1>\r\n                  <svg\r\n                    style={{ width: 15 }}\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n                      clip-rule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </Button>\r\n              }\r\n              items={[\r\n                <option\r\n                  value=\"none\"\r\n                  tw=\"text-13\"\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"INTERCEPT_EDIT\",\r\n                      column: \"documentStatus\",\r\n                      value: \"none\",\r\n                      //   // rowKeyValue,\r\n                    });\r\n                    // dispatch(updateCellValue(rowKeyValue, column.key, editorValue));\r\n                  }}\r\n                >\r\n                  None\r\n                </option>,\r\n                <option\r\n                  value=\"invoice sent\"\r\n                  tw=\"text-13\"\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"INTERCEPT_EDIT\",\r\n                      column: \"documentStatus\",\r\n                      value: \"invoice sent\",\r\n                      //   // rowKeyValue,\r\n                    });\r\n                    // dispatch(updateCellValue(rowKeyValue, column.key, editorValue));\r\n                  }}\r\n                >\r\n                  Invoice Sent\r\n                </option>,\r\n              ]}\r\n            ></DropdownComponent>\r\n          </div>\r\n        ) : null}\r\n      </HeaderWrapper>\r\n      <Card>\r\n        <BookingTable tableProps={tableProps} dispatch={dispatch} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewBookings);","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\AwaitingConfirmation.jsx",["648"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { mutate } from \"swr\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport { Card, Button, Loader } from \"../../../common/styles\";\r\nimport {\r\n  StyledDownloadIcon as DownloadIcon,\r\n  HeaderTitle,\r\n  HeaderWrapper,\r\n  Line,\r\n  Number,\r\n} from \"./common/style\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\n// import {\r\n//   // ITableProps,\r\n//   kaReducer,\r\n//   // Table\r\n// } from 'ka-table';\r\nimport { tableReducer } from \"../../../common/components/Table/DataTable\";\r\nimport {\r\n  closeRowEditors,\r\n  hideLoading,\r\n  saveRowEditors,\r\n  showLoading,\r\n  updateData,\r\n} from \"ka-table/actionCreators\";\r\nimport { ActionType } from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { containerEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport { ContainerTable, tablePropsInit } from \"./common/ContainerTable\";\r\nimport Alert from \"../../../common/components/Alert.jsx\";\r\nimport { flattenData } from \"../../../common/utils/functions\";\r\nimport axios from \"axios\";\r\nimport \"twin.macro\";\r\n\r\nconst AwaitingConfirmation = (props) => {\r\n  const { loggedInUser } = props;\r\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  const [filters, setFilters] = useState({\r\n    page: 1,\r\n    status: \"awaiting confirmation\",\r\n    agentUid: loggedInUser.uid,\r\n  });\r\n  const [alert, setAlert] = useState(false);\r\n  const [alertConfirm, setAlertConfirm] = useState(false);\r\n  const [confirmedContainers, setConfirmedContainers] = useState(0);\r\n\r\n  // console.log('Awaiting confirmation: tablePropsInit', tablePropsInit)\r\n\r\n  const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  // console.log('Awaiting confirmation: tableProps', tableProps)\r\n  // console.log('Awaiting confirmation: kaPropsUtils', kaPropsUtils)\r\n  // console.log('Awaiting confirmation: selectedData', kaPropsUtils.getSelectedData(tableProps))\r\n\r\n  const { filterQuery } = useQueryBuilder(filters);\r\n\r\n  const { data, isError, isLoading } = useQuery(\r\n    `${containerEndpoints.laralist}?${filterQuery}`\r\n  );\r\n  console.log(\"awaiting isError\", isError);\r\n  // `${containerEndpoints.laralist}?containerStatus=awaiting confirmation`\r\n  // const { data: containersCount, isCountError, isCountLoading } = useQuery(\r\n  //   `${containerEndpoints.count}?containerStatus=awaiting confirmation`\r\n  // );\r\n\r\n  // console.log('data.containers', data.containers)\r\n\r\n  function capitalize(arr) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var first = arr[i].containerCondition;\r\n      // var last = arr[i].lname;\r\n      if (first !== null)\r\n        arr[i].containerCondition =\r\n          first.slice(0, 1).toUpperCase() + first.slice(1).toLowerCase();\r\n      // arr[i].lname = last.slice(0,1).toUpperCase() +last.slice(1).toLowerCase();\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(showLoading());\r\n    } else if (data) {\r\n      dispatch(hideLoading());\r\n      dispatch({ type: \"LOAD_TOTAL_PAGES\", payload: data.length });\r\n\r\n      // const x = {};\r\n      // for (const [key, value] of Object.entries(data.containers)) {\r\n      //   x[key.toUpperCase()] = value;\r\n      // }\r\n\r\n      dispatch(updateData(capitalize(data.containers)));\r\n    } else {\r\n      dispatch(hideLoading());\r\n      dispatch(updateData([]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isLoading, isError]);\r\n\r\n  const handleStatus = (confirm) => {\r\n    console.log(\"confirm\", confirm);\r\n    console.log(\"handleStatus selectedData\", selectedData);\r\n\r\n    const containersToUpdate = selectedData.map((container) => {\r\n      return {\r\n        containerNo: container.containerNo,\r\n        // containerStatus: confirm ? \"available\" : \"unavailable\",\r\n      };\r\n    });\r\n\r\n    const containersToUnconfirm = selectedData.map((container) => {\r\n      return {\r\n        containerNo: container.containerNo,\r\n        status: \"unconfirmed\",\r\n        containerCondition:\r\n          container.containerCondition === null\r\n            ? \"\"\r\n            : container.containerCondition,\r\n        price: container.containerPrice,\r\n      };\r\n    });\r\n\r\n    const selectedContainersNumbers = flattenData(\r\n      containersToUpdate,\r\n      \"containerNo\"\r\n    );\r\n\r\n    console.log(\"handleStatus containersToUpdate\", containersToUpdate);\r\n    console.log(\r\n      \"handleStatus selectedContainersNumbers\",\r\n      selectedContainersNumbers\r\n    );\r\n\r\n    dispatch(showLoading());\r\n\r\n    if (confirm) {\r\n      if (\r\n        selectedData.some(\r\n          (o) => o.containerCondition == null || o.containerPrice === 0\r\n        )\r\n      ) {\r\n        dispatch(hideLoading());\r\n        setAlertConfirm(true);\r\n      } else {\r\n        axios\r\n          .put(containerEndpoints.mapLaraContainers, containersToUpdate)\r\n          .then(\r\n            () => {\r\n              dispatch(hideLoading());\r\n              if (confirm) {\r\n                setConfirmedContainers(containersToUpdate.length);\r\n                setAlert(true);\r\n              }\r\n              mutate(\r\n                `${containerEndpoints.count}?containerStatus=awaiting confirmation`\r\n              );\r\n              dispatch(\r\n                updateData(\r\n                  kaPropsUtils.getData(tableProps).filter((elem) => {\r\n                    return !selectedContainersNumbers.includes(\r\n                      elem.containerNo\r\n                    );\r\n                  })\r\n                )\r\n              );\r\n            },\r\n            (error) => {\r\n              dispatch(hideLoading());\r\n              //TODO: Replace with Alert\r\n              console.log(error);\r\n            }\r\n          );\r\n      }\r\n    } else {\r\n      axios\r\n        .put(containerEndpoints.updateLaraContainer, containersToUnconfirm)\r\n        .then(\r\n          () => {\r\n            dispatch(hideLoading());\r\n            mutate(\r\n              `${containerEndpoints.count}?containerStatus=awaiting confirmation`\r\n            );\r\n            dispatch(\r\n              updateData(\r\n                kaPropsUtils.getData(tableProps).filter((elem) => {\r\n                  return !selectedContainersNumbers.includes(elem.containerNo);\r\n                })\r\n              )\r\n            );\r\n          },\r\n          (error) => {\r\n            dispatch(hideLoading());\r\n            //TODO: Replace with Alert\r\n            console.log(error);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleEdit = (containerId, updatedObject) => {\r\n    // console.log('handleEdit updatedObject', updatedObject)\r\n    dispatch(showLoading());\r\n    axios\r\n      .put(`${containerEndpoints.updateLaraContainer}`, [updatedObject])\r\n      .then(\r\n        () => {\r\n          dispatch(hideLoading());\r\n          dispatch(\r\n            saveRowEditors(containerId, {\r\n              validate: true,\r\n            })\r\n          );\r\n        },\r\n        (error) => {\r\n          dispatch(hideLoading());\r\n          dispatch(closeRowEditors(containerId));\r\n          //TODO: Replace with Alert\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  // const dispatch = (action) => {\r\n  //   console.log('Awaiting Confirmation: dispatch action.type', action.type)\r\n  //   changeTableProps((prevState) => kaReducer(prevState, action));\r\n  // };\r\n\r\n  const dispatch = (action) => {\r\n    switch (action.type) {\r\n      case ActionType.UpdateFilterRowValue:\r\n        let updatedFilters = {};\r\n        switch (action.columnKey) {\r\n          case \"containerPrice\":\r\n            updatedFilters[\"maxPrice\"] = action.filterRowValue;\r\n            break;\r\n          case \"containerTypeDisplay\":\r\n            updatedFilters[\"containerType\"] = action.filterRowValue;\r\n            break;\r\n          default:\r\n            updatedFilters[action.columnKey] = action.filterRowValue;\r\n        }\r\n        setFilters({ ...filters, ...updatedFilters });\r\n        break;\r\n      case ActionType.UpdatePageIndex:\r\n        setFilters({ ...filters, page: action.pageIndex + 1 });\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n        break;\r\n      case \"INTERCEPT_EDIT\":\r\n        const containerId = action.rowKeyValue;\r\n        changeTableProps((prevState) => {\r\n          // const containersToEdit = selectedData.map((container) => {\r\n          //   return {\r\n          //     containerNo: container.containerNo,\r\n          //     status: \"awaiting confirmation\",\r\n          //   };\r\n          // });\r\n          // {\r\n          //   \"containerCondition\": \"reuse\",\r\n          //   \"containerNo\": \"CMAU1477271\",\r\n          //   \"price\": 1200,\r\n          //   \"status\": \"unconfirmed\"\r\n          // }\r\n          let updatedObject = {\r\n            containerNo: containerId,\r\n            containerCondition: \"re-use\",\r\n            price: \"\",\r\n            status: \"awaiting confirmation\",\r\n          };\r\n\r\n          prevState.editableCells\r\n            .filter(\r\n              (cell) =>\r\n                cell.rowKeyValue === containerId &&\r\n                cell.columnKey !== \"editColumn\"\r\n            )\r\n            .forEach((key) => {\r\n              console.log(\"updateObject key.editorValue\", key.editorValue);\r\n              if (key.columnKey === \"containerPrice\") {\r\n                updatedObject[\"price\"] = key.editorValue;\r\n              } else if (\r\n                key.columnKey === \"containerCondition\" &&\r\n                typeof key.editorValue === \"undefined\"\r\n              ) {\r\n                updatedObject[\"containerCondition\"] = \"re-use\";\r\n              } else {\r\n                updatedObject[key.columnKey] = key.editorValue\r\n                  ? key.editorValue.toLowerCase()\r\n                  : \"\";\r\n              }\r\n            });\r\n          console.log(\"updateObject\", updatedObject);\r\n          handleEdit(containerId, updatedObject);\r\n          return tableReducer(prevState, action);\r\n        });\r\n        break;\r\n      default:\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n    }\r\n  };\r\n\r\n  let confirmContainersProps = {\r\n    type: \"success\",\r\n    message: confirmedContainers + \" containers confirmed\",\r\n    autoClose: false,\r\n    // dismissTime : 10000\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n    setAlert\r\n  };\r\n\r\n  let checkContainersValidityProps = {\r\n    type: \"error\",\r\n    message:\r\n      \"Kindly make sure that all the Containers have a Condition and a Price.\",\r\n    autoClose: false,\r\n    // dismissTime : 10000\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n    setAlert: {setAlertConfirm}\r\n  };\r\n\r\n  let markUnavailableProps = {\r\n    message: \"Are you sure you want to mark these containers unavailable ?\",\r\n    button1: \"Mark Unavailable\",\r\n    button2: \"Cancel\",\r\n    buttonColor: \"primary-blue\",\r\n    cancelColor: \"outline-blue\",\r\n  };\r\n\r\n  console.log(\"selectedData\", selectedData);\r\n  console.log('AC alert', alert)\r\n  console.log('AC alertConfirm', alertConfirm)\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n       {(alert || alertConfirm) && <Alert\r\n          {...(alert\r\n            ? confirmContainersProps\r\n            : alertConfirm\r\n            ? checkContainersValidityProps\r\n            : {})}\r\n        />\r\n          }\r\n        <HeaderTitle>\r\n          Containers Awaiting Confirmation\r\n          <Line />\r\n          <Number>{tableProps && tableProps.data.length}</Number>\r\n          <CSVLink\r\n            data={kaPropsUtils.getData(tableProps)}\r\n            headers={tableProps.columns.map((c) => ({\r\n              label: c.title,\r\n              key: c.key,\r\n            }))}\r\n            filename=\"containers.data.csv\"\r\n          >\r\n            <DownloadIcon />\r\n          </CSVLink>\r\n        </HeaderTitle>\r\n        {selectedData.length ? (\r\n          <div tw=\"space-x-3 grid grid-cols-2ColAuto h-minContent\">\r\n            <Button color=\"primary-blue\" onClick={() => handleStatus(true)}>\r\n              Confirm\r\n            </Button>\r\n            <Modal\r\n              width=\"450px\"\r\n              height=\"auto\"\r\n              titleFontSize=\"24px\"\r\n              component={<Button color=\"primary-blue\">Mark Unavailable</Button>}\r\n              title=\"Mark Unavailable\"\r\n              children={\r\n                <Popup\r\n                  name=\"markUnavailable\"\r\n                  {...markUnavailableProps}\r\n                  accept={() => handleStatus(false)}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </HeaderWrapper>\r\n      <Card tw=\"p-10\">\r\n        <ContainerTable tableProps={tableProps} dispatch={dispatch} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    loggedInUser: state.loggedInUser,\r\n    // userRole: state.userRole,\r\n    // userInfo: state.userInfo,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AwaitingConfirmation);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useOutsideAlerter.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Popup.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\DragAndDrop\\DropZone\\DropZone.js",["649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678"],"import React, { useRef, useState, useEffect, createRef, useContext } from 'react';\r\nimport { CustomClearanceContext } from \"../../../../context/CustomClearanceContext\";\r\nimport { Upload, Delete, Edit } from '../../../../assets/icons';\r\nimport { Button } from \"../../../styles\";\r\nimport axios from 'axios';\r\nimport './DropZone.css';\r\n\r\nexport default function Dropzone({ bookingOrder = null }) {\r\n    const fileInputRef = useRef();\r\n    const dropContainerRef = useRef();\r\n    const fileStatusBarRef = useRef();\r\n    const modalImageRef = useRef();\r\n    const modalRef = useRef();\r\n    const progressRef = useRef();\r\n    const uploadRef = useRef();\r\n    const uploadModalRef = useRef();\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    // const fileStatusBarRefArray = validFiles.map(data => ({id: data, ref: createRef()}));\r\n    const [unsupportedFiles, setUnsupportedFiles] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    console.log('booookingOrderrrrr', bookingOrder)\r\n    // const { setCustomClearanceDocument,\r\n    //     setPaymentProofDocument\r\n    // } = useContext(CustomClearanceContext);\r\n\r\n    // const[filename, setFilename] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let filteredArr = selectedFiles.reduce((acc, current) => {\r\n            const x = acc.find(item => item.name === current.name);\r\n            if (!x) {\r\n                return acc.concat([current]);\r\n            } else {\r\n                return acc;\r\n            }\r\n        }, []);\r\n        console.log('filteredArr', filteredArr)\r\n        setValidFiles([...filteredArr]);\r\n\r\n        if (selectedFiles.length > 1) {\r\n            selectedFiles.shift();\r\n            setSelectedFiles(selectedFiles);\r\n            setValidFiles(selectedFiles)\r\n        }\r\n\r\n    }, [selectedFiles]);\r\n\r\n    const preventDefault = (e) => {\r\n        e.preventDefault();\r\n        // e.stopPropagation();\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        preventDefault(e);\r\n        const files = e.dataTransfer.files;\r\n        if (files.length) {\r\n            dropContainerRef.current.style.display = 'none';\r\n            handleFiles(files);\r\n        }\r\n    }\r\n\r\n    const filesSelected = (e) => {\r\n        console.log(\"fileStatusBarRef\", e);\r\n        console.log(\"fileInputRef\", fileInputRef);\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files);\r\n        }\r\n        dropContainerRef.current.style.display = 'none'\r\n    }\r\n\r\n    const fileInputClicked = (e) => {\r\n        fileInputRef.current.click();\r\n    }\r\n\r\n    const handleFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (validateFile(files[i])) {\r\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n            } else {\r\n                files[i]['invalid'] = true;\r\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\r\n                setErrorMessage('File type not permitted');\r\n                setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateFile = (file) => {\r\n        const validTypes = ['image/jpeg',\r\n            'image/jpg',\r\n            'image/png',\r\n            '.doc',\r\n            '.docx',\r\n            'txt',\r\n            'application/msword',\r\n            'application/pdf',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\r\n        if (validTypes.indexOf(file.type) === -1) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const fileSize = (size) => {\r\n        if (size === 0) {\r\n            return '0 Bytes';\r\n        }\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    }\r\n\r\n    const removeFile = (name) => {\r\n        const index = validFiles.findIndex(e => e.name === name);\r\n        const index2 = selectedFiles.findIndex(e => e.name === name);\r\n        const index3 = unsupportedFiles.findIndex(e => e.name === name);\r\n        validFiles.splice(index, 1);\r\n        selectedFiles.splice(index2, 1);\r\n        setValidFiles([...validFiles]);\r\n        setSelectedFiles([...selectedFiles]);\r\n        if (index3 !== -1) {\r\n            unsupportedFiles.splice(index3, 1);\r\n            setUnsupportedFiles([...unsupportedFiles]);\r\n        }\r\n        dropContainerRef.current.style.display = 'grid'\r\n    }\r\n\r\n    // const openImageModal = (file) => {\r\n    //     const reader = new FileReader();\r\n    //     modalRef.current.style.display = \"block\";\r\n    //     reader.readAsDataURL(file);\r\n    //     reader.onload = function(e) {\r\n    //         modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\r\n    //     }\r\n    // }\r\n\r\n    const closeModal = () => {\r\n        modalRef.current.style.display = \"none\";\r\n        modalImageRef.current.style.backgroundImage = 'none';\r\n    }\r\n\r\n    const uploadFiles = async () => {\r\n        // setCustomClearanceDocument(\"Uploaded\");\r\n        // setPaymentProofDocument(\"Uploaded\");\r\n\r\n\r\n        uploadModalRef.current.style.display = 'block';\r\n        uploadRef.current.innerHTML = 'File(s) Uploading...';\r\n        for (let i = 0; i < validFiles.length; i++) {\r\n            console.log('uploadedFile', validFiles[i])\r\n            const formData = new FormData();\r\n            // formData.append('uploadFile', validFiles[i]);\r\n            // var body = {\r\n            //     \"uploadFile\" : validFiles[i],\r\n            //     \"docType\" : 'test'\r\n            // }\r\n            //     formData.append(\r\n            //     // \"myFile\",\r\n            //     // this.state.selectedFile,\r\n            //     // this.state.selectedFile.name\r\n            //     body\r\n            //   );\r\n\r\n            // console.log('', validFiles[i])\r\n            //     formData.append('file', validFiles[i]);\r\n            formData.append('uploadFile', validFiles[i]);\r\n            formData.append('docType', 'test')\r\n\r\n            // Display the key/value pairs\r\n            for (var pair of formData.entries()) {\r\n                console.log(\"formData\", pair[0] + ', ' + pair[1]);\r\n            }\r\n\r\n            // console.log('formData', formData)\r\n\r\n            //         axios({\r\n            // method: 'post',\r\n            // url:  '/documents/orders/' + bookingOrder,\r\n            // data: formData,\r\n            // headers: {'Content-Type': 'multipart/form-data' }\r\n            // })\r\n            // .then(function (response) {\r\n            //     //handle success\r\n            //     console.log(response);\r\n            // })\r\n            // .catch(function (response) {\r\n            //     //handle error\r\n            //     console.log(response);\r\n            // });\r\n\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            axios.post('/documents/orders/' + bookingOrder, formData, {\r\n                onUploadProgress: (progressEvent) => {\r\n                    const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\r\n                    progressRef.current.innerHTML = `${uploadPercentage}%`;\r\n                    progressRef.current.style.width = `${uploadPercentage}%`;\r\n\r\n                    if (uploadPercentage === 100) {\r\n                        uploadRef.current.innerHTML = 'File(s) Uploaded';\r\n                        validFiles.length = 0;\r\n                        setValidFiles([...validFiles]);\r\n                        setSelectedFiles([...validFiles]);\r\n                        setUnsupportedFiles([...validFiles]);\r\n                    }\r\n                },\r\n            })\r\n                .catch(() => {\r\n                    uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\r\n                    progressRef.current.style.backgroundColor = 'red';\r\n                })\r\n        }\r\n    }\r\n\r\n    const closeUploadModal = () => {\r\n        uploadModalRef.current.style.display = 'none';\r\n    }\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n    const onChangeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0])\r\n\r\n        console.log(event.target.files[0])\r\n\r\n    }\r\n    const onClickHandler = () => {\r\n        const data = new FormData()\r\n        data.append('file', selectedFile)\r\n        axios.post('/documents/orders/' + bookingOrder, data, {\r\n            // receive two    parameter endpoint url ,form data\r\n        }).then(res => { // then print response status\r\n            console.log(res.statusText)\r\n        })\r\n    }\r\n\r\n    // const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n    const [currentFile, setCurrentFile] = useState(undefined);\r\n    const [progress, setProgress] = useState(0);\r\n    const [message, setMessage] = useState(\"\");\r\n  \r\n    const [fileInfos, setFileInfos] = useState([]);\r\n\r\n    const setProfilePhoto = (e) => {\r\n        let file = e.target.files[0];\r\n        if (!file) return;\r\n        // if (file.size / 1024 / 1024 > 1) {\r\n            //     return this.setState((prevState) => ({\r\n            //         formValidationMessage: {\r\n            //             ...prevState.formValidationMessage,\r\n            //             image: `Maximum upload size: 1MB`,\r\n            //         },\r\n            //     }));\r\n            // }\r\n\r\n            // this.setState((prevState) => ({\r\n            //     loaders: {\r\n            //         ...prevState.loaders,\r\n            //         imageLoader: true,\r\n            //     },\r\n            //     hasChanges: true\r\n            // }));\r\n\r\n            let reader = new FileReader();\r\n\r\n            reader.readAsDataURL(file);\r\n            reader.onloadend = () => {\r\n                // if (this.state.mode === EDIT) {\r\n                let fd = new FormData();\r\n                fd.append(\"file\", file);\r\n                fd.append('docType', 'test')\r\n                axios.post('https://csp-int.digital-nonprod.aws.cld.cma-cgm.com/csp/logistic/document/v1/documents/orders/' + bookingOrder, fd, {\r\n                    onUploadProgress: (progressEvent) => {\r\n                        const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\r\n                        progressRef.current.innerHTML = `${uploadPercentage}%`;\r\n                        progressRef.current.style.width = `${uploadPercentage}%`;\r\n\r\n                        if (uploadPercentage === 100) {\r\n                            uploadRef.current.innerHTML = 'File(s) Uploaded';\r\n                            validFiles.length = 0;\r\n                            setValidFiles([...validFiles]);\r\n                            setSelectedFiles([...validFiles]);\r\n                            setUnsupportedFiles([...validFiles]);\r\n                        }\r\n                    },\r\n                })\r\n                    .catch(() => {\r\n                        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\r\n                        progressRef.current.style.backgroundColor = 'red';\r\n                    })\r\n\r\n                // axios.post(`/api/v1/image/${clientId}`, clientData)\r\n                // .then(response=>response.data)\r\n                //             addClientImage(this.state.clientId, fd)\r\n                //                 .then(() => {\r\n                //                     this.props.success({\r\n                //                         ...successAlertOpts,\r\n                //                         message: `Image updated Successfully`,\r\n                //                     });\r\n                //                     this.setState(() => ({\r\n                //                         clientImage: reader.result,\r\n                //                     }));\r\n                //                 })\r\n                //                 .catch((err) => {\r\n                //                     this.props.error({\r\n                //                         ...errorAlertOpts,\r\n                //                         message: err.response\r\n                //                             ? err.response.data.description\r\n                //                             : \"An error occurred, please try again later\",\r\n                //                     });\r\n                //                 })\r\n                // .then(() => {\r\n                //     this.setState((prevState) => ({\r\n                //         loaders: {\r\n                //             ...prevState.loaders,\r\n                //             imageLoader: false,\r\n                //         },\r\n                //     }));\r\n                // });\r\n                // } else\r\n                //     this.setState((prevState) => ({\r\n                //         formData: {\r\n                //             ...prevState.formData,\r\n                //             image: file,\r\n                //         },\r\n                //         loaders: {\r\n                //             ...prevState.loaders,\r\n                //             imageLoader: false,\r\n                //         },\r\n                //         clientImage: reader.result,\r\n                //         formValidationMessage: {\r\n                //             ...prevState.formValidationMessage,\r\n                //             image: \"\",\r\n                //         },\r\n                //     }));\r\n            };\r\n\r\n        };\r\n\r\n\r\n        return (<>\r\n          \r\n            <form action=\"\" method=\"post\" encType=\"multipart/form-data\">\r\n            <label>Input</label>\r\n            <input\r\n                id=\"file\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                accept={\".png, .jpg, .jpeg\"}\r\n                onChange={setProfilePhoto}\r\n                multiple={false}\r\n            />\r\n            {/* <div>\r\n      {currentFile && (\r\n        <div className=\"progress\">\r\n          <div\r\n            className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            aria-valuenow={progress}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            style={{ width: progress + \"%\" }}\r\n          >\r\n            {progress}%\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <label className=\"btn btn-default\">\r\n        <input type=\"file\" onChange={selectFile} />\r\n      </label>\r\n\r\n      <button\r\n        className=\"btn btn-success\"\r\n        disabled={!selectedFiles}\r\n        onClick={upload}\r\n      >\r\n        Upload\r\n      </button>\r\n\r\n      <div className=\"alert alert-light\" role=\"alert\">\r\n        {message}\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">List of Files</div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {fileInfos &&\r\n            fileInfos.map((file, index) => (\r\n              <li className=\"list-group-item\" key={index}>\r\n                <a href={file.url}>{file.name}</a>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div> */}\r\n                {/* <div className=\"container\">\r\n                    <div className=\"drop-container\"\r\n                        ref={dropContainerRef}\r\n                        onDragOver={dragOver}\r\n                        onDragEnter={dragEnter}\r\n                        onDragLeave={dragLeave}\r\n                        onDrop={fileDrop}\r\n                    >\r\n                        <div className=\"upload-icon\">\r\n                            <Upload fill=\"#6284e3\" style={{ width: 60, height: 60, margin: '0 auto' }} alt=\"Upload\" />\r\n                        </div>\r\n                        <div className=\"drop-message\">\r\n                            Drag and Drop or\r\n                            <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n                                &nbsp;browse&nbsp;\r\n                            </label>\r\n                            <input id=\"file-upload\"\r\n                                className=\"file-input\"\r\n                                name=\"uploadFile\"\r\n                                key={Math.random()}\r\n                                ref={fileInputRef}\r\n                                type=\"file\"\r\n                                accept=\"image/png, image/jpeg, .jpg, .pdf, .doc, .docx\"\r\n                                onChange={filesSelected}\r\n                            />\r\n                            your files\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"file-display-container\">\r\n                        {\r\n                            validFiles.map((data, i) =>\r\n                                <div className=\"file-status-bar\" ref={fileStatusBarRef} key={i}>\r\n                                    {/* <div onClick={!data.invalid ? () => openImageModal(data) : () => removeFile(data.name)}> */}\r\n                                    {/* <div>\r\n                                        <div className=\"file-type\">{fileType(data.name)}</div>\r\n                                        <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>{data.name}</span>\r\n                                        <span className=\"file-size\">({fileSize(data.size)})</span>\r\n                                        {data.invalid && <span className='file-error-message'>({errorMessage})</span>}\r\n                                        <div className=\"file-edit\">\r\n                                            <label htmlFor=\"file-upload\" className=\"custom-file-upload\" onClick={fileInputClicked}>\r\n                                                <Edit fill=\"#04246a\" style={{ width: 15, height: 15 }} alt=\"Edit\" />\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"file-remove\" onClick={() => removeFile(data.name)}>\r\n                                            <Delete fill=\"#e20101\" style={{ width: 15, height: 15 }} alt=\"Delete\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {unsupportedFiles.length === 0 && validFiles.length ?\r\n                            <Button color=\"primary-blue\" className=\"file-upload-btn\" onClick={() => uploadFiles()}>Save</Button>\r\n                            : ''\r\n                        }\r\n                        {unsupportedFiles.length ? <p>Please remove all unsupported files.</p> : ''}\r\n                    </div> */}\r\n                {/* </div> */} \r\n                <div className=\"modal\" ref={modalRef}>\r\n                    <div className=\"overlay\"></div>\r\n                    <span className=\"close\" onClick={(() => closeModal())}>X</span>\r\n                    <div className=\"modal-image\" ref={modalImageRef}></div>\r\n                </div>\r\n\r\n                <div className=\"upload-modal\" ref={uploadModalRef}>\r\n                    <div className=\"overlay\"></div>\r\n                    <div className=\"close\" onClick={(() => closeUploadModal())}>X</div>\r\n                    <div className=\"progress-container\">\r\n                        <span ref={uploadRef}></span>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar\" ref={progressRef}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n        </>\r\n        )\r\n    }\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\index.jsx",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Button, Select, Loader } from \"../../../common/styles\";\r\nimport {\r\n  StyledDownloadIcon as DownloadIcon,\r\n  HeaderTitle,\r\n  HeaderWrapper,\r\n  Line,\r\n  Number,\r\n} from \"./common/style\";\r\nimport { tableReducer } from \"../../../common/components/Table/DataTable\";\r\nimport {\r\n  closeRowEditors,\r\n  hideLoading,\r\n  saveRowEditors,\r\n  showLoading,\r\n  updateData,\r\n} from \"ka-table/actionCreators\";\r\nimport { ManageAgentsTable, tablePropsInit } from \"./common/ManageAgentsTable\";\r\nimport Alert from \"../../../common/components/Alert.jsx\";\r\nimport { ActionType } from \"ka-table/enums\";\r\nimport { kaReducer } from \"ka-table\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport {\r\n  bookingEndpoints,\r\n  containerEndpoints,\r\n} from \"../../../common/constants/apiEndpoints\";\r\nimport { flattenData } from \"../../../common/utils/functions\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { mutate } from \"swr\";\r\nimport axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst SearchBar = tw.div`\r\nrelative`;\r\n\r\nconst SearchWrapper = tw.div`\r\nabsolute w-max h-17 m-auto inset-y-0 left-3.5`;\r\n\r\nconst Search = tw.div`\r\nw-17 m-auto relative text-center`;\r\n\r\nconst Circle = tw.div`\r\nw-ten h-ten \r\nborder-2 border-solid border-gray-200\r\nrounded-full`;\r\n\r\nconst Rectangle = tw.div`\r\nw-ten right-0 \r\nborder-0.5 border-solid border-gray-200 \r\nabsolute -bottom-3 transform rotate-45\r\nrounded-r-xl`;\r\n\r\nconst ManageAgents = () => {\r\n  const history = useHistory();\r\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  const [filters, setFilters] = useState({\r\n    // page: 1,\r\n    role: \"agent\",\r\n  });\r\n\r\n  const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  // const selectedData = kaPropsUtils.areAllFilteredRowsSelected(tableProps);\r\n  // const selectedData = tableProps;\r\n  // console.log('ManageAgents: tablePropsInit', tablePropsInit)\r\n  const { filterQuery } = useQueryBuilder(filters);\r\n\r\n  const { data, isError, isLoading } = useQuery(\r\n    `${bookingEndpoints.agents}?${filterQuery}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(showLoading());\r\n    } else if (data) {\r\n      dispatch(hideLoading());\r\n      const appendFullNameToAgents = data.agents.map(v => ({...v, fullName: v.firstName+ \" \"+v.lastName}))\r\n      dispatch({ type: \"LOAD_TOTAL_PAGES\", payload: data.length });\r\n      dispatch(updateData(appendFullNameToAgents));\r\n    } else {\r\n      dispatch(hideLoading());\r\n      dispatch(updateData([]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isLoading, isError]);\r\n\r\n  // console.log('manage agents data', data)\r\n//   const handleStatus = (confirm) => {\r\n//     const containersToUpdate = selectedData.map((container) => {\r\n//       return {\r\n//         containerNo: container.containerNo,\r\n//         containerStatus: confirm ? \"available\" : \"unavailable\",\r\n//       };\r\n//     });\r\n\r\n//     const selectedContainersNumbers = flattenData(\r\n//       containersToUpdate,\r\n//       \"containerNo\"\r\n//     );\r\n\r\n//     dispatch(showLoading());\r\n\r\n//     axios\r\n//       .put(containerEndpoints.updateContainerStatus, containersToUpdate)\r\n//       .then(\r\n//         () => {\r\n//           dispatch(hideLoading());\r\n//           if (confirm) {\r\n//             setConfirmedContainers(containersToUpdate.length);\r\n//             setAlert(true);\r\n//           }\r\n//           mutate(\r\n//             `${containerEndpoints.count}?containerStatus=awaiting confirmation`\r\n//           );\r\n//           dispatch(\r\n//             updateData(\r\n//               kaPropsUtils.getData(tableProps).filter((elem) => {\r\n//                 return !selectedContainersNumbers.includes(elem.containerNo);\r\n//               })\r\n//             )\r\n//           );\r\n//         },\r\n//         (error) => {\r\n//           dispatch(hideLoading());\r\n//           //TODO: Replace with Alert\r\n//           console.log(error);\r\n//         }\r\n//       );\r\n//   };\r\n\r\n  const handleEdit = (containerId, updatedObject) => {\r\n    dispatch(showLoading());\r\n    axios\r\n      .put(\r\n        `${containerEndpoints.updateContainer}/${containerId}`,\r\n        updatedObject\r\n      )\r\n      .then(\r\n        () => {\r\n          dispatch(hideLoading());\r\n          dispatch(\r\n            saveRowEditors(containerId, {\r\n              validate: true,\r\n            })\r\n          );\r\n        },\r\n        (error) => {\r\n          dispatch(hideLoading());\r\n          dispatch(closeRowEditors(containerId));\r\n          //TODO: Replace with Alert\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const dispatch = (action) => {\r\n    // console.log(\"dispatch action\", action);\r\n    changeTableProps((prevState) => kaReducer(prevState, action));\r\n  };\r\n\r\n  // const dispatch = (action) => {\r\n  //     switch (action.type) {\r\n  //         case ActionType.UpdateFilterRowValue:\r\n  //             let updatedFilters = {};\r\n  //             switch (action.columnKey) {\r\n  //                 case \"containerPrice\":\r\n  //                     updatedFilters[\"maxPrice\"] = action.filterRowValue;\r\n  //                     break;\r\n  //                 case \"containerTypeDisplay\":\r\n  //                     updatedFilters[\"containerType\"] = action.filterRowValue;\r\n  //                     break;\r\n  //                 default:\r\n  //                     updatedFilters[action.columnKey] = action.filterRowValue;\r\n  //             }\r\n  //             setFilters({ ...filters, ...updatedFilters });\r\n  //             break;\r\n  //         case ActionType.UpdatePageIndex:\r\n  //             setFilters({ ...filters, page: action.pageIndex + 1 });\r\n  //             changeTableProps((prevState) => tableReducer(prevState, action));\r\n  //             break;\r\n  //         case \"INTERCEPT_EDIT\":\r\n  //             const containerId = action.rowKeyValue;\r\n  //             changeTableProps((prevState) => {\r\n  //                 let updateObject = {\r\n  //                     containerCondition: \"\",\r\n  //                     containerPrice: \"\",\r\n  //                     containerStatus: \"\",\r\n  //                 };\r\n  //                 prevState.editableCells\r\n  //                     .filter(\r\n  //                         (cell) =>\r\n  //                             cell.rowKeyValue === containerId &&\r\n  //                             cell.columnKey !== \"editColumn\"\r\n  //                     )\r\n  //                     .forEach((key) => (updateObject[key.columnKey] = key.editorValue ? key.editorValue : ''));\r\n  //                 handleEdit(containerId, updateObject);\r\n  //                 return tableReducer(prevState, action);\r\n  //             });\r\n  //             break;\r\n  //         default:\r\n  //             changeTableProps((prevState) => tableReducer(prevState, action));\r\n  //     }\r\n  // };\r\n  // console.log(\"ManageAgents: data\", data);\r\n  // console.log(\"ManageAgents: tableProps\", tableProps);\r\n  // console.log('ManageAgents: selectedData', selectedData)\r\n  // console.log('kaPropsUtils', kaPropsUtils)\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <HeaderTitle>\r\n          Manage Agents\r\n          <Number> {tableProps.data.length} agents</Number>\r\n        </HeaderTitle>\r\n        {/* to be added in phase 2 */\r\n        /* <SearchBar>\r\n                    <input type=\"text\" placeholder=\"Search\" tw=\"w-full h-40 text-primary-blue text-14 pl-9\" />\r\n                    <SearchWrapper> \r\n                        <Search>\r\n                            <Circle></Circle>\r\n                            <Rectangle></Rectangle>\r\n                        </Search>\r\n                    </SearchWrapper>\r\n                </SearchBar> */}\r\n        {/* <Button color=\"primary-blue\" tw='w-84 h-35 justify-self-end' onClick={() => history.push('/admin/manage-agents/add')}> Add </Button> */}\r\n      </HeaderWrapper>\r\n      <Card>\r\n        <ManageAgentsTable tableProps={tableProps} dispatch={dispatch} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageAgents;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\index.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\index.jsx",["698","699","700","701","702","703","704","705","706"],"import React, { useState } from \"react\";\r\nimport MultiSelect from \"../../../common/components/MultiSelect\";\r\nimport SalesCurveContainer from \"./SalesCurveContainer\";\r\nimport InfoCardContainer from \"./InfoCardContainer\";\r\n// import BarContainer from \"./BarContainer\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { locationsEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport tw from \"twin.macro\";\r\n\r\n/** Styles **/\r\nconst OuterGrid = tw.div`\r\ngrid grid-cols-1\r\nxl:grid-cols-2 \r\ngap-5\r\nrelative\r\n`;\r\n\r\nconst MultiSelectWrapper = tw.div`\r\ngrid grid-cols-multiSelect gap-x-4 mb-10`;\r\n\r\nconst Label = tw.label`\r\ntext-15 text-primary-blue font-medium`;\r\n\r\nexport default function Dashboard() {\r\n  const [countries, setCountries] = useState([]);\r\n  // const { filterQuery } = useQueryBuilder({\r\n  //   \"productCity\": cities.map(city => city.value),\r\n  //   \"productCountry\": countries.map(country => country.value),\r\n  //   \"page\": activePage,\r\n  //   ...filters,\r\n  // });\r\n\r\n  const { data, isLoading, isError } = useQuery(\r\n    `${locationsEndpoints.countries}`\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <OuterGrid>\r\n        {/* <MultiSelectWrapper>\r\n          <Label> Choose Country </Label>\r\n          <MultiSelect\r\n            tw=\"mt-1\"\r\n            className=\"multi-select\"\r\n            options={countriesData}\r\n            value={countries}\r\n            onChange={setCountries}\r\n            labelledBy={\"Select\"}\r\n          />\r\n        </MultiSelectWrapper> */}\r\n        <InfoCardContainer />\r\n        <SalesCurveContainer />\r\n      </OuterGrid>\r\n      {/* phase 2 */}\r\n      {/* <BarContainer /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Dropdown.jsx",["707"],"import React, { useEffect, useCallback } from \"react\";\r\nimport { useMenuState, Menu as BaseMenu, MenuItem, MenuButton } from \"reakit\";\r\nimport PropTypes from \"prop-types\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst Item = tw(MenuItem)`\r\nblock px-4 py-2 text-sm\r\ntext-left leading-5 \r\ntext-primary-gray\r\nhover:bg-gray-100 \r\nhover:text-primary-blue \r\nfocus:outline-none \r\nfocus:bg-gray-100 \r\nfocus:text-primary-blue\r\nw-full\r\n`;\r\n\r\nlet DropdownMenu = tw(BaseMenu)`\r\nmt-2 w-56 rounded-md \r\nshadow-lg block bg-white \r\noutline-none\r\n`;\r\nexport default function Dropdown({\r\n  disclosure,\r\n  items,\r\n  isClose = false,\r\n  ...props\r\n}) {\r\n  const menu = useMenuState();\r\n\r\n  useEffect(() => {\r\n    // console.log('props.closeDropdown useEffect', props.closeDropdown)\r\n    props.isCartOpen === true && menu.show()\r\n    props.isCartOpen === false && menu.hide()\r\n    isClose === true && menu.hide();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isCartOpen, isClose, menu]);\r\n\r\n  //   const checkClose = useCallback(\r\n  //     () => {\r\n  //       window.alert('checkClose')\r\n  //       if (isClose === true) { menu.hide()}\r\n  //     },\r\n  //     [isClose, menu]\r\n  // );\r\n  // console.log('props.closeDropdown outside', props.closeDropdown)\r\n  return (\r\n    <>\r\n      <MenuButton {...menu} ref={disclosure.ref} {...disclosure.props}>\r\n        {(disclosureProps) => React.cloneElement(disclosure, disclosureProps)}\r\n      </MenuButton>\r\n      <DropdownMenu {...menu} {...props} style={{ width: props.width }}>\r\n        {items.map((item, i) => (\r\n          <Item {...menu} {...item.props} key={i}>\r\n            {(itemProps) => React.cloneElement(item, itemProps)}\r\n          </Item>\r\n        ))}\r\n      </DropdownMenu>\r\n    </>\r\n  );\r\n}\r\n\r\nDropdown.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.node),\r\n  disclosure: PropTypes.node,\r\n};\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Logo.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\MobileSidebar.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\DesktopSidebar.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\style.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\assets\\images\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\DataTable.jsx",["708","709"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, kaReducer } from \"ka-table\";\r\nimport {\r\n  deselectAllFilteredRows,\r\n  deselectRow,\r\n  selectAllFilteredRows,\r\n  selectRow,\r\n  selectRowsRange,\r\n  updateFilterRowValue,\r\n  closeRowEditors,\r\n  openRowEditors,\r\n  updateEditorValue,\r\n} from \"ka-table/actionCreators\";\r\nimport { kaDateUtils, kaPropsUtils } from \"ka-table/utils\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../constants/settings\";\r\nimport currencies from \"../../constants/currencies\";\r\nimport { Select, Checkbox, Input, Button } from \"../../styles\";\r\nimport ArrowUpIcon from \"../../../assets/icons/Arrow/Up.svg\";\r\nimport ArrowDownIcon from \"../../../assets/icons/Arrow/Down.svg\";\r\nimport tw, { styled } from \"twin.macro\";\r\nimport \"../../../index.css\";\r\n\r\nconst CustomNumberEditor = ({\r\n  value,\r\n  dispatch,\r\n  column,\r\n  rowKeyValue,\r\n  rowData,\r\n}) => {\r\n  const [editorValue, setValue] = useState(value);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(\r\n      updateEditorValue(rowKeyValue, column.key, event.currentTarget.value)\r\n    );\r\n    setValue(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        tw=\"w-20 mr-2 text-14 font-light border-r-0 border-l-0 border-t-0\"\r\n        type=\"number\"\r\n        value={editorValue}\r\n        onChange={handleChange}\r\n      />\r\n      {currencies[rowData.containerCurrency]}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CustomEditor = ({ defaultValue, value, options, dispatch, column, rowKeyValue }) => {\r\n  const [editorValue, setValue] = useState(defaultValue);\r\n  // console.log(\" CustomEditor options\", options);\r\n  // console.log(\" CustomEditor value\", value);\r\n  // console.log(\" CustomEditor defaultValue\", defaultValue);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue)  dispatch(\r\n      updateEditorValue(rowKeyValue, column.key, defaultValue)\r\n    );\r\n  }, [defaultValue])\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(\r\n      updateEditorValue(rowKeyValue, column.key, event.currentTarget.value)\r\n    );\r\n    setValue(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Select value={editorValue} onChange={handleChange} tw=\"text-14 font-light border-r-0 border-l-0 border-t-0\">\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n     </Select>\r\n  );\r\n};\r\n\r\nconst SelectionCell = ({\r\n  rowKeyValue,\r\n  dispatch,\r\n  isSelectedRow,\r\n  selectedRows,\r\n}) => {\r\n  return (\r\n    <Checkbox\r\n      tw=\"mr-3\"\r\n      checked={isSelectedRow}\r\n      onChange={(event) => {\r\n        if (event.nativeEvent.shiftKey) {\r\n          dispatch(selectRowsRange(rowKeyValue, [...selectedRows].pop()));\r\n        } else if (event.currentTarget.checked) {\r\n          dispatch(selectRow(rowKeyValue));\r\n        } else {\r\n          dispatch(deselectRow(rowKeyValue));\r\n        }\r\n        console.log(\"SelectionCell rowKeyValue\", rowKeyValue);\r\n        console.log(\"SelectionCell isSelectedRow\", isSelectedRow);\r\n        console.log(\"SelectionCell selectedRows\", selectedRows);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectionHeader = ({ dispatch, areAllRowsSelected }) => {\r\n  return (\r\n    <Checkbox\r\n      tw=\"mr-3\"\r\n      checked={areAllRowsSelected}\r\n      onChange={(event) => {\r\n        if (event.currentTarget.checked) {\r\n          dispatch(selectAllFilteredRows());\r\n        } else {\r\n          dispatch(deselectAllFilteredRows());\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectEditor = ({ column, dispatch, options }) => {\r\n  return (\r\n      <Select\r\n        tw=\"text-14 font-light border-r-0 border-l-0 border-t-0\"\r\n        defaultValue={column.filterRowValue}\r\n        onChange={(event) => {\r\n          dispatch(updateFilterRowValue(column.key, event.currentTarget.value));\r\n        }}\r\n      >\r\n        <option value=\"\"> All </option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n  );\r\n};\r\n\r\nconst NumberEditor = ({ column, dispatch }) => {\r\n  return (\r\n    <div>\r\n      <Input\r\n        defaultValue={column.filterRowValue}\r\n        tw=\"p-2\"\r\n        onChange={(event) => {\r\n          const filterRowValue =\r\n            event.currentTarget.value !== \"\"\r\n              ? Number(event.currentTarget.value)\r\n              : null;\r\n          dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n        }}\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RangeEditor = ({ column, dispatch }) => {\r\n  const [value, setValue] = useState(column.filterRowValue);\r\n\r\n  function handleChange(event) {\r\n    const filterRowValue =\r\n      event.currentTarget.value !== \"\"\r\n        ? Number(event.currentTarget.value)\r\n        : null;\r\n    dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        max={column.filterRowValue}\r\n        defaultValue={column.filterRowValue}\r\n        onChange={(e) => {\r\n          setValue(e.currentTarget.value);\r\n        }}\r\n        onMouseUp={handleChange}\r\n        onTouchEnd={handleChange}\r\n        type=\"range\"\r\n      />\r\n      <span tw=\"ml-2 text-14 font-light\">{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const SearchEditor = ({ column, dispatch }) => {\r\n//   return (\r\n//     <div>\r\n//       <Input\r\n//         tw=\"w-28 h-40\"\r\n//         defaultValue={column.filterRowValue}\r\n//         onKeyUp={(event) => {\r\n//           // if(event.keyCode === 13)\r\n//           dispatch(\r\n//             updateFilterRowValue(\r\n//               column.key,\r\n//               event.currentTarget.value !== \"\"\r\n//                 ? event.currentTarget.value\r\n//                 : \"\"\r\n//             ));\r\n//         }}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst SearchEditor = ({ column, dispatch }) => {\r\n  return (\r\n    <Input\r\n      tw=\"w-20 h-40 text-14 text-casual-gray border-r-0 border-l-0 border-t-0\"\r\n      defaultValue={column.filterRowValue}\r\n      onKeyUp={(event) => {\r\n        // if(event.keyCode === 13)\r\n        dispatch(\r\n          updateFilterRowValue(\r\n            column.key,\r\n            event.currentTarget.value !== \"\" ? event.currentTarget.value : \"\"\r\n          )\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst DateEditor = ({ column, dispatch }) => {\r\n  const fieldValue = column.filterRowValue;\r\n  const value = fieldValue && kaDateUtils.getDateInputValue(fieldValue);\r\n  return (\r\n    <div>\r\n      <Input\r\n        type=\"date\"\r\n        value={value || \"\"}\r\n        onChange={(event) => {\r\n          const targetValue = event.currentTarget.value;\r\n          const filterRowValue = targetValue ? new Date(targetValue) : null;\r\n          dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SaveButton = ({ dispatch, rowKeyValue }) => {\r\n  return (\r\n    <div tw=\"flex justify-center space-x-4\">\r\n      <Button\r\n        tw=\"text-12 min-w-61.25\"\r\n        color=\"outline-blue\"\r\n        onClick={() => {\r\n          dispatch({\r\n            type: \"INTERCEPT_EDIT\",\r\n            rowKeyValue,\r\n          });\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Button\r\n        tw=\"text-12 min-w-61.25\"\r\n        color=\"outline-red\"\r\n        onClick={() => {\r\n          dispatch(closeRowEditors(rowKeyValue));\r\n        }}\r\n      >\r\n        Close\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ dispatch, rowKeyValue }) => {\r\n  return (\r\n    <Button\r\n      tw=\"text-12 min-w-61.25\"\r\n      color=\"primary-blue\"\r\n      onClick={() => dispatch(openRowEditors(rowKeyValue))}\r\n    >\r\n      Edit\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst StyledDatatable = styled.div`\r\n  & .ka {\r\n    ${tw`mx-auto text-lg`}\r\n  }\r\n\r\n  & .ka-table-wrapper {\r\n    ${tw`overflow-x-auto border-collapse p-1`}\r\n  }\r\n\r\n  & .ka-table {\r\n    ${tw`min-w-full border-collapse`}\r\n  }\r\n\r\n  & .ka-thead {\r\n    ${tw`text-left align-top`}\r\n  }\r\n\r\n  & .ka-tbody {\r\n    ${tw`text-left align-top text-14 font-light`}\r\n  }\r\n\r\n  & .ka-paging-pages {\r\n    ${tw`flex flex-row justify-end`}\r\n  }\r\n\r\n  & .ka-paging {\r\n    ${tw`min-w-full grid grid-rows-1 grid-cols-2 text-14 text-primary-blue`}\r\n  }\r\n\r\n  & .ka-paging-sizes {\r\n    ${tw`grid grid-rows-1 grid-cols-pagination items-center justify-items-center`}\r\n  }\r\n\r\n  & .ka-paging-size {\r\n    ${tw`cursor-pointer`}\r\n  }\r\n\r\n  & .ka-paging-page-index-active,\r\n  .ka-paging-size-active {\r\n    ${tw`bg-gray-200 rounded-full w-7 text-center`}\r\n  }\r\n\r\n  & .ka-filter-row-cell {\r\n    ${tw`text-sm md:text-base whitespace-nowrap py-5 \r\n    border-b border-gray-200 border-t pr-4 align-middle\r\n    `}\r\n  }\r\n\r\n  & .ka-thead-cell {\r\n    ${tw`pb-5`}\r\n  }\r\n\r\n  & .ka-thead-cell-content {\r\n    ${tw`text-gray-400 text-15 font-medium`}\r\n  }\r\n\r\n  & .ka-cell-editor {\r\n    ${tw`w-full`}\r\n  }\r\n\r\n  & .ka-cell {\r\n    ${tw`py-5 border-b border-gray-200 text-primary-blue align-middle`}\r\n  }\r\n\r\n  & .ka-cell:last-child {\r\n    ${tw`text-center`}\r\n  }\r\n\r\n  & .ka-icon {\r\n    position: relative;\r\n  }\r\n\r\n  & .ka-icon-sort-arrow-up:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowUpIcon});\r\n    background-size: cover;\r\n    margin-left: 10px;\r\n    font-size: 17px;\r\n  }\r\n  & .ka-icon-sort-arrow-down:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowDownIcon});\r\n    background-size: cover;\r\n    font-size: 17px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  & .ka-pointer {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .ka-loading {\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #ffffffcc;\r\n    margin: auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    z-index: 1;\r\n  }\r\n\r\n  & .ka-paging-page-index {\r\n    ${tw`mr-4 cursor-pointer text-primary-blue`}\r\n  }\r\n`;\r\n\r\nconst tableReducer = (prevProps, action) => {\r\n  if (action.type === \"LOAD_TOTAL_PAGES\")\r\n    return {\r\n      ...prevProps,\r\n      paging: {\r\n        ...prevProps.paging,\r\n        pagesCount: Math.round(action.payload / CONTAINERS_PAGE_SIZE),\r\n      },\r\n    };\r\n  return kaReducer(prevProps, action);\r\n};\r\n\r\nconst DataTable = ({ childComponents, ...tableProps }) => {\r\n  // console.log(\"DataTable tableProps\", tableProps)\r\n  // console.log('SelectionCell kaPropsUtils.getSelectedData(tableProps)', kaPropsUtils.getSelectedData(tableProps))\r\n  return (\r\n    <StyledDatatable>\r\n      <Table\r\n        {...tableProps}\r\n        childComponents={{\r\n          pagingIndex: {\r\n            elementAttributes: ({ isActive }) => ({\r\n              style: isActive && { color: \"var(--primary-blue)\" },\r\n            }),\r\n          },\r\n          ...childComponents,\r\n        }}\r\n      />\r\n    </StyledDatatable>\r\n  );\r\n};\r\n\r\nexport {\r\n  DataTable,\r\n  EditButton,\r\n  SaveButton,\r\n  DateEditor,\r\n  SearchEditor,\r\n  RangeEditor,\r\n  NumberEditor,\r\n  SelectEditor,\r\n  SelectionHeader,\r\n  SelectionCell,\r\n  CustomEditor,\r\n  CustomNumberEditor,\r\n  tableReducer,\r\n};\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\ContainerTable.jsx",["710"],"import React from \"react\";\r\nimport {\r\n  DataTable,\r\n  SelectionCell,\r\n  SelectionHeader,\r\n  SelectEditor,\r\n  SearchEditor,\r\n  SaveButton,\r\n  EditButton,\r\n  CustomEditor,\r\n  CustomNumberEditor,\r\n  RangeEditor,\r\n} from \"../../../../common/components/Table/DataTable\";\r\nimport {\r\n  DataType,\r\n  FilteringMode,\r\n  SortDirection,\r\n  SortingMode,\r\n} from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport containersData from \"../../../../common/constants/containers\";\r\nimport { flattenData } from \"../../../../common/utils/functions\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\n\r\nconst CustomCell = ({ rowData, value }) => {\r\n  return (\r\n    <div>\r\n      {value} {currencies[rowData.containerCurrency]}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tablePropsInit = {\r\n  columns: [\r\n    {\r\n      key: \"selection-cell\",\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerNo\",\r\n      title: \"Container ID\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerDepot\",\r\n      title: \"Depot\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerType\",\r\n      title: \"Type\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerCondition\",\r\n      title: \"Condition\",\r\n      dataType: DataType.String,\r\n      isEditable: true,\r\n      // isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerPrice\",\r\n      title: \"Price\",\r\n      dataType: DataType.Number,\r\n      isEditable: true,\r\n      // isEditable: false,\r\n      filterRowOperator: \"<=\",\r\n      filterRowValue: 30000,\r\n      sortDirection: SortDirection.Ascend,\r\n    },\r\n    {\r\n      key: \"containerSize\",\r\n      title: \"Size\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    // {\r\n    //   key: \"containerAge\",\r\n    //   title: \"Age\",\r\n    //   dataType: DataType.Number,\r\n    //   isEditable: false,\r\n    //   filterRowOperator: \"<=\",\r\n    //   filterRowValue: 100,\r\n    // },\r\n    // {\r\n    //   key: \"buildDate\",\r\n    //   title: \"Age\",\r\n    //   dataType: DataType.Number,\r\n    //   isEditable: false,\r\n    //   filterRowOperator: \"<=\",\r\n    //   filterRowValue: 2021,\r\n    // },\r\n    { key: \"editColumn\" },\r\n  ],\r\n  loading: {\r\n    enabled: false,\r\n  },\r\n  paging: {\r\n    enabled: true,\r\n    pageIndex: 0,\r\n    // pageSize: CONTAINERS_PAGE_SIZE,\r\n    pageSize: 15,\r\n    pageSizes: [15, 30, 45],\r\n    // position: PagingPosition.Bottom\r\n  },\r\n  data: [],\r\n  rowKeyField: \"containerNo\",\r\n  sortingMode: SortingMode.Single,\r\n  filteringMode: FilteringMode.FilterRow,\r\n};\r\n// console.log('flattenData(containersData[\"condition\"])[0]', flattenData(containersData[\"condition\"])[0])\r\nconst ContainerTable = ({\r\n  tableProps,\r\n  dispatch,\r\n  name = \"awaitingConfirmation\",\r\n}) => {\r\n  console.log(\"ContainerTable name\", name);\r\n  return (\r\n    <DataTable\r\n      {...tableProps}\r\n      childComponents={{\r\n        cellText: {\r\n          content: (props) => {\r\n            if (props.column.key === \"selection-cell\") {\r\n              return <SelectionCell {...props} />;\r\n            }\r\n            if (props.column.key === \"editColumn\" && name !== \"inStock\") {\r\n              return <EditButton {...props} />;\r\n            }\r\n            if (props.column.key === \"containerPrice\") {\r\n              return <CustomCell {...props} />;\r\n            }\r\n          },\r\n        },\r\n        cellEditor: {\r\n          content: (props) => {\r\n            switch (props.column.key) {\r\n              case \"editColumn\":\r\n                return <SaveButton {...props} />;\r\n              case \"containerCondition\":\r\n                return (\r\n                  <CustomEditor\r\n                    defaultValue={flattenData(containersData[\"condition\"])[0]}\r\n                    options={flattenData(containersData[\"condition\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerPrice\":\r\n                return <CustomNumberEditor {...props} />;\r\n              default:\r\n                return;\r\n            }\r\n          },\r\n        },\r\n        filterRowCell: {\r\n          content: (props) => {\r\n            switch (props.column.key) {\r\n              case \"selection-cell\":\r\n              case \"editColumn\":\r\n                return <></>;\r\n              case \"containerAge\":\r\n              case \"containerPrice\":\r\n                return <RangeEditor {...props} />;\r\n              case \"containerSize\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"size\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerType\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"type\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerCondition\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"condition\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerNo\":\r\n                return <SearchEditor {...props} />;\r\n              default:\r\n                return <></>;\r\n            }\r\n          },\r\n        },\r\n        headCell: {\r\n          content: (props) => {\r\n            if (props.column.key === \"selection-cell\") {\r\n              return (\r\n                <SelectionHeader\r\n                  {...props}\r\n                  areAllRowsSelected={kaPropsUtils.areAllFilteredRowsSelected(\r\n                    tableProps\r\n                  )}\r\n                />\r\n              );\r\n            }\r\n          },\r\n        },\r\n      }}\r\n      dispatch={dispatch}\r\n    />\r\n  );\r\n};\r\n\r\nexport { ContainerTable, tablePropsInit };\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\BookingTable.jsx",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733"],"import React from \"react\";\r\nimport { ITableProps, kaReducer, Table } from \"ka-table\";\r\nimport {\r\n  DataTable,\r\n  SelectionCell,\r\n  SelectionHeader,\r\n  SelectEditor,\r\n  SearchEditor,\r\n  SaveButton,\r\n  EditButton,\r\n  CustomEditor,\r\n  BookingButton,\r\n  CustomNumberEditor,\r\n  RangeEditor,\r\n  DateEditor,\r\n} from \"./DataTable\";\r\nimport {\r\n  DataType,\r\n  ActionType,\r\n  FilteringMode,\r\n  SortDirection,\r\n  EditingMode,\r\n  SortingMode,\r\n} from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport { DispatchFunc } from \"ka-table/types\";\r\nimport {\r\n  openEditor,\r\n  loadData,\r\n  updateData,\r\n  closeRowEditors,\r\n  hideLoading,\r\n  saveRowEditors,\r\n  showLoading,\r\n} from \"ka-table/actionCreators\";\r\nimport { ICellTextProps } from \"ka-table/props\";\r\nimport Modal from \"../../../../common/components/Modal/Modal\";\r\nimport { Text } from \"../../../../common/styles\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\nimport { Loader } from \"../../../../common/styles\";\r\nimport { BuyerProfileIcon } from \"../../../../assets/icons\";\r\nimport useQuery from \"../../../../common/hooks/api/useQuery\";\r\nimport { customerEndpoints } from \"../../../../common/constants/apiEndpoints\";\r\nimport tw from \"twin.macro\";\r\n\r\n// const CustomCellStyle = ({\r\n//   column,\r\n//   dispatch,\r\n//   rowKeyValue,\r\n//   value,\r\n// }) => {\r\n//   return (\r\n//     <div onClick={() => {\r\n//       dispatch(openEditor(rowKeyValue, column.key));\r\n//     }} className={value ? 'custom-cell-demo-loyal' : 'custom-cell-demo-no-loyal'}>\r\n//       {value ? 'Loyal Program Member' : 'No Loyal Programm'}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst CustomCell = ({ rowData, value }) => {\r\n  return (\r\n    <div>\r\n      {value} {currencies[rowData.containerCurrency]}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BuyerProfile = (name) => {\r\n  // console.log('BuyerProfile name', name)\r\n  const {\r\n    data: customerData,\r\n    isError,\r\n    isLoading,\r\n  } = useQuery(`${customerEndpoints.list}`);\r\n  // console.log('BuyerProfile customerData', customerData)\r\n\r\n  return isLoading ? (\r\n    <Loader format=\"smaller\" />\r\n  ) : isError ? (\r\n    \"error\"\r\n  ) : (\r\n    customerData &&\r\n    customerData.map((buyer) => {\r\n      return (\r\n        buyer &&\r\n        buyer.customerFirstName === name.name && (\r\n          <div tw=\"text-lg text-left px-9 pt-41\">\r\n            <div tw=\"grid grid-cols-2 pb-25\">\r\n              <span tw=\"font-medium\">User ID</span>\r\n              <span tw=\"font-normal\">{buyer.customerUid}</span>\r\n            </div>\r\n            <div tw=\"grid grid-cols-2 pb-25\">\r\n              <span tw=\"font-medium\">Email</span>\r\n              <span tw=\"font-normal\">{buyer.customerEmail}</span>\r\n            </div>\r\n            <div tw=\"grid grid-cols-2\">\r\n              <span tw=\"font-medium\">Phone Number</span>\r\n              <span tw=\"font-normal\">{buyer.customerMobile}</span>\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    })\r\n  );\r\n};\r\n\r\nconst CustomImageCell = ({ value }) => {\r\n  console.log(\"CustomImageCell value\", value);\r\n  return (\r\n    <Modal\r\n      width=\"445px\"\r\n      height=\"334px\"\r\n      titleFontSize=\"21px\"\r\n      component={\r\n        <>\r\n          <BuyerProfileIcon tw=\"w-5 inline mr-2\" alt=\"Buyer Profile\" />\r\n          <span>{value}</span>\r\n        </>\r\n      }\r\n      title={\r\n        <>\r\n          <BuyerProfileIcon tw=\"w-20 h-20 inline mr-41\" alt=\"Buyer Profile\" />\r\n          <span>{value}</span>\r\n        </>\r\n      }\r\n      children={<BuyerProfile name={value} />}\r\n    />\r\n  );\r\n};\r\n\r\nconst StyleText = (text) => {\r\n  switch (text) {\r\n    case \"not ready\":\r\n    case \"none\":\r\n    case \"buyer not uploaded\":\r\n    case \"not uploaded\":\r\n      return \"gray\";\r\n\r\n    case \"invoice sent\":\r\n      return \"yellow\";\r\n\r\n    case \"picked up\":\r\n    case \"paid\":\r\n    case \"uploaded / validated\":\r\n      return \"green\";\r\n\r\n    case \"uploaded not validated\":\r\n      return \"blue\";\r\n\r\n    case \"ready for pick up\":\r\n      return \"orange\";\r\n\r\n    case \"storage overdue\":\r\n      return \"red\";\r\n\r\n    default:\r\n    // code block\r\n  }\r\n};\r\n\r\nconst dataArray = [\r\n  {\r\n    id: 1,\r\n    orderId: 4569,\r\n    // bookingQuantity: 8,\r\n    customerFirstName: \"Bette Ross\",\r\n    amount: 1800,\r\n    bookingDate: new Date(2021, 10, 9),\r\n    documentStatus: \"Not Uploaded\",\r\n    bookingStatus: \"None\",\r\n    paymentStatus: \"None\",\r\n  },\r\n  {\r\n    id: 2,\r\n    orderId: 7721,\r\n    // bookingQuantity: 10,\r\n    customerFirstName: \"John Doe\",\r\n    amount: 1400,\r\n    bookingDate: new Date(2021, 10, 8),\r\n    documentStatus: \"Not Uploaded\",\r\n    bookingStatus: \"None\",\r\n    paymentStatus: \"Invoice Sent\",\r\n  },\r\n  {\r\n    id: 3,\r\n    orderId: 9071,\r\n    // bookingQuantity: 1,\r\n    customerFirstName: \"Joe Gil\",\r\n    amount: 900,\r\n    bookingDate: new Date(2021, 11, 8),\r\n    documentStatus: \"Uploaded / Not Validated\",\r\n    bookingStatus: \"Ready for pick up\",\r\n    paymentStatus: \"Paid\",\r\n  },\r\n  {\r\n    id: 4,\r\n    orderId: 5237,\r\n    // bookingQuantity: 3,\r\n    customerFirstName: \"Rose Smith\",\r\n    amount: 1000,\r\n    bookingDate: new Date(2021, 12, 9),\r\n    documentStatus: \"Uploaded / Validated\",\r\n    bookingStatus: \"Storage overdue\",\r\n    paymentStatus: \"Paid\",\r\n  },\r\n  {\r\n    id: 5,\r\n    orderId: 8234,\r\n    // bookingQuantity: 3,\r\n    customerFirstName: \"Noami Sul\",\r\n    amount: 1000,\r\n    bookingDate: new Date(2021, 11, 12),\r\n    documentStatus: \"Uploaded / Validated\",\r\n    bookingStatus: \"Picked up\",\r\n    paymentStatus: \"Paid\",\r\n  },\r\n  {\r\n    id: 5,\r\n    orderId: 8234,\r\n    // bookingQuantity: 3,\r\n    customerFirstName: \"Noami Sul\",\r\n    amount: 1000,\r\n    bookingDate: new Date(2021, 11, 12),\r\n    documentStatus: \"Uploaded / Validated\",\r\n    bookingStatus: \"Picked up\",\r\n    paymentStatus: \"Paid\",\r\n  },\r\n  {\r\n    id: 5,\r\n    orderId: 8234,\r\n    // bookingQuantity: 3,\r\n    customerFirstName: \"Noami Sul\",\r\n    amount: 1000,\r\n    bookingDate: new Date(2021, 11, 12),\r\n    documentStatus: \"Uploaded / Validated\",\r\n    bookingStatus: \"Picked up\",\r\n    paymentStatus: \"Paid\",\r\n  },\r\n];\r\n\r\n// let Quantities = dataArray.map(({ bookingQuantity }) => bookingQuantity)\r\nlet TotalAmounts = dataArray.map(({ amount }) => amount);\r\n\r\nArray.prototype.max = function () {\r\n  return Math.max.apply(null, this);\r\n};\r\n\r\nArray.prototype.min = function () {\r\n  return Math.min.apply(null, this);\r\n};\r\n\r\nconst tablePropsInit = {\r\n  columns: [\r\n    { key: \"selection-cell\", isEditable: false },\r\n    {\r\n      key: \"orderId\",\r\n      title: \"Ref.#\",\r\n      dataType: DataType.String,\r\n      sortDirection: SortDirection.Ascend,\r\n    },\r\n    // { key: 'bookingQuantity', title: 'Qty', dataType: DataType.String, sortDirection: SortDirection.Ascend },\r\n    // the used one\r\n    // { key: 'bookingQuantity', title: 'Qty', dataType: DataType.Number, isEditable: false,\r\n    // filterRowOperator: \"<=\", filterRowValue: Quantities.max(), max: Quantities.max() },\r\n    { key: \"fullName\", title: \"Buyer\", dataType: DataType.String },\r\n    {\r\n      key: \"amount\",\r\n      title: \"Total Amount\",\r\n      dataType: DataType.Number,\r\n      isEditable: false,\r\n      filterRowOperator: \"<=\", //filterRowValue: TotalAmounts.max(), max: TotalAmounts.max()\r\n      filterRowValue: 100000,\r\n      max: 100000,\r\n    },\r\n    {\r\n      key: \"bookingDate\",\r\n      title: \"date Booked\",\r\n      dataType: DataType.String,\r\n    },\r\n    { key: \"documentStatus\", title: \"Documents\", dataType: DataType.String },\r\n    {\r\n      key: \"bookingStatus\",\r\n      title: \"Booking Status\",\r\n      dataType: DataType.String,\r\n      isEditable: true,\r\n    },\r\n    {\r\n      key: \"paymentStatus\",\r\n      title: \"Payment Status\",\r\n      dataType: DataType.String,\r\n      isEditable: true,\r\n    },\r\n    { key: \"editColumn\" },\r\n  ],\r\n  data: [],\r\n  loading: {\r\n    enabled: true,\r\n  },\r\n  // paging: {\r\n  //   enabled: true,\r\n  //   pageIndex: 0,\r\n  //   pageSize: CONTAINERS_PAGE_SIZE,\r\n  //   pageSizes: [15, 30, 45],\r\n  //   // position: PagingPosition.Bottom\r\n  // },\r\n  paging: {\r\n    enabled: true,\r\n    pageIndex: 0,\r\n    pageSize: 5,\r\n    pageSizes: [5, 10, 15],\r\n  },\r\n  rowKeyField: \"orderId\",\r\n  sortingMode: SortingMode.Single,\r\n  filteringMode: FilteringMode.FilterRow,\r\n  // editableCells: [{ columnKey: 'bookingStatus' }],\r\n  // editingMode: EditingMode.Cell,\r\n  // singleAction: loadData(),\r\n\r\n  format: ({ column, value }) => {\r\n    // console.log('format tablePropsInit column.key', column.key)\r\n    // console.log('format tablePropsInit value', value)\r\n    // if (column.key === 'amount') {\r\n    //   return `$${value}`;\r\n    // console.log('inside format ${value}', value)\r\n    // return 'no value';\r\n    // }\r\n    // if (column.dataType === DataType.Date) {\r\n    //   return value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' });\r\n    // }\r\n  },\r\n};\r\n\r\nconst CustomCellStyle = ({\r\n  column,\r\n  dispatch,\r\n  rowKeyValue,\r\n  value,\r\n  ...props\r\n}) => {\r\n  return (\r\n    //   <div className={value ? 'custom-cell-demo-loyal' : 'custom-cell-demo-no-loyal'}>\r\n    //     {value ? 'Loyal Program Member' : 'No Loyal Program'}\r\n    //   </div>  padding-left: 9px;  width: -moz-fit-content; padding-right: 10px;\r\n    <Text tw=\"px-2.5 w-max\" color={StyleText(value)}>\r\n      {value}\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst BookingTable = ({ tableProps, dispatch }) => {\r\n  // console.log('BookingTable: tableProps.data', tableProps.data)\r\n  return (\r\n    <div>\r\n      {/* <Table\r\n        {...tableProps}\r\n        data={dataArrayy}\r\n        dispatch={dispatch}\r\n        /> */}\r\n      <DataTable\r\n        {...tableProps}\r\n        // data={dataArrayy}\r\n        childComponents={{\r\n          cellText: {\r\n            content: (props) => {\r\n              console.log(\"cellText props\", props);\r\n              if (props.column.key === \"selection-cell\") {\r\n                return <SelectionCell {...props} />;\r\n              }\r\n              if (props.column.key === \"editColumn\") {\r\n                return (\r\n                  <BookingButton\r\n                    name={\r\n                      props.rowData.documentStatus === \"Uploaded / Validated\" &&\r\n                      props.rowData.paymentStatus === \"Paid\" &&\r\n                      props.rowData.bookingStatus === \"Picked up\"\r\n                        ? \"View\"\r\n                        : \"Manage\"\r\n                    }\r\n                    {...props}\r\n                  />\r\n                );\r\n              }\r\n              if (props.column.key === \"customerFirstName\") {\r\n                return <CustomImageCell {...props} />;\r\n              }\r\n              if (props.column.key === \"amount\") {\r\n                return <CustomCell {...props} />;\r\n              }\r\n              if (\r\n                props.column.key === \"documentStatus\" ||\r\n                props.column.key === \"bookingStatus\" ||\r\n                props.column.key === \"paymentStatus\"\r\n              ) {\r\n                return <CustomCellStyle {...props} />;\r\n              }\r\n            },\r\n          },\r\n          cellEditor: {\r\n            content: (props) => {\r\n              // code switch props.column.key\r\n            },\r\n          },\r\n          filterRowCell: {\r\n            content: (props) => {\r\n              switch (props.column.key) {\r\n                case \"selection-cell\":\r\n                case \"editColumn\":\r\n                  return <></>;\r\n                case \"amount\":\r\n                case \"bookingQuantity\":\r\n                  return <RangeEditor {...props} />;\r\n                // case \"customerFirstName\":\r\n                //   return (\r\n                //     <SelectEditor\r\n                //       // options={flattenData(containersData[\"size\"])}\r\n                //       // {...props}\r\n                //     />\r\n                //   );\r\n                // case \"bookingDocuments\":\r\n                //   return (\r\n                //     <SelectEditor\r\n                //       // options={flattenData(containersData[\"type\"])}\r\n                //       {...props}\r\n                //     />\r\n                //   );\r\n                case \"bookingDate\":\r\n                  return (\r\n                    <DateEditor\r\n                      // options={flattenData(containersData[\"condition\"])}\r\n                      options={[\"21/10/2020\"]}\r\n                      {...props}\r\n                    />\r\n                  );\r\n                case \"documentStatus\":\r\n                case \"bookingDocuments\":\r\n                  return (\r\n                    <SelectEditor\r\n                      // options={flattenData(containersData[\"condition\"])}\r\n                      options={[\r\n                        \"Not Uploaded\",\r\n                        \"Uploaded / Not Validated\",\r\n                        \"Uploaded / Validated\",\r\n                      ]}\r\n                      {...props}\r\n                    />\r\n                  );\r\n\r\n                case \"bookingStatus\":\r\n                  return (\r\n                    <SelectEditor\r\n                      // options={flattenData(containersData[\"condition\"])}\r\n                      options={[\r\n                        \"None\",\r\n                        \"Ready for pick up\",\r\n                        \"Storage overdue\",\r\n                        \"Picked up\",\r\n                      ]}\r\n                      {...props}\r\n                    />\r\n                  );\r\n                case \"paymentStatus\":\r\n                  return (\r\n                    <SelectEditor\r\n                      // options={flattenData(containersData[\"condition\"])}\r\n                      options={[\r\n                        \"None\",\r\n                        \"Invoice Sent\",\r\n                        \"Awaiting Validation\",\r\n                        \"Paid\",\r\n                      ]}\r\n                      {...props}\r\n                    />\r\n                  );\r\n                // case \"paymentStatus\":\r\n                //   return (\r\n                //     <SelectEditor\r\n                //        options={[]}\r\n                //       {...props}\r\n                //     />\r\n                //   );\r\n                default:\r\n                  return <SearchEditor {...props} />;\r\n              }\r\n            },\r\n          },\r\n          headCell: {\r\n            content: (props) => {\r\n              if (props.column.key === \"selection-cell\") {\r\n                return (\r\n                  <SelectionHeader\r\n                    {...props}\r\n                    areAllRowsSelected={kaPropsUtils.areAllFilteredRowsSelected(\r\n                      tableProps\r\n                    )}\r\n                  />\r\n                );\r\n              }\r\n            },\r\n          },\r\n        }}\r\n        dispatch={dispatch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { BookingTable, tablePropsInit };\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ListDocuments.jsx",["734","735","736","737","738","739"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PaperIcon, BackSpace } from \"../../../assets/icons\";\r\nimport { Checkbox, Card, Button, Text } from \"../../../common/styles\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst ThankYouDescription = tw.div`\r\ntext-gray-2 text-17 \r\nleading-normal pb-6\r\n`;\r\n\r\nconst Payment = tw.div`justify-self-start pb-50`;\r\nconst CustomsClearance = tw.div`justify-self-start`;\r\nconst Title = tw.div`font-medium text-xl text-primary-blue pb-17`;\r\nconst DocumentName = tw.div`text-17 text-lighter-blue pb-25`;\r\nconst Actions = tw.div``;\r\nconst ValidateButton = tw.button`w-151 h-35 text-13 text-casual-green border mr-2.5`;\r\nconst AskForReUploadButton = tw.button`w-151 h-35 text-13 text-primary-red border`;\r\n\r\nconst ListDocuments = () => {\r\n  const history = useHistory();\r\n  const [isChecked, setIsChecked] = useState({\r\n    \"CMAU - 782190\": false,\r\n    \"CMAU - 633781\": false,\r\n    \"CMAU - 374654\": false,\r\n    \"CMAU - 951379\": false,\r\n    \"CMAU - 375654\": false,\r\n    \"CMAU - 955379\": false,\r\n  });\r\n\r\n  const [checkedCount, setCheckedCount] = useState(0);\r\n\r\n  const handleChecked = ({ target: { name, checked } }) => {\r\n    setIsChecked({\r\n      ...isChecked,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // getOrderStatus('cart')\r\n    history.push(\"/agent/containers/booking-list\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"ListDocuments isChecked\", isChecked)\r\n    var count = Object.keys(isChecked).filter(function (key) {\r\n      return isChecked[key] === true;\r\n    }).length;\r\n    // console.log('count', count)\r\n    setCheckedCount(count);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isChecked]);\r\n\r\n  var noDocumentsUploaded = (\r\n    <>\r\n      <PaperIcon tw=\"w-xxl h-xxl text-gray-2\" alt=\"Empty Document\" />\r\n      <ThankYouDescription>\r\n        There are no documents uploaded by User Name for <br /> this booking\r\n      </ThankYouDescription>\r\n      <Button\r\n        color=\"primary-blue\"\r\n        tw=\"w-56 max-w-full p-0 h-45 text-sm grid justify-items-center items-center grid-cols-2ColAuto gap-x-1.5\"\r\n      >\r\n        <BackSpace tw=\"justify-self-end\" />\r\n        <div\r\n          tw=\"justify-self-start\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Back to Bookings Page{\" \"}\r\n        </div>\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <section tw=\"mt-40 mx-auto max-w-full grid grid-rows-confirmation justify-items-center items-start gap-y-7 text-left pt-10 sm:pl-lg sm:pr-lg pb-7\">\r\n      {/* { noDocumentsUploaded } */}\r\n      <Payment>\r\n        <Title>Documents</Title>\r\n        <DocumentName>6395_Client432_receipt.pdf</DocumentName>\r\n        <Actions>\r\n          <ValidateButton>Validate Payment</ValidateButton>\r\n          <AskForReUploadButton>Ask for a reupload</AskForReUploadButton>\r\n        </Actions>\r\n      </Payment>\r\n      <CustomsClearance>\r\n        <Title>Customs Clearance</Title>\r\n        <DocumentName>6395_Client432_clearance.pdf</DocumentName>\r\n        <Actions>\r\n          <ValidateButton>Validate Document</ValidateButton>\r\n          <AskForReUploadButton>Ask for a reupload</AskForReUploadButton>\r\n        </Actions>\r\n      </CustomsClearance>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListDocuments;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ChooseContainers.jsx",["740","741","742","743","744","745","746","747","748","749"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n} from \"../../../redux\";\r\nimport ViewChosenContainers from \"./ViewChosenContainers\";\r\nimport Collapse from \"../../../common/components/Collapse\";\r\nimport { containerEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { Checkbox, Card, Button, Text } from \"../../../common/styles\";\r\nimport tw from \"twin.macro\";\r\nimport axios from \"axios\";\r\n\r\nconst Title = tw.div`\r\ntext-primary-blue text-17 font-medium \r\npt-30 pb-1\r\n`;\r\n\r\nconst Product = tw.div`\r\ngrid grid-cols-7 gap-2.5`;\r\n\r\nconst Description = tw.div`\r\ntext-primary-blue text-17 font-medium`;\r\n\r\nconst Light = tw.span`\r\nfont-normal`;\r\n\r\nconst TableWrapper = tw.div`\r\nw-full bg-gray pt-1 pb-2`;\r\n\r\nconst Table = tw.table`\r\nmax-w-full md:w-432 \r\ntext-primary-blue text-17\r\ntext-center ml-41 leading-none`;\r\n\r\nconst Titles = tw.tr`\r\nfont-medium`;\r\n\r\nconst Tbody = tw.tbody`\r\nfont-normal`;\r\n\r\nconst Th = tw.th`\r\npy-3.5 font-medium`;\r\n\r\nconst Tr = tw.tr`\r\nborder-b border-gray-200 h-38`;\r\n\r\nconst Actions = tw.div`\r\ntext-right pt-sm`;\r\n\r\nconst Cancel = tw.span`\r\nfont-light underline mr-30 cursor-pointer`;\r\n\r\nconst StyledStatus = tw.div`\r\n`;\r\n\r\nconst SaveBtn = tw(Button)`\r\nh-41 w-151 mdl:text-14 xs:text-13 \r\nhover:( bg-secondary-blue border-secondary-blue text-white )\r\n`;\r\n\r\nconst StyledCheckbox = tw(Checkbox)`\r\nw-25 h-25 text-light-green\r\nbg-primary-blue rounded-xl\r\nfocus:ring-0 \r\nfocus:outline-none focus-visible:ring-2 \r\nfocus-visible:ring-light-green\r\ncursor-pointer\r\n`;\r\n\r\nconst ChooseContainers = (props) => {\r\n  const {\r\n    loggedInUser,\r\n    orderId,\r\n    orderData,\r\n    cartData,\r\n    productData,\r\n    cartDataError,\r\n  } = props;\r\n  const history = useHistory();\r\n  const [saved, setIsSaved] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [isChecked, setIsChecked] = useState([\r\n    // \"CMAU - 782190\": false,\r\n    // \"CMAU - 633781\": false,\r\n    // \"CMAU - 374654\": false,\r\n    // \"CMAU - 951379\": false,\r\n    // \"CMAU - 375654\": false,\r\n    // \"CMAU - 955379\": false\r\n  ]);\r\n\r\n  const [containersData, setContainersData] = useState({});\r\n\r\n  //   const queryString = window.location.search;\r\n  //   const urlParams = new URLSearchParams(queryString);\r\n  // const referenceNo = urlParams.get('refNo')\r\n\r\n  const [checkedCount, setCheckedCount] = useState([]);\r\n  console.log(\"chooseContainers props\", props);\r\n  console.log(\"chooseContainers orderData\", orderData);\r\n  console.log(\"chooseContainers productData\", productData);\r\n  // const [filters, setFilters] = useState({\r\n  //     containerType: 1,\r\n  //     containerCondition: \"booked\",\r\n  //     containerDepot: \"\",\r\n  //     containerCity: \"\",\r\n  //     containerCountry: \"\",\r\n  //     maxPrice: \" \"\r\n  // });\r\n  // const { filterQuery } = useQueryBuilder(filters);\r\n  // const { data, isError, isLoading } = useQuery(\r\n  //     `${containerEndpoints.list}?${filterQuery}`\r\n  // );\r\n\r\n  // console.log('isChecked',isChecked)\r\n  // var count = Object.keys(isChecked).filter(function (key) {\r\n  //     return (isChecked[key] === true);\r\n  // }).length;\r\n  // setCheckedCount(count)\r\n  // console.log('count', count)\r\n  // checkedCount[name] = count;\r\n  // setCheckedCount({ ...checkedCount })\r\n\r\n  useEffect(() => {\r\n    // console.log(\"ChooseContainers isChecked\", isChecked)\r\n    // var count = isChecked.length;\r\n    console.log('useEffect isChecked', isChecked)\r\n    const isCheckedCopy = [...isChecked]\r\n    // var isCheckedCopyy = isCheckedCopy.filter((v,i,a)=>a.findIndex(t=>(JSON.stringify(t) === JSON.stringify(v)))===i).length;\r\n//   console.log('isChecked isCheckedCopyy', isChecked, isCheckedCopyy)\r\n    var count = isCheckedCopy.filter(function (key) {\r\n        console.log('key key ', key )\r\n        console.log('Object.values(key).includes(true)', Object.values(key).includes(true) )\r\n        return (Object.values(key).includes(true));\r\n    }).length;\r\n    // count = count.filter((v,i,a)=>a.findIndex(t=>(JSON.stringify(t) === JSON.stringify(v)))===i).length;\r\n    console.log(\"count count\", count);\r\n    setCheckedCount(count);\r\n    setIsDisabled(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isChecked]);\r\n\r\n  useEffect(() => {\r\n    // if (loggedInUser) {\r\n    props.getOrderDetails(props.orderId);\r\n    // .then(props.getProductsList())\r\n    // }\r\n  }, [isChecked]);\r\n\r\n  useEffect(() => {\r\n    // props.getOrderDetails(referenceNo).then(response => {\r\n    //     props.getProductsList();\r\n    // })\r\n\r\n    // props.getOrderDetails(referenceNo).then(response => {\r\n    props.getProductsList();\r\n  }, [props.orderId]);\r\n\r\n  useEffect(() => {\r\n    orderData &&\r\n      productData.products &&\r\n      orderData.map((order) =>\r\n        productData.products.map(\r\n          (product) =>\r\n            order.productId === product.productId &&\r\n            axios\r\n              .get(\r\n                `${containerEndpoints.list}?containerType=${product.productTypeDisplay}&containerCondition=${product.productCondition}&containerDepot=${product.productDepot}&containerCity=${product.productCity}&containerCountry=${product.productCountry}&containerPrice=${product.productPrice}`\r\n              )\r\n              .then((response) => {\r\n                // console.log('response.data.containers', response.data.containers)\r\n                containersData[product.productId] = response.data.containers;\r\n                setContainersData({ ...containersData });\r\n                // console.log('containersData', containersData)\r\n                // console.log('containersData[product.productId]', containersData[product.productId])\r\n              })\r\n        )\r\n      );\r\n  }, [productData]);\r\n\r\n  console.log(\"ChooseContainers\", orderData);\r\n  console.log(\"ChooseContainers isChecked\", isChecked);\r\n\r\n  const handleChecked = ({ target: { name, checked } }, orderDetails) => {\r\n    console.log(\"orderDetails\", orderDetails);\r\n\r\n    let isCheckedCopy = [...isChecked];\r\n    let objIndex = isCheckedCopy.findIndex((obj) => obj.orderDetailsId === orderDetails);\r\n    console.log(\"objIndex\", objIndex);\r\n    if (objIndex === 0) {\r\n      isCheckedCopy[objIndex] = {\r\n        orderDetailsId: orderDetails,\r\n        containerNo: name,\r\n        [name]: checked,\r\n        containerStatus: \"Available\",\r\n      };\r\n    } else {\r\n      isCheckedCopy.push({\r\n        orderDetailsId: orderDetails,\r\n        containerNo: name,\r\n        [name]: checked,\r\n        containerStatus: \"Available\",\r\n      });\r\n    }\r\n\r\n    // console.log('isCheckedCopy', isCheckedCopy)\r\n    //     let newIsCheckedCopy = isCheckedCopy.map(el => (\r\n    //         el.orderDetailsId==='name'? {...el, key: value}: el\r\n    //   ))\r\n\r\n    setIsChecked(isCheckedCopy)\r\n    // setIsChecked([\r\n    //   ...isChecked,\r\n    //   {\r\n    //     orderDetailsId: orderDetails,\r\n    //     containerNo: name,\r\n    //     [name]: checked,\r\n    //     containerStatus: \"Available\",\r\n    //   },\r\n    // ]);\r\n  };\r\n\r\n  const saveSelectedContainers = () => {\r\n    console.log(\"isChecked\", isChecked);\r\n    // const containersToSave = Object.keys(isChecked).map(function (key, index) {\r\n    //   return {\r\n    //     containerNo: key,\r\n    //     containerStatus: \"Available\",\r\n    //     orderDetailsId: \"test\",\r\n    //   };\r\n    // });\r\n    axios\r\n      .put(`${containerEndpoints.updateContainerStatus}`, isChecked)\r\n      .then((response) => {console.log('Containers saved to bookings')});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {!saved ? (\r\n        <>\r\n          <Title>Choose Containers</Title>\r\n          {orderData &&\r\n            productData.products &&\r\n            orderData.map((order) =>\r\n              productData.products.map(\r\n                (product) =>\r\n                  order.productId === product.productId && (\r\n                    <Collapse\r\n                      trigger={\r\n                        <Card>\r\n                          <Product>\r\n                            <Description>\r\n                              Type: <Light>{product.productTypeDisplay}</Light>\r\n                            </Description>\r\n                            <Description>\r\n                              Condition:{\" \"}\r\n                              <Light>{product.productCondition}</Light>\r\n                            </Description>\r\n                            <Description>\r\n                              Location:{\" \"}\r\n                              <Light>\r\n                                {product.productCity}, {product.productCountry}\r\n                              </Light>\r\n                            </Description>\r\n                            <Description>\r\n                              Price:{\" \"}\r\n                              <Light>\r\n                                {product.productPrice} {product.productCurrency}\r\n                              </Light>\r\n                            </Description>\r\n                            <Description>\r\n                              In Stock: <Light>{product.inStock}</Light>\r\n                            </Description>\r\n                            <Description>\r\n                              Qty: <Light>{order.quantity}</Light>\r\n                            </Description>\r\n                            <StyledStatus>\r\n                              <Text\r\n                                tw=\"px-2.5 w-max\"\r\n                                color={\r\n                                  checkedCount === order.quantity\r\n                                    ? \"green\"\r\n                                    : \"blue\"\r\n                                }\r\n                              >\r\n                                {checkedCount} Chosen\r\n                              </Text>\r\n                            </StyledStatus>\r\n                          </Product>\r\n                        </Card>\r\n                      }\r\n                    >\r\n                      <TableWrapper>\r\n                        <Table>\r\n                          <thead>\r\n                            <Titles>\r\n                              <Th>Container ID</Th>\r\n                              <Th>Depot</Th>\r\n                              <Th>Age</Th>\r\n                              <Th></Th>\r\n                            </Titles>\r\n                          </thead>\r\n                          <tbody>\r\n                            {containersData &&\r\n                              containersData[product.productId] &&\r\n                              containersData[product.productId].map(\r\n                                (container) =>\r\n                                  console.log(\r\n                                    \"containersData container\",\r\n                                    container\r\n                                  ) || (\r\n                                    <Tr>\r\n                                      <td>{container.containerNo}</td>\r\n                                      <td>{container.containerDepot}</td>\r\n                                      <td>{container.containerAge}</td>\r\n                                      {/* <td>{Math.abs(2021 - container.buildDate)}</td> */}\r\n                                      {/* <td><StyledCheckbox color=\"green\" defaultChecked={isChecked[\"CMAU - 782190\"]} name=\"CMAU - 782190\" disabled={false} onClick={(e) => handleChecked(e)} /></td> */}\r\n                                      <td>\r\n                                        <StyledCheckbox\r\n                                          color=\"green\"\r\n                                          defaultChecked={false}\r\n                                          name={container.containerNo}\r\n                                          disabled={false}\r\n                                          onClick={(e) =>\r\n                                            handleChecked(\r\n                                              e,\r\n                                              order.orderDetailsId\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </td>\r\n                                    </Tr>\r\n                                  )\r\n                              )}\r\n                          </tbody>\r\n                        </Table>\r\n                      </TableWrapper>\r\n                    </Collapse>\r\n                  )\r\n              )\r\n            )}\r\n\r\n          <Actions>\r\n            <Cancel onClick={() => history.push(\"/agent/bookings\")}>\r\n              Cancel\r\n            </Cancel>\r\n            <SaveBtn\r\n              onClick={() => {\r\n                setIsSaved(true);\r\n                saveSelectedContainers();\r\n              }}\r\n              disabled={isDisabled}\r\n              color=\"primary-blue\"\r\n            >\r\n              Save\r\n            </SaveBtn>\r\n          </Actions>\r\n        </>\r\n      ) : (\r\n        <ViewChosenContainers orderId={props.orderId} setIsSaved={setIsSaved} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    count: state.count,\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n    productData: state.productData,\r\n    updateProduct: state.updateProduct,\r\n    orderDataError: state.orderDataError,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  connectUser,\r\n  disconnectUser,\r\n  getUserProfile,\r\n  getOrderID,\r\n  getOrderDetails,\r\n  getOrderSum,\r\n  getProductsList,\r\n  updateOrderDetails,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseContainers);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\style.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\OverflowTooltip.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\SalesCurveContainer.jsx",["750","751","752"],"import { useState } from \"react\";\r\nimport Curve from \"../../../common/components/Charts/Curve\";\r\nimport Alert from \"../../../common/components/Alert.jsx\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { orderEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport data from \"../../../api/graphData.json\";\r\nimport { Card, Loader } from \"../../../common/styles\";\r\nimport tw, { css } from \"twin.macro\";\r\n\r\n/** Styles **/\r\nconst wrapperStyles = css`\r\n  ${tw`\r\nw-full\r\nborder-primary-blue\r\nrelative\r\n`}\r\n`;\r\n\r\nconst CurveHeader = tw.div`\r\nflex sm:flex-row \r\nflex-col \r\njustify-between \r\nmb-10\r\n`;\r\n\r\nconst CurveHeaderTitle = tw.h1`\r\ntext-lg \r\nfont-semibold\r\n`;\r\n\r\nexport default function SalesCurveContainer() {\r\n  // const salesData = data[\"2020\"][\"0\"];\r\n\r\n  const [filters, setFilters] = useState({\r\n    // page: 1,\r\n    agentUid: \"S01168982\",\r\n  });\r\n  const { filterQuery } = useQueryBuilder(filters);\r\n  const {\r\n    data: salesData,\r\n    isError: salesDataError,\r\n    isLoading: salesDataLoading,\r\n  } = useQuery(`${orderEndpoints.sales}?` + filterQuery);\r\n\r\n  return (\r\n    <Card hasHighlightedBorder css={wrapperStyles}>\r\n      <CurveHeader>\r\n        <CurveHeaderTitle>Sales</CurveHeaderTitle>\r\n      </CurveHeader>\r\n      <div tw=\"h-96\">\r\n        {salesDataLoading ? (\r\n          <Loader format=\"smaller\" />\r\n        ) : salesDataError ? (\r\n          <>\r\n          <div> {salesDataError.message} </div>\r\n          {/* <Alert type=\"info\" message=\"no data to display\" /> */}\r\n          <Curve data={[]} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {salesData.length === 0 ? (\r\n              <Alert type=\"info\" message=\"no data to display\" />\r\n            ) : null}\r\n            <Curve data={salesData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\n{\r\n  /* {bookingsLoading ? (\r\n  <Loader format=\"smaller\" />\r\n) : bookingsError ? (\r\n  <div> {bookingsError.message} </div>\r\n) : (\r\n  <>\r\n    <InfoTable\r\n      headers={[\"Order #\", \"Total Amount\", \"Date Booked\", \"Booking Status\"]}\r\n      order={[\"orderId\", \"amount\", \"bookingDate\", \"bookingStatus\"]}\r\n      data={bookings.slice(0, 8)}\r\n    />\r\n    <SeeMoreWrapper>\r\n      <Link to=\"/agent/bookings\">\r\n        See More ...\r\n    </Link>\r\n    </SeeMoreWrapper>\r\n  </>\r\n)} */\r\n}\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\InfoCardContainer.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\InfoTableContainer.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\Dashboard\\InfoCardContainer.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\ManageAgentsTable.jsx",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782"],"import React from \"react\";\r\nimport {\r\n  StyledDownloadIcon as DownloadIcon,\r\n  HeaderTitle,\r\n  HeaderWrapper,\r\n  Line,\r\n  Number,\r\n} from \"./style\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { ITableProps, kaReducer, Table } from \"ka-table\";\r\nimport {\r\n  DataTable,\r\n  SelectionCell,\r\n  SelectionHeader,\r\n  SelectEditor,\r\n  SearchEditor,\r\n  SaveButton,\r\n  EditButton,\r\n  CustomEditor,\r\n  BookingButton,\r\n  CustomNumberEditor,\r\n  RangeEditor,\r\n  DateEditor,\r\n} from \"./DataTable\";\r\nimport {\r\n  DataType,\r\n  FilteringMode,\r\n  SortDirection,\r\n  PagingPosition,\r\n  EditingMode,\r\n} from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport { DispatchFunc } from \"ka-table/types\";\r\nimport { openEditor } from \"ka-table/actionCreators\";\r\nimport { ICellTextProps } from \"ka-table/props\";\r\nimport Modal from \"../../../../common/components/Modal/Modal\";\r\nimport { Text } from \"../../../../common/styles\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\nimport { BuyerProfileIcon } from \"../../../../assets/icons\";\r\nimport ArrowUpIcon from \"../../../../assets/icons/Arrow/Up.svg\";\r\nimport ArrowDownIcon from \"../../../../assets/icons/Arrow/Down.svg\";\r\nimport tw from \"twin.macro\";\r\n\r\n// const CustomCellStyle = ({\r\n//   column,\r\n//   dispatch,\r\n//   rowKeyValue,\r\n//   value,\r\n// }) => {\r\n//   return (\r\n//     <div onClick={() => {\r\n//       dispatch(openEditor(rowKeyValue, column.key));\r\n//     }} className={value ? 'custom-cell-demo-loyal' : 'custom-cell-demo-no-loyal'}>\r\n//       {value ? 'Loyal Program Member' : 'No Loyal Programm'}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst DownloadButton = ({ data, headers, filename, value }) => {\r\n  return (\r\n    <div tw=\"grid grid-cols-agentDepots text-primary-blue\">\r\n      <span tw=\"overflow-ellipsis overflow-hidden\">{value}</span>\r\n      <CSVLink data={data} headers={headers} filename={filename} tw=\"ml-2.5\">\r\n        <DownloadIcon />\r\n      </CSVLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomCell = ({ rowData, value }) => {\r\n  return (\r\n    <div>\r\n      {value} {currencies[rowData.containerCurrency]}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomImageCell = ({ value }) => {\r\n  return (\r\n    // <Modal width=\"445px\"\r\n    //   height=\"334px\"\r\n    //   titleFontSize=\"21px\"\r\n    //   component={<>\r\n    //     <BuyerProfileIcon tw=\"w-5 inline mr-2\" alt='Buyer Profile' />\r\n    //     <span>{value}</span>\r\n    //   </>\r\n    //   }\r\n    //   title={\r\n    <>\r\n      <span>{value}</span>\r\n    </>\r\n    //   }\r\n    //   children={\"\"}\r\n    // />\r\n  );\r\n};\r\n\r\nconst StyleText = (text) => {\r\n  switch (text) {\r\n    case \"Not Ready\":\r\n    case \"None\":\r\n    case \"Buyer / Not Uploaded\":\r\n    case \"Not Uploaded\":\r\n      return \"gray\";\r\n\r\n    case \"Invoice Sent\":\r\n      return \"yellow\";\r\n\r\n    case \"Picked up\":\r\n    case \"Paid\":\r\n    case \"Uploaded / Validated\":\r\n      return \"green\";\r\n\r\n    case \"Uploaded / Not Validated\":\r\n      return \"blue\";\r\n\r\n    case \"Ready for pick up\":\r\n      return \"orange\";\r\n\r\n    case \"Storage overdue\":\r\n      return \"red\";\r\n\r\n    default:\r\n    // code block\r\n  }\r\n};\r\n\r\nconst dataArray = [\r\n  {\r\n    id: 1,\r\n    name: \"Frank Delfino\",\r\n    email: \"F.delfino@cma-cgm.com\",\r\n    phone: \"+39 45612847\",\r\n    date: new Date(2019, 21, 8),\r\n    depotsAssigned: \"FrankDelfino_Depots\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Annalise Keating\",\r\n    email: \"A.Keating@cma-cgm.com\",\r\n    phone: \"+39 45612847\",\r\n    date: new Date(2019, 21, 8),\r\n    depotsAssigned: \"AnnaliseKeating_Depots\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wes Gibbons\",\r\n    email: \"W.gibbons@cma-cgm.com\",\r\n    phone: \"+39 45612847\",\r\n    date: new Date(2019, 21, 8),\r\n    depotsAssigned: \"WesGibbons_Depots\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Michaela Pratt\",\r\n    email: \"M.Pratt@cma-cgm.com\",\r\n    phone: \"+39 45612847\",\r\n    date: new Date(2019, 21, 8),\r\n    depotsAssigned: \"MichaelaPratt_Depots\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Gabriel Maddox\",\r\n    email: \"G.maddox@cma-cgm.com\",\r\n    phone: \"+39 45612847\",\r\n    date: new Date(2019, 21, 8),\r\n    depotsAssigned: \"GabrielMaddox_Depots\",\r\n  },\r\n];\r\n\r\nconst tablePropsInit = {\r\n  columns: [\r\n    { key: \"selection-cell\", isEditable: false },\r\n    {\r\n      key: \"fullName\",\r\n      title: \"Name\",\r\n      dataType: DataType.String,\r\n      sortDirection: SortDirection.Ascend,\r\n    },\r\n    { key: \"email\", title: \"Email\", dataType: DataType.String },\r\n    { key: \"phoneNumber\", title: \"Phone Number\", dataType: DataType.String },\r\n    {\r\n      key: \"created\",\r\n      title: \"Date Added\",\r\n      dataType: DataType.Date,\r\n    },\r\n    // { key: 'depotsAssigned', title: 'Depots Assigned', dataType: DataType.String },\r\n    { key: \"none\", title: \"Depots Assigned\", dataType: DataType.String },\r\n    { key: \"editColumn\", title: \"Actions\" },\r\n  ],\r\n  data: [],\r\n  paging: {\r\n    enabled: true,\r\n    pageIndex: 0,\r\n    pageSize: CONTAINERS_PAGE_SIZE,\r\n    // pageSize: 3,\r\n    pageSizes: [15, 30, 45],\r\n    // position: PagingPosition.Bottom\r\n  },\r\n  // loading: {\r\n  //   enabled: false,\r\n  // },\r\n  filteringMode: FilteringMode.FilterRow,\r\n  format: ({ column, value }) => {\r\n    // console.log('format tablePropsInit column.key', column.key)\r\n    // console.log('format tablePropsInit value', value)\r\n    // if (column.key === 'bookingTotalAmount'){\r\n    //     return `$${value}`;\r\n    //     // console.log('inside format ${value}', value)\r\n    //     // return 'no value';\r\n    //   }\r\n    if (column.dataType === DataType.Date) {\r\n      return (\r\n        value &&\r\n        value.toLocaleDateString(\"en\", {\r\n          month: \"2-digit\",\r\n          day: \"2-digit\",\r\n          year: \"numeric\",\r\n        })\r\n      );\r\n    }\r\n  },\r\n  rowKeyField: \"id\",\r\n};\r\n\r\nconst CustomCellStyle = ({\r\n  column,\r\n  dispatch,\r\n  rowKeyValue,\r\n  value,\r\n  ...props\r\n}) => {\r\n  return (\r\n    //   <div className={value ? 'custom-cell-demo-loyal' : 'custom-cell-demo-no-loyal'}>\r\n    //     {value ? 'Loyal Program Member' : 'No Loyal Program'}\r\n    //   </div>  padding-left: 9px;  width: -moz-fit-content; padding-right: 10px;\r\n    <Text tw=\"px-2.5 w-max\" color={StyleText(value)}>\r\n      {value}\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst ManageAgentsTable = ({ tableProps, dispatch }) => {\r\n  return (\r\n    <div>\r\n      {/* <Table\r\n        {...tableProps}\r\n        data={dataArray}\r\n        dispatch={dispatch}\r\n        /> */}\r\n      <DataTable\r\n        {...tableProps}\r\n        childComponents={{\r\n          cellText: {\r\n            content: (props) => {\r\n              // console.log(\"cellText props\", props);\r\n              if (props.column.key === \"selection-cell\") {\r\n                return <SelectionCell {...props} />;\r\n              }\r\n              if (props.column.key === \"editColumn\") {\r\n                return <EditButton agent={props.rawData} {...props} />;\r\n                return <EditButton agent={props.rawData} {...props} />;\r\n              }\r\n              if (props.column.key === \"name\") {\r\n                return <CustomImageCell {...props} />;\r\n              }\r\n              // if (props.column.key === \"depotsAssigned\") {\r\n              //   return\r\n              //    <DownloadButton\r\n              //     data={kaPropsUtils.getData(tableProps)}\r\n              //     headers={tableProps.columns.map((c) => ({\r\n              //       label: c.title,\r\n              //       key: c.key,\r\n              //     }))}\r\n              //     filename=\"depots_assigned.csv\"\r\n              //     {...props}\r\n              //   />\r\n              // }\r\n              // if (props.column.key === \"bookingTotalAmount\") {\r\n              //   return <CustomCell {...props} />;\r\n              // }\r\n              // if (props.column.key === \"depotsAssigned\" || props.column.key === \"bookingStatus\" || props.column.key === \"bookingPaymentStatus\") {\r\n              //   return <CustomCellStyle {...props} />;\r\n              // }\r\n            },\r\n          },\r\n          cellEditor: {\r\n            content: (props) => {\r\n              // code\r\n            },\r\n          },\r\n          filterRowCell: {\r\n            content: (props) => {\r\n              switch (props.column.key) {\r\n                case \"selection-cell\":\r\n                case \"editColumn\":\r\n                case \"phone\":\r\n                case \"depotsAssigned\":\r\n                case \"phoneNumber\":\r\n                case \"none\":\r\n                  return <></>;\r\n                case \"date\":\r\n                case \"created\":\r\n                  return (\r\n                    <DateEditor\r\n                      // options={flattenData(containersData[\"condition\"])}\r\n                      options={[\"21/10/2020\"]}\r\n                      {...props}\r\n                    />\r\n                  );\r\n                default:\r\n                  return <SearchEditor {...props} />;\r\n              }\r\n            },\r\n          },\r\n          headCell: {\r\n            content: (props) => {\r\n              // code\r\n            },\r\n          },\r\n        }}\r\n        dispatch={dispatch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ManageAgentsTable, tablePropsInit };\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Dashboard\\PieContainer.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\styles\\Tooltip\\Tooltip.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarContent.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\DataTable.jsx",["783"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, kaReducer } from \"ka-table\";\r\nimport {\r\n  deselectAllFilteredRows,\r\n  deselectRow,\r\n  selectAllFilteredRows,\r\n  selectRow,\r\n  selectRowsRange,\r\n  updateFilterRowValue,\r\n  closeRowEditors,\r\n  openRowEditors,\r\n  updateEditorValue,\r\n} from \"ka-table/actionCreators\";\r\nimport { kaDateUtils, kaPropsUtils } from \"ka-table/utils\";\r\nimport { Select, Checkbox, Input, Button } from \"../../../../common/styles\";\r\nimport ArrowUpIcon from \"../../../../assets/icons/Arrow/Up.svg\";\r\nimport ArrowDownIcon from \"../../../../assets/icons/Arrow/Down.svg\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst CustomNumberEditor = ({ value, dispatch, column, rowKeyValue, rowData }) => {\r\n  const [editorValue, setValue] = useState(value);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(updateEditorValue(rowKeyValue, column.key, event.currentTarget.value));\r\n    setValue(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        tw=\"w-20 mr-2\"\r\n        type=\"number\"\r\n        value={editorValue}\r\n        onChange={handleChange}\r\n      />\r\n      {currencies[rowData.containerCurrency]}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CustomEditor = ({ value, options, dispatch, column, rowKeyValue }) => {\r\n  const [editorValue, setValue] = useState(value);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(updateEditorValue(rowKeyValue, column.key, event.currentTarget.value));\r\n    setValue(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      value={editorValue}\r\n      onChange={handleChange}\r\n    >\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst SelectionCell = ({\r\n  rowKeyValue,\r\n  dispatch,\r\n  isSelectedRow,\r\n  selectedRows,\r\n}) => {\r\n  return (\r\n    <Checkbox\r\n      tw=\"mr-3\"\r\n      checked={isSelectedRow}\r\n      onChange={(event) => {\r\n        if (event.nativeEvent.shiftKey) {\r\n          dispatch(selectRowsRange(rowKeyValue, [...selectedRows].pop()));\r\n        } else if (event.currentTarget.checked) {\r\n          dispatch(selectRow(rowKeyValue));\r\n        } else {\r\n          dispatch(deselectRow(rowKeyValue));\r\n        }\r\n        console.log('SelectionCell rowKeyValue', rowKeyValue)\r\n        console.log('SelectionCell isSelectedRow', isSelectedRow)\r\n        console.log('SelectionCell selectedRows', selectedRows)\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectionHeader = ({ dispatch, areAllRowsSelected }) => {\r\n  return (\r\n    <Checkbox\r\n      tw=\"mr-3\"\r\n      checked={areAllRowsSelected}\r\n      onChange={(event) => {\r\n        if (event.currentTarget.checked) {\r\n          dispatch(selectAllFilteredRows()); // also available: selectAllVisibleRows(), selectAllRows()\r\n        } else {\r\n          dispatch(deselectAllFilteredRows()); // also available: deselectAllVisibleRows(), deselectAllRows()\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectEditor = ({ column, dispatch, options }) => {\r\n  return (\r\n    <Select tw=\"text-14 h-40 text-primary-blue border-r-0 border-l-0 border-t-0\"\r\n      defaultValue={column.filterRowValue}\r\n      onChange={(event) => {\r\n        dispatch(updateFilterRowValue(column.key, event.currentTarget.value));\r\n      }}\r\n    >\r\n      <option value=\"\"> All </option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst NumberEditor = ({ column, dispatch }) => {\r\n  return (\r\n    <Input\r\n      defaultValue={column.filterRowValue}\r\n      tw=\"p-2\"\r\n      onChange={(event) => {\r\n        const filterRowValue =\r\n          event.currentTarget.value !== \"\"\r\n            ? Number(event.currentTarget.value)\r\n            : null;\r\n        dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n      }}\r\n      type=\"number\"\r\n    />\r\n  );\r\n};\r\n\r\nconst RangeEditor = ({ column, dispatch }) => {\r\n  const [value, setValue] = useState(column.filterRowValue);\r\n  function handleChange(event) {\r\n    const filterRowValue =\r\n      event.currentTarget.value !== \"\"\r\n        ? Number(event.currentTarget.value)\r\n        : null;\r\n    dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n  }\r\n  // console.log('RangeEditor column', column)\r\n  return (\r\n    <>\r\n      <input tw=\"w-95 text-14 text-casual-gray\"\r\n        max={column.max}\r\n        defaultValue={column.filterRowValue}\r\n        onChange={(e) => {\r\n          setValue(e.currentTarget.value);\r\n        }}\r\n        onMouseUp={handleChange}\r\n        onTouchEnd={handleChange}\r\n        type=\"range\"\r\n      />\r\n      <span tw=\"ml-2 text-12 text-casual-gray\">{value}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchEditor = ({ column, dispatch }) => {\r\n  console.log('SearchEditor column', column)\r\n  return (\r\n    <Input\r\n      tw=\"w-20 h-40 text-14 text-casual-gray border-r-0 border-l-0 border-t-0\"\r\n      defaultValue={column.filterRowValue}\r\n      onKeyUp={(event) => {\r\n        // if(event.keyCode === 13)\r\n        dispatch(\r\n          updateFilterRowValue(\r\n            column.key,\r\n            event.currentTarget.value !== \"\"\r\n              ? event.currentTarget.value\r\n              : \"\"\r\n          ));\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst DateEditor = ({ column, dispatch }) => {\r\n  const fieldValue = column.filterRowValue;\r\n  // const value = fieldValue && kaDateUtils.getDateInputValue(fieldValue);\r\n  const value = fieldValue;\r\n  return (\r\n    <Input\r\n      tw=\"w-28 h-40 text-14 text-casual-gray p-0 border-r-0 border-l-0 border-t-0\"\r\n      type=\"date\"\r\n      value={value || \"\"}\r\n      onChange={(event) => {\r\n        const targetValue = event.currentTarget.value;\r\n        // console.log(\"DateEditor targetValue\", targetValue)\r\n        // const filterRowValue = targetValue ? new Date(targetValue) : null;\r\n        dispatch(updateFilterRowValue(column.key, targetValue ));\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SaveButton = ({ dispatch, rowKeyValue }) => {\r\n  return (\r\n    <div tw=\"flex justify-center space-x-4\">\r\n      <Button\r\n        color=\"outline-blue\"\r\n        onClick={() => {\r\n          dispatch({\r\n            type: \"INTERCEPT_EDIT\",\r\n            rowKeyValue,\r\n          });\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Button\r\n        color=\"outline-red\"\r\n        onClick={() => {\r\n          dispatch(closeRowEditors(rowKeyValue));\r\n        }}\r\n      >\r\n        Close\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ dispatch, rowKeyValue }) => {\r\n  return (\r\n    <Button\r\n      color=\"navy\"\r\n      onClick={() => dispatch(openRowEditors(rowKeyValue))}\r\n    >\r\n      Edit\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst BookingButton = ({ name, dispatch, rowKeyValue }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Button\r\n      tw=\"text-12 min-w-61.25\"\r\n      color=\"primary-blue\"\r\n      onClick={() => history.push({\r\n        pathname: '/agent/containers/selection',\r\n        // search: '?refNo=' + rowKeyValue,\r\n        state: { reference: rowKeyValue }\r\n      })\r\n      }\r\n    >\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst StyledDatatable = styled.div`\r\n  & .ka {\r\n    ${tw`mx-auto text-lg`}\r\n  }\r\n\r\n  & .ka-table-wrapper {\r\n    ${tw`overflow-x-auto md:overflow-x-hidden border-collapse p-1`}\r\n  }\r\n\r\n  & .ka-table {\r\n    ${tw`min-w-full border-collapse`}\r\n  }\r\n\r\n  & .ka-thead {\r\n    ${tw`text-left align-top text-15`}\r\n  }\r\n\r\n  & .ka-tbody {\r\n    ${tw`text-left align-top text-14 font-light`}\r\n  }\r\n\r\n  & .ka-paging-pages {\r\n    ${tw`flex flex-row justify-end`}\r\n  }\r\n\r\n  & .ka-paging {\r\n    ${tw`min-w-full grid grid-rows-1 grid-cols-2 text-14 text-primary-blue`}\r\n  }\r\n\r\n  & .ka-paging-sizes {\r\n    ${tw`grid grid-rows-1 grid-cols-pagination items-center justify-items-center`}\r\n  }\r\n\r\n  & .ka-paging-size {\r\n    ${tw`cursor-pointer`}\r\n  }\r\n\r\n  & .ka-paging-page-index-active, .ka-paging-size-active {\r\n    ${tw`bg-gray-200 rounded-full w-7 text-center`}\r\n  }\r\n\r\n  & .ka-filter-row-cell {\r\n    ${tw`text-sm md:text-base whitespace-nowrap py-5 border-b border-gray-200 border-t pr-4 align-middle`}\r\n  }\r\n\r\n  & .ka-thead-cell {\r\n    ${tw`pb-5`}\r\n  }\r\n\r\n  & .ka-thead-cell-content {\r\n    ${tw`text-gray-400 font-medium`}\r\n  }\r\n\r\n  & .ka-cell-editor {\r\n    ${tw`w-full`}\r\n  }\r\n\r\n  & .ka-cell {\r\n    ${tw`py-5 border-b border-gray-200 text-primary-blue align-middle`}\r\n  }\r\n\r\n  & .ka-cell-text {\r\n  }\r\n\r\n  & .ka-icon {\r\n    position: relative;\r\n  }\r\n\r\n  & input::-webkit-calendar-picker-indicator {\r\n    ${tw`m-0`}\r\n  }\r\n\r\n  & .ka-icon-sort-arrow-up:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowUpIcon});\r\n    background-size: cover;\r\n    margin-left: 10px;\r\n    font-size: 17px;\r\n  }\r\n  & .ka-icon-sort-arrow-down:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowDownIcon});\r\n    background-size: cover;\r\n    font-size: 17px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  & .ka-pointer {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .ka-loading {\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #ffffffcc;\r\n    margin: auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    z-index: 1;\r\n  }\r\n\r\n  & .ka-paging {\r\n    ${tw`min-w-full`}\r\n  }\r\n\r\n  & .ka-paging-page-index {\r\n    ${tw`mr-4 cursor-pointer text-primary-blue`}\r\n  }\r\n`;\r\n\r\nconst tableReducer = (prevProps, action) => {\r\n  if (action.type === \"LOAD_TOTAL_PAGES\")\r\n    return { ...prevProps, paging: { ...prevProps.paging, pagesCount: Math.round(action.payload / CONTAINERS_PAGE_SIZE) } };\r\n  return kaReducer(prevProps, action);\r\n};\r\n\r\nconst DataTable = ({ childComponents, ...tableProps }) => {\r\n  // const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  // const dispatch = action => {\r\n  //   changeTableProps(prevState => kaReducer(prevState, action));\r\n  // };\r\n\r\n  console.log(\"DataTable tableProps\", tableProps)\r\n  console.log('SelectionCell kaPropsUtils.getSelectedData(tableProps)', kaPropsUtils.getSelectedData(tableProps))\r\n  // console.log('SelectionCell kaPropsUtils.areAllFilteredRowsSelected(tableProps)', kaPropsUtils.areAllFilteredRowsSelected(tableProps))\r\n  return (\r\n    <StyledDatatable>\r\n      <Table\r\n        {...tableProps}\r\n        childComponents={{\r\n          pagingIndex: {\r\n            elementAttributes: ({ isActive }) => ({\r\n              style: isActive && { color: \"var(--primary-blue)\" },\r\n            }),\r\n          },\r\n          ...childComponents,\r\n        }}\r\n      />\r\n    </StyledDatatable>\r\n  );\r\n};\r\n\r\nexport {\r\n  DataTable,\r\n  EditButton,\r\n  SaveButton,\r\n  BookingButton,\r\n  DateEditor,\r\n  SearchEditor,\r\n  RangeEditor,\r\n  NumberEditor,\r\n  SelectEditor,\r\n  SelectionHeader,\r\n  SelectionCell,\r\n  CustomEditor,\r\n  CustomNumberEditor,\r\n  tableReducer\r\n}\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\ViewChosenContainers.jsx",["784","785","786","787","788","789","790"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { mutate } from \"swr\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport { Card, Button, Loader } from \"../../../common/styles\";\r\nimport { HeaderWrapper } from \"./common/style\";\r\nimport { tableReducer } from \"../../../common/components/Table/DataTable\";\r\nimport {\r\n  closeRowEditors,\r\n  hideLoading,\r\n  saveRowEditors,\r\n  showLoading,\r\n  updateData,\r\n} from \"ka-table/actionCreators\";\r\nimport { ActionType } from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport { orderEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport {\r\n  ViewChosenContainersTable,\r\n  tablePropsInit,\r\n} from \"./common/ViewChosenContainersTable\";\r\nimport Alert from \"../../../common/components/Alert.jsx\";\r\nimport { flattenData } from \"../../../common/utils/functions\";\r\nimport { getOrderDetails } from \"../../../redux\";\r\nimport axios from \"axios\";\r\nimport \"twin.macro\";\r\n\r\nconst ViewChosenContainers = (props) => {\r\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n  const [filters, setFilters] = useState({\r\n    page: 1,\r\n    containerStatus: \"awaiting confirmation\",\r\n  });\r\n  const [alert, setAlert] = useState(false);\r\n  const [confirmedContainers, setConfirmedContainers] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  console.log(\"ViewChosenContainers : tablePropsInit\", tablePropsInit);\r\n\r\n  const selectedData = kaPropsUtils.getSelectedData(tableProps);\r\n  //   const { filterQuery } = useQueryBuilder(filters);\r\n\r\n  // const { data, isError, isLoading } = useQuery(\r\n  //   `${orderEndpoints.cart}?orderId=` + props.orderId\r\n  // );\r\n\r\n  // const { data: containersCount, isCountError, isCountLoading } = useQuery(\r\n  //     `${orderEndpoints.cart}?containerStatus=awaiting confirmation`\r\n  // );\r\n\r\n  useEffect(() => {\r\n    props.getOrderDetails(props.orderId);\r\n  }, []);\r\n\r\n  console.log(\"view props.orderData\", props.orderData);\r\n  console.log(\"view chosen containers data\", data);\r\n\r\n  useEffect(() => {\r\n    let containers = [];\r\n    props.orderData.map((order) => {\r\n      axios.get(\"/containers?orderDetailsId=\" + order.orderDetailsId).then(\r\n        function (response) {\r\n          console.log(\"get containers success !\");\r\n          containers.push(response.data.containers);\r\n          console.log(\"view containers\", containers);\r\n          setData(containers);\r\n        },\r\n        (error) => {\r\n          console.log(\"get containers error !\", error);\r\n        }\r\n      );\r\n    });\r\n  }, [props.orderData]);\r\n\r\n  function flatDeep(arr, d = 1) {\r\n    return d > 0\r\n      ? arr.reduce(\r\n          (acc, val) =>\r\n            acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val),\r\n          []\r\n        )\r\n      : arr.slice();\r\n  }\r\n\r\n  const getMembers = (members) => {\r\n    let children = [];\r\n  \r\n    return members.map(mem => {\r\n      const m = {...mem}; // use spread operator\r\n      if (m.children && m.children.length) {\r\n        children = [...children, ...m.children];\r\n      }\r\n      delete m.children; // this will not affect the original array object\r\n      return m;\r\n    }).concat(children.length ? getMembers(children) : children);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(hideLoading());\r\n      dispatch({ type: \"LOAD_TOTAL_PAGES\", payload: data.length });\r\n      console.log(\"what is the data\", data);\r\n      let dataa = [...data];\r\n      // dataa.flat();\r\n      getMembers(dataa)\r\n      console.log(\"getMembers\", getMembers(dataa));\r\n    //   dataa.find((item) => typeof item === \"object\");\r\n\r\n      let newData = [];\r\n      dataa.filter((element) => {\r\n        return {...element}\r\n      })\r\n            console.log(\"dataaaaa flatt find\", dataa);\r\n      let bigCities = data.map(function (e) {\r\n        return e.map(function (el) {\r\n        \r\n            return el\r\n        })\r\n    });\r\n\r\n    console.log('bigCities', bigCities)\r\n    //   dataa.map((item, i) => {\r\n\r\n    //   });\r\n      dispatch(updateData());\r\n    } else {\r\n      dispatch(hideLoading());\r\n      dispatch(updateData([]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.orderData, data]);\r\n\r\n  const handleStatus = (confirm) => {\r\n    const containersToUpdate = selectedData.map((container) => {\r\n      return {\r\n        containerNo: container.containerNo,\r\n        containerStatus: confirm ? \"available\" : \"unavailable\",\r\n      };\r\n    });\r\n\r\n    const selectedContainersNumbers = flattenData(\r\n      containersToUpdate,\r\n      \"containerNo\"\r\n    );\r\n\r\n    dispatch(showLoading());\r\n\r\n    axios.put(orderEndpoints.updateContainerStatus, containersToUpdate).then(\r\n      () => {\r\n        dispatch(hideLoading());\r\n        if (confirm) {\r\n          setConfirmedContainers(containersToUpdate.length);\r\n          setAlert(true);\r\n        }\r\n        mutate(`${orderEndpoints.count}?containerStatus=awaiting confirmation`);\r\n        dispatch(\r\n          updateData(\r\n            kaPropsUtils.getData(tableProps).filter((elem) => {\r\n              return !selectedContainersNumbers.includes(elem.containerNo);\r\n            })\r\n          )\r\n        );\r\n      },\r\n      (error) => {\r\n        dispatch(hideLoading());\r\n        //TODO: Replace with Alert\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleEdit = (containerId, updatedObject) => {\r\n    dispatch(showLoading());\r\n    axios\r\n      .put(`${orderEndpoints.updateContainer}/${containerId}`, updatedObject)\r\n      .then(\r\n        () => {\r\n          dispatch(hideLoading());\r\n          dispatch(\r\n            saveRowEditors(containerId, {\r\n              validate: true,\r\n            })\r\n          );\r\n        },\r\n        (error) => {\r\n          dispatch(hideLoading());\r\n          dispatch(closeRowEditors(containerId));\r\n          //TODO: Replace with Alert\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const dispatch = (action) => {\r\n    switch (action.type) {\r\n      case ActionType.UpdateFilterRowValue:\r\n        let updatedFilters = {};\r\n        switch (action.columnKey) {\r\n          case \"containerPrice\":\r\n            updatedFilters[\"maxPrice\"] = action.filterRowValue;\r\n            break;\r\n          case \"containerTypeDisplay\":\r\n            updatedFilters[\"containerType\"] = action.filterRowValue;\r\n            break;\r\n          default:\r\n            updatedFilters[action.columnKey] = action.filterRowValue;\r\n        }\r\n        setFilters({ ...filters, ...updatedFilters });\r\n        break;\r\n      case ActionType.UpdatePageIndex:\r\n        setFilters({ ...filters, page: action.pageIndex + 1 });\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n        break;\r\n      case \"INTERCEPT_EDIT\":\r\n        const containerId = action.rowKeyValue;\r\n        changeTableProps((prevState) => {\r\n          let updateObject = {\r\n            containerCondition: \"\",\r\n            containerPrice: \"\",\r\n            containerStatus: \"\",\r\n          };\r\n          prevState.editableCells\r\n            .filter(\r\n              (cell) =>\r\n                cell.rowKeyValue === containerId &&\r\n                cell.columnKey !== \"editColumn\"\r\n            )\r\n            .forEach(\r\n              (key) =>\r\n                (updateObject[key.columnKey] = key.editorValue\r\n                  ? key.editorValue\r\n                  : \"\")\r\n            );\r\n          handleEdit(containerId, updateObject);\r\n          return tableReducer(prevState, action);\r\n        });\r\n        break;\r\n      default:\r\n        changeTableProps((prevState) => tableReducer(prevState, action));\r\n    }\r\n  };\r\n\r\n  let AlertProps = {\r\n    type: \"success\",\r\n    message: confirmedContainers + \" containers confirmed\",\r\n    autoClose: false,\r\n    // dismissTime : 10000\r\n    width: 558,\r\n    height: 27,\r\n    font: 12,\r\n    iconWidth: 20,\r\n    iconHeight: 20,\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    closeIconFontSize: \"11px\",\r\n  };\r\n\r\n  let markUnavailableProps = {\r\n    message: \"Are you sure you want to mark these containers unavailable ?\",\r\n    button1: \"Mark Unavailable\",\r\n    button2: \"Cancel\",\r\n    buttonColor: \"primary-blue\",\r\n    cancelColor: \"outline-blue\",\r\n  };\r\n  console.log(\"ViewChosenContainers : tableProps\", tableProps);\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <Alert {...(alert ? AlertProps : {})} />\r\n        <Button\r\n          tw=\"w-xxl ml-auto\"\r\n          color=\"primary-blue\"\r\n          onClick={() => props.setIsSaved(false)}\r\n        >\r\n          Edit List\r\n        </Button>\r\n        {selectedData.length ? (\r\n          <div tw=\"space-x-3 grid grid-cols-2ColAuto h-minContent\">\r\n            <Button color=\"primary-blue\" onClick={() => handleStatus(true)}>\r\n              Confirm\r\n            </Button>\r\n            <Modal\r\n              width=\"450px\"\r\n              height=\"auto\"\r\n              titleFontSize=\"24px\"\r\n              component={<Button color=\"primary-blue\">Mark Unavailable</Button>}\r\n              title=\"Mark Unavailable\"\r\n              children={\r\n                <Popup\r\n                  name=\"markUnavailable\"\r\n                  {...markUnavailableProps}\r\n                  accept={handleStatus}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </HeaderWrapper>\r\n      <Card tw=\"p-10\">\r\n        <ViewChosenContainersTable\r\n          tableProps={tableProps}\r\n          dispatch={dispatch}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    count: state.count,\r\n    loggedIn: state.loggedIn,\r\n    loggedInUser: state.loggedInUser,\r\n    loggedOut: state.loggedOut,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    cartDataError: state.cartDataError,\r\n    productData: state.productData,\r\n    updateProduct: state.updateProduct,\r\n    orderDataError: state.orderDataError,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getOrderDetails,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewChosenContainers);\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\common\\DataTable.jsx",["791","792","793","794","795","796","797","798","799","800","801"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, kaReducer } from \"ka-table\";\r\nimport {\r\n  deselectAllFilteredRows,\r\n  deselectRow,\r\n  selectAllFilteredRows,\r\n  selectRow,\r\n  selectRowsRange,\r\n  updateFilterRowValue,\r\n  closeRowEditors,\r\n  openRowEditors,\r\n  updateEditorValue,\r\n} from \"ka-table/actionCreators\";\r\nimport { kaDateUtils } from \"ka-table/utils\";\r\nimport { Select, Checkbox, Input, Button } from \"../../../../common/styles\";\r\nimport Modal from \"../../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../../common/components/Popup\";\r\nimport { Edit, StyledEdit, Delete } from \"./style\";\r\nimport { BuyerProfileIcon } from \"../../../../assets/icons\";\r\nimport ArrowUpIcon from \"../../../../assets/icons/Arrow/Up.svg\";\r\nimport ArrowDownIcon from \"../../../../assets/icons/Arrow/Down.svg\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst CustomNumberEditor = ({\r\n  value,\r\n  dispatch,\r\n  column,\r\n  rowKeyValue,\r\n  rowData,\r\n}) => {\r\n  const [editorValue, setValue] = useState(value);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(\r\n      updateEditorValue(rowKeyValue, column.key, event.currentTarget.value)\r\n    );\r\n    setValue(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        tw=\"w-20 mr-2\"\r\n        type=\"number\"\r\n        value={editorValue}\r\n        onChange={handleChange}\r\n      />\r\n      {currencies[rowData.containerCurrency]}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CustomEditor = ({ value, options, dispatch, column, rowKeyValue }) => {\r\n  const [editorValue, setValue] = useState(value);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(\r\n      updateEditorValue(rowKeyValue, column.key, event.currentTarget.value)\r\n    );\r\n    setValue(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Select value={editorValue} onChange={handleChange}>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst SelectionCell = ({\r\n  rowKeyValue,\r\n  dispatch,\r\n  isSelectedRow,\r\n  selectedRows,\r\n}) => {\r\n  return (\r\n    // <Checkbox\r\n    //   tw=\"mr-3\"\r\n    //   checked={isSelectedRow}\r\n    //   onChange={(event) => {\r\n    //     if (event.nativeEvent.shiftKey) {\r\n    //       dispatch(selectRowsRange(rowKeyValue, [...selectedRows].pop()));\r\n    //     } else if (event.currentTarget.checked) {\r\n    //       dispatch(selectRow(rowKeyValue));\r\n    //     } else {\r\n    //       dispatch(deselectRow(rowKeyValue));\r\n    //     }\r\n    //   }}\r\n    // />\r\n    <BuyerProfileIcon tw=\"w-50 h-50 inline\" alt=\"Buyer\" />\r\n  );\r\n};\r\n\r\nconst SelectionHeader = ({ dispatch, areAllRowsSelected }) => {\r\n  return (\r\n    // <Checkbox\r\n    //   tw=\"mr-3\"\r\n    //   checked={areAllRowsSelected}\r\n    //   onChange={(event) => {\r\n    //     if (event.currentTarget.checked) {\r\n    //       dispatch(selectAllFilteredRows());\r\n    //     } else {\r\n    //       dispatch(deselectAllFilteredRows());\r\n    //     }\r\n    //   }}\r\n    // />\r\n    <BuyerProfileIcon tw=\"w-50 h-50 inline mr-18\" alt=\"Buyer\" />\r\n  );\r\n};\r\n\r\nconst SelectEditor = ({ column, dispatch, options }) => {\r\n  return (\r\n    <Select\r\n      tw=\"text-14 h-40 text-primary-blue\"\r\n      defaultValue={column.filterRowValue}\r\n      onChange={(event) => {\r\n        dispatch(updateFilterRowValue(column.key, event.currentTarget.value));\r\n      }}\r\n    >\r\n      <option value=\"\"> All </option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst NumberEditor = ({ column, dispatch }) => {\r\n  return (\r\n    <Input\r\n      defaultValue={column.filterRowValue}\r\n      tw=\"p-2\"\r\n      onChange={(event) => {\r\n        const filterRowValue =\r\n          event.currentTarget.value !== \"\"\r\n            ? Number(event.currentTarget.value)\r\n            : null;\r\n        dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n      }}\r\n      type=\"number\"\r\n    />\r\n  );\r\n};\r\n\r\nconst RangeEditor = ({ column, dispatch }) => {\r\n  const [value, setValue] = useState(column.filterRowValue);\r\n  function handleChange(event) {\r\n    const filterRowValue =\r\n      event.currentTarget.value !== \"\"\r\n        ? Number(event.currentTarget.value)\r\n        : null;\r\n    dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n  }\r\n  // console.log('RangeEditor column', column)\r\n  return (\r\n    <>\r\n      <input\r\n        tw=\"w-95 text-14 text-casual-gray\"\r\n        max={column.max}\r\n        defaultValue={column.filterRowValue}\r\n        onChange={(e) => {\r\n          setValue(e.currentTarget.value);\r\n        }}\r\n        onMouseUp={handleChange}\r\n        onTouchEnd={handleChange}\r\n        type=\"range\"\r\n      />\r\n      <span tw=\"ml-2 text-12 text-casual-gray\">{value}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SearchEditor = ({ column, dispatch }) => {\r\n  return (\r\n    <Input\r\n      tw=\"w-20 h-40 text-14 text-casual-gray\"\r\n      defaultValue={column.filterRowValue}\r\n      onKeyUp={(event) => {\r\n        // if(event.keyCode === 13)\r\n        dispatch(\r\n          updateFilterRowValue(\r\n            column.key,\r\n            event.currentTarget.value !== \"\" ? event.currentTarget.value : \"\"\r\n          )\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst DateEditor = ({ column, dispatch }) => {\r\n  const fieldValue = column.filterRowValue;\r\n  const value = fieldValue && kaDateUtils.getDateInputValue(fieldValue);\r\n  return (\r\n    <Input\r\n      tw=\"w-151 h-40 text-14 text-casual-gray\"\r\n      type=\"date\"\r\n      value={value || \"\"}\r\n      onChange={(event) => {\r\n        const targetValue = event.currentTarget.value;\r\n        const filterRowValue = targetValue ? new Date(targetValue) : null;\r\n        dispatch(updateFilterRowValue(column.key, filterRowValue));\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SaveButton = ({ dispatch, rowKeyValue }) => {\r\n  return (\r\n    <div tw=\"flex justify-center space-x-4\">\r\n      <Button\r\n        color=\"outline-blue\"\r\n        onClick={() => {\r\n          dispatch({\r\n            type: \"INTERCEPT_EDIT\",\r\n            rowKeyValue,\r\n          });\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Button\r\n        color=\"outline-red\"\r\n        onClick={() => {\r\n          dispatch(closeRowEditors(rowKeyValue));\r\n        }}\r\n      >\r\n        Close\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = (props) => {\r\n  const history = useHistory();\r\n  // console.log(\"EditButton\", props);\r\n  return (\r\n    <div tw=\"grid grid-cols-1 justify-items-center items-center\">\r\n      <StyledEdit\r\n        onClick={() =>\r\n          history.push({\r\n            pathname: \"/admin/manage-agents/assign-depots\",\r\n            // search: '?agentId=' + rowKeyValue,\r\n            state: {\r\n              agentUid : props.rowData.ccgId,\r\n              agentName: props.rowData.firstName + ' ' + props.rowData.lastName,\r\n              agentEmail: props.rowData.email,\r\n              agentPhone: props.rowData.phoneNumber,\r\n            },\r\n          })\r\n        }\r\n        alt=\"Edit Agent\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookingButton = ({ name, dispatch, rowKeyValue }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Button\r\n      tw=\"text-12 min-w-61.25\"\r\n      color=\"primary-blue\"\r\n      onClick={() => history.push(\"/agent/containers/selection\")}\r\n    >\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst StyledDatatable = styled.div`\r\n  & .ka {\r\n    ${tw`mx-auto text-lg`}\r\n  }\r\n\r\n  & .ka-table-wrapper {\r\n    ${tw`overflow-x-auto md:overflow-x-hidden border-collapse p-1`}\r\n  }\r\n\r\n  & .ka-table {\r\n    ${tw`min-w-full table-fixed w-full border-collapse`}\r\n  }\r\n\r\n  & .ka-thead {\r\n    ${tw`text-left align-top text-17`}\r\n  }\r\n\r\n  & .ka-thead-cell.ka-thead-background:first-child {\r\n    ${tw`w-60 h-50`}\r\n  }\r\n\r\n  & .ka-thead-cell.ka-thead-background:last-child {\r\n    ${tw`w-60`}\r\n  }\r\n\r\n  & .ka-tbody {\r\n    ${tw`text-left text-14`}\r\n  }\r\n\r\n  & .ka-paging-pages {\r\n    ${tw`flex flex-row justify-end`}\r\n  }\r\n\r\n  & .ka-paging {\r\n    ${tw`min-w-full grid grid-rows-1 grid-cols-2 text-14 text-primary-blue`}\r\n  }\r\n\r\n  & .ka-paging-sizes {\r\n    ${tw`grid grid-rows-1 grid-cols-pagination items-center justify-items-center`}\r\n  }\r\n\r\n  & .ka-paging-size {\r\n    ${tw`cursor-pointer`}\r\n  }\r\n\r\n  & .ka-paging-page-index-active,\r\n  .ka-paging-size-active {\r\n    ${tw`bg-gray-200 rounded-full w-7 text-center`}\r\n  }\r\n\r\n  & .ka-filter-row-cell {\r\n    ${tw`text-sm md:text-base whitespace-nowrap py-5 border-b border-gray-200 border-t pr-4 align-middle`}\r\n  }\r\n\r\n  & .ka-thead-cell {\r\n    ${tw`pb-5`}\r\n  }\r\n\r\n  & .ka-thead-cell-content {\r\n    ${tw`text-gray-400 text-15`}\r\n  }\r\n\r\n  & .ka-cell-editor {\r\n    ${tw`w-full`}\r\n  }\r\n\r\n  & .ka-cell {\r\n    ${tw`py-5 border-b border-gray-200 text-primary-blue align-middle truncate`}\r\n  }\r\n\r\n  & .ka-icon {\r\n    position: relative;\r\n  }\r\n\r\n  & .ka-icon-sort-arrow-up:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowUpIcon});\r\n    background-size: cover;\r\n    margin-left: 10px;\r\n    font-size: 17px;\r\n  }\r\n  & .ka-icon-sort-arrow-down:after {\r\n    content: \"....\";\r\n    color: transparent;\r\n    background: url(${ArrowDownIcon});\r\n    background-size: cover;\r\n    font-size: 17px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  & .ka-pointer {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .ka-loading {\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #ffffffcc;\r\n    margin: auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    z-index: 1;\r\n  }\r\n\r\n  & .ka-paging-page-index {\r\n    ${tw`mr-4 cursor-pointer text-primary-blue`}\r\n  }\r\n`;\r\n\r\nconst tableReducer = (prevProps, action) => {\r\n  if (action.type === \"LOAD_TOTAL_PAGES\")\r\n    return {\r\n      ...prevProps,\r\n      paging: {\r\n        ...prevProps.paging,\r\n        pagesCount: Math.round(action.payload / CONTAINERS_PAGE_SIZE),\r\n      },\r\n    };\r\n  return kaReducer(prevProps, action);\r\n};\r\n\r\nconst DataTable = ({ childComponents, ...tableProps }) => {\r\n  // console.log(\"DataTable tableProps\", tableProps);\r\n  return (\r\n    <StyledDatatable>\r\n      <Table\r\n        {...tableProps}\r\n        childComponents={{\r\n          pagingIndex: {\r\n            elementAttributes: ({ isActive }) => ({\r\n              style: isActive && { color: \"var(--primary-blue)\" },\r\n            }),\r\n          },\r\n          ...childComponents,\r\n        }}\r\n      />\r\n      {/* <Table\r\n      {...tableProps}\r\n      data={dataArray}\r\n      dispatch={tableProps.dispatch}\r\n    /> */}\r\n    </StyledDatatable>\r\n  );\r\n};\r\n\r\nexport {\r\n  DataTable,\r\n  EditButton,\r\n  SaveButton,\r\n  BookingButton,\r\n  DateEditor,\r\n  SearchEditor,\r\n  RangeEditor,\r\n  NumberEditor,\r\n  SelectEditor,\r\n  SelectionHeader,\r\n  SelectionCell,\r\n  CustomEditor,\r\n  CustomNumberEditor,\r\n  tableReducer,\r\n};\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Curve.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarIcons.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Sidebar\\SidebarSubmenu.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\index.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Agent\\Containers\\common\\ViewChosenContainersTable.jsx",["802","803"],"import React from \"react\";\r\nimport {\r\n  DataTable,\r\n  SelectionCell,\r\n  SelectionHeader,\r\n  SelectEditor,\r\n  SearchEditor,\r\n  SaveButton,\r\n  EditButton,\r\n  CustomEditor,\r\n  CustomNumberEditor,\r\n  RangeEditor,\r\n} from \"../../../../common/components/Table/DataTable\";\r\nimport {\r\n  DataType,\r\n  FilteringMode,\r\n  SortDirection, \r\n  SortingMode,\r\n} from \"ka-table/enums\";\r\nimport { kaPropsUtils } from \"ka-table/utils\";\r\nimport currencies from \"../../../../common/constants/currencies\";\r\nimport containersData from \"../../../../common/constants/containers\";\r\nimport { flattenData } from \"../../../../common/utils/functions\";\r\nimport { CONTAINERS_PAGE_SIZE } from \"../../../../common/constants/settings\";\r\n\r\nconst CustomCell = ({\r\n  rowData,\r\n  value\r\n}) => {\r\n\r\n  return (\r\n    <div >\r\n      {value}  {currencies[rowData.containerCurrency]}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst tablePropsInit = {\r\n  columns: [\r\n    {\r\n      key: \"selection-cell\",\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerNo\",\r\n      title: \"Container ID\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerTypeDisplay\",\r\n      title: \"Type\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n      sortDirection: SortDirection.Ascend \r\n    },\r\n    {\r\n      key: \"containerCondition\",\r\n      title: \"Condition\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerSize\",\r\n      title: \"Size\",\r\n      dataType: DataType.String,\r\n      isEditable: false,\r\n    },\r\n    {\r\n      key: \"containerAge\",\r\n      title: \"Age\",\r\n      dataType: DataType.Number,\r\n      isEditable: false,\r\n      filterRowOperator: \"<=\",\r\n      filterRowValue: 100,\r\n    },\r\n    {\r\n      key: \"containerPrice\",\r\n      title: \"Price\",\r\n      dataType: DataType.Number,\r\n      isEditable: false,\r\n      filterRowOperator: \"<=\",\r\n      filterRowValue: 30000,\r\n    }\r\n  ],\r\n  loading: {\r\n    enabled: false,\r\n  },\r\n  paging: {\r\n    enabled: true,\r\n    pageIndex: 0,\r\n    pageSize: CONTAINERS_PAGE_SIZE,\r\n  },\r\n  data: [],\r\n  rowKeyField: \"containerNo\",\r\n  sortingMode: SortingMode.Single,\r\n  filteringMode: FilteringMode.FilterRow,\r\n};\r\n\r\nconst ViewChosenContainersTable = ({tableProps, dispatch}) => {\r\n  return (\r\n    <DataTable\r\n      {...tableProps}\r\n      childComponents={{\r\n        cellText: {\r\n          content: (props) => {\r\n            if (props.column.key === \"selection-cell\") {\r\n              return <SelectionCell {...props} />;\r\n            }\r\n            if (props.column.key === \"containerPrice\") {\r\n              return <CustomCell {...props} />;\r\n            }\r\n          },\r\n        },\r\n        cellEditor: {\r\n          content: (props) => {\r\n            switch (props.column.key) {\r\n              case \"containerCondition\":\r\n                return (\r\n                  <CustomEditor\r\n                    options={flattenData(containersData[\"condition\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerPrice\":\r\n                return <CustomNumberEditor {...props} />;\r\n              default:\r\n                return;\r\n            }\r\n          },\r\n        },\r\n        filterRowCell: {\r\n          content: (props) => {\r\n            switch (props.column.key) {\r\n              case \"selection-cell\":\r\n              case \"editColumn\":\r\n                return <></>;\r\n              case \"containerAge\":\r\n              case \"containerPrice\":\r\n                return <RangeEditor {...props} />;\r\n              case \"containerSize\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"size\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerTypeDisplay\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"type\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              case \"containerCondition\":\r\n                return (\r\n                  <SelectEditor\r\n                    options={flattenData(containersData[\"condition\"])}\r\n                    {...props}\r\n                  />\r\n                );\r\n              default:\r\n                return <SearchEditor {...props} />;\r\n            }\r\n          },\r\n        },\r\n        headCell: {\r\n          content: (props) => {\r\n            if (props.column.key === \"selection-cell\") {\r\n              return (\r\n                <SelectionHeader\r\n                  {...props}\r\n                  areAllRowsSelected={kaPropsUtils.areAllFilteredRowsSelected(\r\n                    tableProps\r\n                  )}\r\n                />\r\n              );\r\n            }\r\n          },\r\n        },\r\n      }}\r\n      dispatch={dispatch}\r\n    />\r\n  );\r\n};\r\n\r\nexport { ViewChosenContainersTable, tablePropsInit } ;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Pie.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Charts\\Bar.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\hooks\\useMediaQuery.js",[],["804","805"],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\utils\\functions.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\utils\\api.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\AssignDepots.jsx",["806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826"],"import React, { useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport MultiSelect from \"../../../common/components/MultiSelect\";\r\nimport Grid from \"./AssignDepotsGrid\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport { Card, Button, Input } from \"../../../common/styles\";\r\nimport { locationsEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport useQuery from \"../../../common/hooks/api/useQuery\";\r\nimport useQueryBuilder from \"../../../common/hooks/useQueryBuilder\";\r\nimport axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst Header = tw.div`\r\ntext-primary-blue text-17 font-bold`;\r\n\r\nconst Wrapper = tw.section`\r\nml-102 mt-32`;\r\n\r\nconst SelectionCard = tw(Card)`\r\nh-full min-h-containersSelection`;\r\n\r\nconst Actions = tw.div`\r\ngrid grid-cols-2ColAuto \r\nitems-center justify-end \r\ntext-right pt-sm`;\r\n\r\nconst Cancel = tw.span`\r\nfont-light underline mr-30 cursor-pointer\r\ntext-primary-blue mdl:text-14 xs:text-13 `;\r\n\r\nconst SaveBtn = tw(Button)`\r\nh-41 w-151 text-white mdl:text-14 xs:text-13 \r\nhover:( bg-secondary-blue border-secondary-blue )\r\n`;\r\n\r\nconst DiscardChangesModal = tw(Modal)`\r\ninline`;\r\n\r\nconst AssignDepots = (props) => {\r\n  const history = useHistory();\r\n  const animatedComponents = makeAnimated();\r\n  const [gridData, setGridData] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [countriesNames, setCountriesNames] = useState([]);\r\n\r\n  const [selected, setSelected] = useState([]);\r\n  const [selected1, setSelected1] = useState([[], [], [], [], []]);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [savedAssignedDepots, setSavedAssignedDepots] = useState([]);\r\n  const [filters, setFilters] = useState([]);\r\n  const [arrayOfDepotsPerCountryUpdated, setArrayOfDepotsPerCountryUpdated] =\r\n    useState([]);\r\n  // const { filterQuery } = useQueryBuilder(filters);\r\n  const {\r\n    data: countries,\r\n    isError: countryError,\r\n    isLoading: countryLoading,\r\n  } = useQuery(`${locationsEndpoints.countries}`);\r\n\r\n  const {\r\n    data: savedDepots,\r\n    isError: savedDepotsError,\r\n    isLoading: savedDepotsLoading,\r\n  } = useQuery(\r\n    `${locationsEndpoints.savedDepots}?agentUid=${props.location.state.agentUid}`\r\n  );\r\n\r\n  useEffect(() => {\r\n      console.log(\"useEffect savedDepots, selected\",savedDepots,selected);\r\n    console.log(\"useEffect countries\", countries);\r\n    console.log(\"useEffect selected\", selected);\r\n    console.log(\"useEffect selected1\", selected1);\r\n    console.log(\"useEffect count\", count);\r\n    console.log(\"useEffect savedAssignedDepots\", savedAssignedDepots);\r\n    console.log(\"useEffect options\", options);\r\n    console.log(\"useEffect gridData\", gridData);\r\n    console.log(\"useEffect countriesNames\", countriesNames);\r\n    console.log(\r\n      \"useEffect arrayOfDepotsPerCountryUpdated\",\r\n      arrayOfDepotsPerCountryUpdated\r\n    );\r\n  }, [\r\n    savedDepots,\r\n    savedAssignedDepots,\r\n    selected,\r\n    countries,\r\n    count,\r\n    options,\r\n    gridData,\r\n    countriesNames,\r\n    arrayOfDepotsPerCountryUpdated,\r\n  ]);\r\n  console.log(\"assignDepots props\", props);\r\n  // console.log(\"gridDataError\", gridDataError);\r\n\r\n  useEffect(() => {\r\n    let countriesList =\r\n      countries &&\r\n      countries.map(\r\n        ({ isoCountryCode: value, isoCountryName: label, ...rest }) => ({\r\n          value,\r\n          label,\r\n          ...rest,\r\n        })\r\n      );\r\n\r\n    let countriesNames =\r\n      countries && countries.map((country) => country.isoCountryName);\r\n    // console.log(\"countriesNames\", countriesNames);\r\n\r\n    setOptions(countriesList);\r\n    setCountriesNames(countriesNames);\r\n  }, [countries]);\r\n\r\n  useEffect(() => {\r\n    let savedDepotsList = [],\r\n      savedDepotsCountriesList = [];\r\n    if (savedDepots) {\r\n      savedDepotsList = savedDepots.containers.map(\r\n        ({ depot: label, depot: value, ...rest }) => [\r\n          {\r\n            label,\r\n            value,\r\n            ...rest,\r\n          },\r\n        ]\r\n      );\r\n      console.log(\"savedDepotsList\", savedDepotsList);\r\n      setSelected(savedDepotsList);\r\n    }\r\n  }, [savedDepots]);\r\n\r\n  useEffect(() => {\r\n    let savedAssignedDepotsList = [];\r\n    if (typeof countriesNames !== \"undefined\") {\r\n      countriesNames.map((countryName, index) => {\r\n        axios\r\n          .get(\r\n            `${locationsEndpoints.depots}?isoCountryCode=` +\r\n              getIsoCountryCode(`${countryName}`)\r\n          )\r\n          .then(function (response) {\r\n            const depotsList = response.data.map(\r\n              ({\r\n                internalID: label,\r\n                internalID: value,\r\n                internalID: depotCode,\r\n                ...rest\r\n              }) => ({\r\n                label,\r\n                value,\r\n                depotCode,\r\n                ...rest,\r\n              })\r\n            );\r\n\r\n            savedAssignedDepotsList.push({ [countryName]: depotsList });\r\n            setSavedAssignedDepots([savedAssignedDepotsList]);\r\n          });\r\n      });\r\n    }\r\n  }, [countriesNames]);\r\n\r\n  // useEffect(() => {\r\n  //   if (typeof countriesNames !== \"undefined\") {\r\n  //     let arrayOfDepotsPerCountry = [...countriesNames];\r\n  //     let arrayOfDepotsPerCountryUpdated = [];\r\n  //     let dataa = [];\r\n\r\n  //     countriesNames.map((countryName, index) => {\r\n  //       // arrayOfDepotsPerCountryUpdated = arrayOfDepotsPerCountry.map(function(item) { return item === countryName ? [(countryName: {})] : item; });\r\n  //       console.log('arrayOfDepotsPerCountryUpdated', arrayOfDepotsPerCountryUpdated)\r\n  //       axios\r\n  //       .get(\r\n  //         `${locationsEndpoints.savedDepots}?agentUid=${props.location.state.agentUid}&country=${countryName}`\r\n  //       )\r\n  //         .then(function (response) {\r\n  //           arrayOfDepotsPerCountryUpdated.push({[countryName]: [response.data.containers]})\r\n  //           console.log('useEffect response.data.containers', response.data.containers)\r\n  //           console.log('arrayOfDepotsPerCountryUpdated inside', arrayOfDepotsPerCountryUpdated)\r\n  //           setArrayOfDepotsPerCountryUpdated(arrayOfDepotsPerCountryUpdated)\r\n  //           dataa.push({\r\n  //             col1: [countryName],\r\n  //             col2: response.data.containers.map(value => value.depot).length + ' Selected',\r\n  //           });\r\n  //           setGridData(dataa);\r\n  //           console.log(\"depots per country\", response.data);\r\n  //         })\r\n  //         .catch(function (error) {\r\n  //           console.log(\"depots per country response error\", error);\r\n  //           return error.message;\r\n  //         });\r\n  //         console.log('arrayOfDepotsPerCountryUpdated after',  arrayOfDepotsPerCountryUpdated)\r\n  //     });\r\n  //   }\r\n  //   console.log('in countriesNames')\r\n  // }, [countriesNames]);\r\n\r\n  const getIsoCountryCode = (code) => {\r\n    let isoCountryCode;\r\n    switch (code) {\r\n      case \"Spain\":\r\n        isoCountryCode = \"ES\";\r\n        break;\r\n      case \"United Kingdom\":\r\n        isoCountryCode = \"GB\";\r\n        // code block\r\n        break;\r\n      case \"Italy\":\r\n        isoCountryCode = \"IT\";\r\n        // code block\r\n        break;\r\n      case \"Lebanon\":\r\n        isoCountryCode = \"LB\";\r\n        // code block\r\n        break;\r\n      case \"Portugal\":\r\n        isoCountryCode = \"PT\";\r\n        // code block\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n    return isoCountryCode;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"savedDepottts\", savedDepots);\r\n    setSavedAssignedDepots([]);\r\n\r\n    var dataa = [],\r\n      savedAssignedDepotsList = [],\r\n      savedDepotsCountriesList = [];\r\n\r\n    savedDepots &&\r\n      savedDepots.containers.map((savedDepot, index) => {\r\n        setCount(index + 1);\r\n        axios\r\n          .get(\r\n            `${locationsEndpoints.depots}?isoCountryCode=` +\r\n              getIsoCountryCode(`${savedDepot.country}`)\r\n          )\r\n          .then(function (response) {\r\n            console.log(\"useEffect response\", response);\r\n            // const depotsList = [ ... response.data.containers]\r\n            // console.log('response.data.containers', response.data.containers)\r\n            const depotsList = response.data.map(\r\n              ({\r\n                internalID: label,\r\n                internalID: value,\r\n                internalID: depotCode,\r\n                ...rest\r\n              }) => ({\r\n                label,\r\n                value,\r\n                depotCode,\r\n                ...rest,\r\n              })\r\n            );\r\n\r\n            savedAssignedDepotsList.push({ [savedDepot.country]: depotsList });\r\n            console.log(\"savedAssignedDepotsList\", savedAssignedDepotsList);\r\n            console.log(\"depotsList\", depotsList);\r\n            // setSelected(depotsList)\r\n          });\r\n        console.log(\"savedAssignedDepotsList1\", savedAssignedDepotsList);\r\n        console.log(\"savedDepot in\", savedDepot);\r\n        console.log(\"selected1\", selected1);\r\n        // dataa.push({\r\n        //   col1: savedDepot.country,\r\n        //   col2: savedDepot.depot,\r\n        // });\r\n        savedDepotsCountriesList.push(savedDepot.country);\r\n        // return dataa;\r\n      });\r\n    console.log(\"savedDepotsCountriesList after\", savedDepotsCountriesList);\r\n    console.log(\"savedDepots out\", savedDepots);\r\n    // if (arrayOfDepotsPerCountryUpdated) {\r\n    //   countriesNamesList.map((countryName) =>\r\n    //   dataa.push({\r\n    //     col1: countryName,\r\n    //     col2: \"\",\r\n    //   })\r\n    // }\r\n    // if (countriesNames) {\r\n\r\n    if (countriesNames && savedDepots) {\r\n      let countriesNamesList = [...countriesNames],\r\n        countriesNamesListExists = [...countriesNames];\r\n      // console.log(\"countriesNames end\", countriesNamesList);\r\n      // let result = countriesNamesList.filter(o1 => savedDepots.containers.some(o2 => o1 === o2.country));\r\n      let result = savedDepots.containers.filter((o1) =>\r\n        countriesNamesList.some((o2) => o1.country === o2)\r\n      );\r\n      console.log('countriesNamesList result', result)\r\n\r\n      countriesNamesListExists = countriesNamesListExists.filter((val) =>\r\n        savedDepotsCountriesList.includes(val)\r\n      );\r\n\r\n      console.log('countriesNamesList countriesNamesListExists', countriesNamesListExists)\r\n      var result2 = [];\r\n      countriesNamesListExists.map((countryName) => {\r\n        console.log(\"countriesNamesListExists\", countriesNamesListExists);\r\n        // result2 = result.find((obj) => {\r\n        //   return obj.country === countryName;\r\n        // });\r\n        result2 = result.filter((obj) =>\r\n        obj.country === countryName\r\n      );\r\n      // check = neww.filter((obj) => obj.label !== \"\");\r\n        console.log(\"result depots\", result2);\r\n       var depotsCombined = result2.map(function(elem){\r\n          return elem.depot;\r\n      }).join(\", \")\r\n      console.log('result combined', depotsCombined)\r\n        dataa.push({\r\n          col1: countryName,\r\n          // col2: result2.depot,\r\n          col2: depotsCombined\r\n        });\r\n      });\r\n      // var result2 = result.find(obj => {\r\n      //   return obj.country === country\r\n      // });\r\n      // dataa.push({\r\n      //   col1: countryName,\r\n      //   col2: \"\",\r\n      // })\r\n\r\n      countriesNamesList = countriesNamesList.filter(\r\n        (val) => !savedDepotsCountriesList.includes(val)\r\n      );\r\n\r\n      countriesNamesList.map((countryName) =>\r\n        dataa.push({\r\n          col1: countryName,\r\n          col2: \"\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (typeof savedDepots === \"undefined\" && countriesNames) {\r\n      let countriesNamesList = [...countriesNames];\r\n      countriesNamesList.map((countryName) =>\r\n        dataa.push({\r\n          col1: countryName,\r\n          col2: \"\",\r\n        })\r\n      );\r\n    }\r\n    // let savedDepotsList = [];\r\n    // savedDepotsList =\r\n    //   savedDepots && savedDepots.containers.map((oneSavedDepot, index) => {\r\n\r\n    //   });\r\n\r\n    // var result =  savedDepots && savedDepots.containers.find(obj => {\r\n    //   return obj.country === 'United Kingdom'\r\n    // });\r\n\r\n    // console.log('savedDeppots result', result)\r\n\r\n    setSavedAssignedDepots([savedAssignedDepotsList]);\r\n    console.log(\"savedAssignedDepotsList2\", savedAssignedDepotsList);\r\nconsole.log('needed dataa', dataa)\r\n    const neww = dataa.map(({ col2: label, col2: value, col2: depotCode, ...rest }) => ({\r\n      label,\r\n      value,\r\n      depotCode,\r\n      ...rest,\r\n    }));\r\n\r\n    const newwArr = [];\r\n    // let newwUpdated;\r\n    // newwUpdated = neww.findIndex((obj => obj.label !== \"\"));\r\n    // console.log('newwUpdated', newwUpdated)\r\n    // neww[newwUpdated] = []\r\n    neww.map((newarr) => {\r\n      if (newarr.label === '') return newwArr.push([]);\r\n      if (newarr.label.includes(\",\")) \r\n      {let depotSplit = newarr.label.split(', '); let newDepots = [];\r\n      console.log('depotSplit', depotSplit)\r\n      var depotSplitObj = depotSplit.map((oneSplit, i) => {\r\n           newDepots.push({label: oneSplit, value: oneSplit, depotCode : oneSplit})\r\n      })\r\nconsole.log('newDepots', newDepots)\r\n      return newwArr.push(newDepots)\r\n      }\r\n      return newwArr.push([newarr]);\r\n    });\r\n    // var check = [];\r\n    // check = neww.filter((obj) => obj.label !== \"\");\r\n\r\n    // console.log(\"check\", check);\r\n    console.log(\"newwArr, selected1\", newwArr, selected1);\r\n    console.log(\"neww, selected1\", neww, selected1);\r\n    setSelected1(newwArr);\r\n    setGridData(dataa);\r\n    // setSelected1(dataa);\r\n  }, [savedDepots, countriesNames, arrayOfDepotsPerCountryUpdated]);\r\n\r\n  const assignDepotsToAgent = useCallback(() => {\r\n    // window.alert(\"assignDepotsToAgent\");\r\n    console.log(\"assignDepotsToAgent selected1\", selected1);\r\n    var merged = [].concat.apply([], selected1);\r\n\r\n    console.log(\"merged\", merged);\r\n    console.log(\"assignDepotsToAgent merged\", merged);\r\n    axios\r\n      .put(\r\n        `${locationsEndpoints.agent}/${props.location.state.agentUid}`,\r\n        merged\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/manage-agents\");\r\n      });\r\n  }, [selected1, savedDepots]);\r\n\r\n  // const callAssignedDepots = useCallback((depotsList, depotsForAgents) => {\r\n  //   // setSelected(depotsForAgents);\r\n\r\n  //   setSelected([...selected, { index: depotsForAgents }]);\r\n  // }, []);\r\n\r\n  let discardChangesProps = {\r\n    message: \"Are you sure you want to discard the changes you made?\",\r\n    button1: \"Discard Changes\",\r\n    button2: \"Cancel\",\r\n    buttonColor: \"primary-blue\",\r\n    cancelColor: \"outline-blue\",\r\n  };\r\n\r\n  let saveDepotsProps = {\r\n    message: \"Are you sure you want to save ?\",\r\n    button1: \"Yes\",\r\n    button2: \"No\",\r\n    buttonColor: \"primary-blue\",\r\n    cancelColor: \"outline-blue\",\r\n  };\r\n\r\n  return (\r\n    <SelectionCard>\r\n      <Header> Assign Depots </Header>\r\n      <Wrapper>\r\n        <form tw=\"grid grid-cols-addAgent gap-y-6 text-primary-blue text-14 font-light items-center\">\r\n          <label htmlFor=\"name\" className=\"name\">\r\n            Agent Name*\r\n          </label>\r\n          <Input\r\n            id=\"name\"\r\n            tw=\"text-14 w-337 h-40 px-2.5 bg-secondary-gray\"\r\n            type=\"text\"\r\n            placeholder={props.location.state.agentName}\r\n            disabled\r\n          />\r\n          <label htmlFor=\"email\" className=\"email\">\r\n            Agent Email*\r\n          </label>\r\n          <Input\r\n            id=\"email\"\r\n            tw=\"text-14 w-337 h-40 px-2.5 bg-secondary-gray\"\r\n            type=\"text\"\r\n            placeholder={props.location.state.agentEmail}\r\n            disabled\r\n          />\r\n          <label htmlFor=\"agentPhone\" className=\"phone\">\r\n            Agent Phone Number*\r\n          </label>\r\n          <Input\r\n            id=\"agentPhone\"\r\n            tw=\"text-14 w-337 h-40 px-2.5 bg-secondary-gray\"\r\n            type=\"text\"\r\n            placeholder={props.location.state.agentPhone}\r\n            disabled\r\n          />\r\n          <label htmlFor=\"depotsAssigned\" className=\"depots-assigned\">\r\n            Depots Assigned*\r\n          </label>\r\n          <Grid\r\n            count={count}\r\n            setCount={setCount}\r\n            agent={props.location.state.agentUid}\r\n            countries={countries}\r\n            options={options}\r\n            setOptions={setOptions}\r\n            savedDepots={savedDepots}\r\n            savedAssignedDepots={savedAssignedDepots}\r\n            setSavedAssignedDepots={setSavedAssignedDepots}\r\n            data={gridData}\r\n            setData={setGridData}\r\n            selected={selected}\r\n            selected1={selected1}\r\n            setSelected={setSelected}\r\n            setSelected1={setSelected1}\r\n            getIsoCountryCode={getIsoCountryCode}\r\n          />\r\n        </form>\r\n        <Actions>\r\n          <DiscardChangesModal\r\n            inline\r\n            width=\"450px\"\r\n            height=\"auto\"\r\n            titleFontSize=\"24px\"\r\n            component={<Cancel>Cancel</Cancel>}\r\n            title=\"Discard Changes\"\r\n            children={\r\n              <Popup\r\n                name=\"markUnavailable\"\r\n                {...discardChangesProps}\r\n                accept={() => history.push(\"/admin/manage-agents\")}\r\n              />\r\n            }\r\n          />\r\n          <Modal\r\n            grid\r\n            width=\"450px\"\r\n            height=\"auto\"\r\n            titleFontSize=\"24px\"\r\n            component={<SaveBtn color=\"primary-blue\">Save</SaveBtn>}\r\n            title=\"Save Changes\"\r\n            children={\r\n              <Popup\r\n                name=\"saveAssignDepotsToAgent\"\r\n                {...saveDepotsProps}\r\n                accept={assignDepotsToAgent}\r\n              />\r\n            }\r\n          />\r\n        </Actions>\r\n      </Wrapper>\r\n    </SelectionCard>\r\n  );\r\n};\r\n\r\nexport default AssignDepots;\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\AssignDepotsGrid.js",["827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport {\r\n    useTable\r\n} from 'react-table';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    connectUser,\r\n    disconnectUser,\r\n    getUserProfile,\r\n    getOrderID,\r\n    getOrderDetails,\r\n    getOrderSum,\r\n    getProductsList,\r\n    updateOrderDetails,\r\n    getOrderCurrency,\r\n} from \"../../../redux\";\r\nimport MultiSelect from \"../../../common/components/MultiSelect\";\r\nimport Modal from \"../../../common/components/Modal/Modal\";\r\nimport Popup from \"../../../common/components/Popup\";\r\nimport { locationsEndpoints } from \"../../../common/constants/apiEndpoints\";\r\nimport { TrashIcon } from '../../../assets/icons';\r\nimport {\r\n    AddWrapper,\r\n    AddSign,\r\n    StyledEdit\r\n} from './style';\r\nimport axios from \"axios\";\r\nimport tw from \"twin.macro\";\r\nimport { findIndex } from \"lodash\";\r\n\r\nexport default function Grid({\r\n    agent,\r\n    countries,\r\n    savedDepots,\r\n    savedAssignedDepots,\r\n    setSavedAssignedDepots,\r\n    options,\r\n    setOptions,\r\n    data,\r\n    setData,\r\n    selected,\r\n    selected1,\r\n    selected2,\r\n    selected3,\r\n    selected4,\r\n    selected5,\r\n    setSelected,\r\n    setSelected1,\r\n    count,\r\n    setCount,\r\n    getIsoCountryCode,\r\n    ...props\r\n}) {\r\n    const [country, setCountry] = useState([]);\r\n    const [arr, setArr] = useState([]);\r\n    const animatedComponents = makeAnimated();\r\n    const [word, setWord] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log('grid savedDepots', savedDepots)\r\n        console.log('grid savedAssignedDepots', savedAssignedDepots)\r\n        console.log('grid country', country)\r\n        console.log('grid data', data)\r\n        console.log('grid options', options)\r\n        console.log('grid selected', selected)\r\n        console.log('grid count', count)\r\n        console.log('grid arr', arr)\r\n        console.log('grid word', word)\r\n        console.log('grid selected1', selected1)\r\n\r\n    }, [selected, word,\r\n        savedAssignedDepots,\r\n        savedDepots,\r\n        data,\r\n        country,\r\n        data,\r\n        count,\r\n        selected1\r\n    ])\r\n\r\n    const getAddButton = () => {\r\n        return (\r\n            <AddWrapper>\r\n                <label> Actions </label>\r\n            </AddWrapper>\r\n        );\r\n    };\r\n\r\n    const unAssignDepotsToAgent = useCallback((row) => {\r\n        // const newData = [...data.slice(0, row.index), ...data.slice(row.index + 1)];\r\n        // setData(newData);\r\n        // setCount(count-1);\r\n\r\n        console.log('unAssignDepotsToAgent row', row)\r\n        console.log('unAssignDepotsToAgent selected', selected)\r\n        if (row.original.isEditing) {\r\n        let copy = [...selected1];\r\n        copy[row.index] = [];\r\n        setSelected1(copy);\r\n        }\r\n\r\n        // axios.put(`${locationsEndpoints.agent}/none`, selected)\r\n        //     .then(function (response) {\r\n        // console.log('unAssignDepotsToAgent response', response)\r\n        // const depotsList = [ ... response.data.containers]\r\n        // console.log('response.data.containers', response.data.containers)\r\n        // const depotsList = response.data.containers.map(\r\n        //   ({ depot: label, depot: value, ...rest }) => ({\r\n        //     label,\r\n        //     value,\r\n        //     ...rest,\r\n        //   })\r\n        // );]\r\n        // })\r\n    }, [data, setData, selected]\r\n    );\r\n\r\n    const onChange = useCallback((e, index) => {\r\n        // window.alert('onChange')\r\n\r\n        // setSelected([]);\r\n        // setDepots([]);\r\n        console.log('onChange e', e)\r\n        console.log('onChange index', index)\r\n\r\n        axios.get(`${locationsEndpoints.depots}?isoCountryCode=${e.value}`)\r\n            .then(function (response) {\r\n                const depotsList = response.data.map(({\r\n                    internalID: label,\r\n                    internalID: value,\r\n                    internalID: depotCode,\r\n                    ...rest\r\n                }) => ({\r\n                    label,\r\n                    value,\r\n                    depotCode,\r\n                    ...rest\r\n                }));\r\n\r\n                setSavedAssignedDepots([...savedAssignedDepots, ([{ [e.value]: depotsList }])])\r\n                // setSavedAssignedDepots([...savedAssignedDepots, ([{ [e.value]: depotsList }])])\r\n                // setSavedAssignedDepots( [{ [e.value]: depotsList }])\r\n                setSelected(\r\n                    selected.map((x, i) => {\r\n                        console.log('selected i', i)\r\n                        console.log('selected index', index)\r\n                        if (i !== index) return x;\r\n                        // return {\r\n                        //     ...subItem,\r\n                        //     text: text\r\n                        // };\r\n                        return ([{}])\r\n                    }),\r\n                );\r\n\r\n                // setCurrency((currency) => [\r\n                //     ...currency,\r\n                //     oneProduct.productCurrency,\r\n                //   ]);\r\n                // setSelected(selected)\r\n            })\r\n    }, []\r\n    );\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            //   borderBottom: '1px dotted pink',\r\n            //   color: state.isSelected ? '#04246A' : '#3E64B8',\r\n            backgroundColor: state.isFocused ? '#E5E9F0' : 'transparent',\r\n            color: '#04246A',\r\n            borderBottom: 0,\r\n            padding: 15,\r\n        }),\r\n        control: () => ({\r\n            // none of react-select's styles are passed to <Control /> {/* styles={customStyles} */}\r\n            display: 'grid',\r\n            gridTemplateColumns: 'minmax( auto, 242px ) auto'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            const color = '#04246A';\r\n            return { ...provided, opacity, transition, color };\r\n        },\r\n        multiValue: (provided, state) => {\r\n            const color = '#04246A';\r\n            const backgroundColor = '#E5E9F0';\r\n            const borderRadius = 10;\r\n            return { ...provided, color, backgroundColor, borderRadius };\r\n        }\r\n    }\r\n\r\n    const handleClickEditRow = useCallback((rowIndex) => {\r\n        // window.alert(\"rowIndex\", rowIndex);\r\n        console.log('data before', data)\r\n        // if ( data[index].isEditing ) setCountry([data[index].col1]);\r\n\r\n        // setData(data.map((r, index) => (index === rowIndex.index ? { ...r, isEditing: true } : { ...r })));\r\n        // setData(data.map((r, index) => (index === 0 ? { ...r, tralala : true, row : index} : { ...r })));\r\n        var dataCopy = [...data]\r\n        const itemIndex = dataCopy.map((r, index) => (index === rowIndex.index ? { ...r, isEditing: true, row: index } : { ...r }));\r\n        console.log('itemIndex', itemIndex)\r\n        setData(itemIndex)\r\n        setCountry(rowIndex.original.col1)\r\n\r\n        //    setCountry(data[index].col1)\r\n\r\n        console.log('rowIndex', rowIndex)\r\n        console.log('data after', data)\r\n        console.log('editRow arr', arr)\r\n        console.log('editRow country, savedDepots', country, savedDepots)\r\n        console.log('editRow savedDepots', savedDepots)\r\n        console.log('editRow data', data)\r\n    },\r\n        [data,\r\n            setData,\r\n            onChange,\r\n            countries,\r\n            country,\r\n            selected,\r\n            setSelected,\r\n            animatedComponents,\r\n            customStyles,\r\n            count,\r\n            setCount],\r\n    );\r\n\r\n    let deleteRowProps = {\r\n        message: \"Are you sure you want to delete the row?\",\r\n        button1: \"Cancel\",\r\n        button2: \"Delete Row\",\r\n        buttonColor: \"outline-blue\"\r\n    };\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Country',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Depots',\r\n                accessor: 'col2',\r\n            },\r\n            {\r\n                id: 'actions',\r\n                Header: getAddButton,\r\n                Cell: ({ row }) => {\r\n                    //const rowIndex = props.row.id;\r\n                    console.log('editableRow', row)\r\n                    //return !editableRow[row.index] ? (\r\n                    return (\r\n                        <div style={{\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'auto auto',\r\n                            gridGap: 10\r\n                        }}>\r\n                            {<StyledEdit\r\n                                onClick={() => handleClickEditRow(row)}\r\n                                alt=\"Edit Assigned Depots per Country\"\r\n                            />\r\n                            }\r\n                            <TrashIcon tw=\"self-center justify-self-center cursor-pointer\"\r\n                                onClick={() => unAssignDepotsToAgent(row)}\r\n                                alt=\"Delete Assigned Depots per Country\"\r\n                            />\r\n                            {/* <Modal\r\n                                grid\r\n                                width=\"450px\"\r\n                                height=\"auto\"\r\n                                titleFontSize=\"24px\"\r\n                                component={<TrashIcon tw=\"self-center justify-self-center cursor-pointer\"\r\n                                    alt=\"Delete Assigned Depots per Country\"\r\n                                />}\r\n                                title=\"Delete Row\"\r\n                                children={\r\n                                    <Popup\r\n                                        name=\"deleteAssignDepotsToAgentRow\"\r\n                                        {...deleteRowProps}\r\n                                        accept={() => unAssignDepotsToAgent(row)}\r\n                                    />\r\n                                }\r\n                            /> */}\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ],\r\n        [countries, selected, savedDepots, unAssignDepotsToAgent]\r\n    )\r\n\r\n    useEffect(() => {\r\n        console.log('savedAssignedDepots after changing data', data)\r\n        console.log('savedAssignedDepots data', data)\r\n        console.log('savedAssignedDepots country', country)\r\n        console.log('savedAssignedDepots selected', selected)\r\n        console.log('savedAssignedDepots savedDepots', savedDepots)\r\n        console.log('savedAssignedDepots savedAssignedDepots', savedAssignedDepots)\r\n        console.log('select arr, country, country[count-1]', arr, country, country[0])\r\n        console.log('select country.length', country.length)\r\n        console.log('select count', count)\r\n\r\n        let result = [];\r\n        if (savedAssignedDepots && savedAssignedDepots[0] && savedAssignedDepots[0].length > 1) {\r\n            result = savedAssignedDepots[0].find(a => a[country])\r\n            console.log('result', result)\r\n            // console.log('result[data[index].col1] ', result[data[index].col1] )\r\n        }\r\n\r\n        var newValues = [];\r\n        // if (selected.length > 0) {\r\n        //     selected.map((oneSelected, index) => {\r\n        //         console.log('selected', selected)\r\n        //         console.log('oneSelected', oneSelected)\r\n        //         console.log('oneSelected country', oneSelected[country])\r\n        //         console.log('oneSelected[\"United Kingdom\"]', oneSelected[\"United Kingdom\"])\r\n        //         console.log('oneSelected, oneSelected the country, oneSelected[country], oneSelected[country][0]', oneSelected, country, oneSelected[country], oneSelected[country][0])\r\n        //         console.log('oneSelected the country', country)\r\n        //         console.log('oneSelected[country]', oneSelected[country])\r\n        //         return newValues.push(oneSelected[country][0])\r\n        //     })\r\n        // }\r\n        console.log('newValues on returnnnn', newValues)\r\n\r\n        let gridData = [...data];\r\n        console.log('gridData', gridData)\r\n        let gridDataUpdated = gridData.map((el, i) => (\r\n            el.col1 === country ? {\r\n                ...el,\r\n                col2:\r\n                    <MultiSelect\r\n                        options={savedAssignedDepots.length > 0 ? result[country] : savedAssignedDepots[0]}\r\n                        value={selected1[i]}\r\n                        onChange={(e) => {\r\n                            let copy = [...selected1];\r\n                            copy[i] = e;\r\n                            setSelected1(copy);\r\n                        }}\r\n                        labelledBy={\"Select\"}\r\n                    />\r\n            } : { ...el }\r\n        ))\r\n        console.log('gridDataUpdated', gridDataUpdated)\r\n        setData(gridDataUpdated);\r\n    }, [selected, word, savedAssignedDepots, country, selected1])\r\n\r\n\r\n    const EditableCell = ({\r\n        data,\r\n        value: initialValue,\r\n        row: { index },\r\n        // row,\r\n        column: { id },\r\n        // column,\r\n        isEditing,\r\n        updateMyData, // This is a custom function that we supplied to our table instance\r\n        ...props\r\n    }) => {\r\n        console.log('EditableCell id', id)\r\n        console.log('EditableCell index', index)\r\n        console.log('EditableCell savedAssignedDepots', savedAssignedDepots)\r\n        console.log('EditableCell savedAssignedDepots[0]', savedAssignedDepots[0])\r\n        console.log('EditableCell country', country)\r\n        console.log('EditableCell data[index]', data[index])\r\n        console.log('EditableCell selected', selected)\r\n        console.log('EditableCell selected.length', selected.length)\r\n        // console.log('EditableCell selected[0]', selected[0])\r\n        console.log('EditableCell selected[data[index]]', selected[data[index]])\r\n        console.log('EditableCell data[index].row', data[index].row)\r\n        console.log('EditableCell data[index].isEditing', data[index].isEditing)\r\n        console.log('EditableCell savedAssignedDepots.length', savedAssignedDepots.length)\r\n        console.log('selected[data[index].col1]', selected[data[index].col1])\r\n        console.log('data[index].col1', data[index].col1)\r\n        // console.log('EditableCell savedAssignedDepots[0][0][country]', savedAssignedDepots[0][0][country])\r\n        // if (data[index].isEditing && selected.length === 0) setCountry(data[index].col1)\r\n        // if ( data[index].isEditing && selected.length === 0 ) setCountry(data[index].col1)\r\n        // if ( selected.length === 0 ) getCountryDepots(data[index].col1)\r\n        // console.log('getCountryDepots(data[index].col1)', getCountryDepots(data[index].col1))\r\n        let savedAssignedDepotsList = []\r\n\r\n        // if (data[index].isEditing && selected.length === 0) {\r\n\r\n        // axios.get(\r\n        //     `${locationsEndpoints.depots}?isoCountryCode=` +\r\n        //       getIsoCountryCode(`${data[index].col1}`)\r\n        //   )\r\n        //   .then(function (response) {\r\n        //     console.log(\"useEffect response\", response);\r\n        //     // const depotsList = [ ... response.data.containers]\r\n        //     // console.log('response.data.containers', response.data.containers)\r\n        //     const depotsList = response.data.map(\r\n        //       ({\r\n        //         internalID: label,\r\n        //         internalID: value,\r\n        //         internalID: depotCode,\r\n        //         ...rest\r\n        //       }) => ({\r\n        //         label,\r\n        //         value,\r\n        //         depotCode,\r\n        //         ...rest,\r\n        //       })\r\n        //     );\r\n\r\n        //     savedAssignedDepotsList.push({ [data[index].col1]: depotsList });\r\n        //     console.log(\"Editable savedAssignedDepotsList\", savedAssignedDepotsList);\r\n        //     setSavedAssignedDepots([savedAssignedDepotsList]);\r\n        //     // console.log(\"Editable depotsList\", depotsList);\r\n        //     // setSelected(depotsList)\r\n        //   });\r\n        // }\r\n        // console.log('newnew', data[index]['isEditing'] && data[index].row && typeof selected[data[index].row] !== 'undefined' && selected[0].length > 0)\r\n        // console.log('savedAssignedDepots[0].find(a => a[data[index].col1])', savedAssignedDepots[0].find(a => a[data[index].col1]))\r\n        let result = [];\r\n        if (savedAssignedDepots[0].length > 1) {\r\n            result = savedAssignedDepots[0].find(a => a[data[index].col1])\r\n            console.log('result2', result)\r\n            // console.log('result[data[index].col1] ', result[data[index].col1] )\r\n        }\r\n        console.log('result22', result)\r\n        // if ( result[data[index].col1]) console.log('result[data[index].col1]2', result[data[index].col1] )\r\n        console.log('country', country)\r\n        // if (selected[0]) console.log('selected[0][data[index].col1]', selected[0][data[index].col1] )\r\n\r\n        let filtered = []\r\n        if (selected.length > 0) {\r\n            filtered = selected.reduce((a, o) => (o[data[index].col1] && a.push(o[data[index].col1]), a), [])\r\n            console.log('filtered', filtered)\r\n            console.log('filtered[data[index].col1]', filtered[data[index].col1])\r\n        }\r\n\r\n        var newValues = [];\r\n        // if (selected.length > 0) {\r\n        //     selected.map((oneSelected, index) => {\r\n        //         console.log('oneSelected', oneSelected)\r\n        //         console.log('oneSelected.country', oneSelected[country])\r\n        //         return newValues.push(oneSelected[country][0])\r\n        //     })\r\n        // }\r\n        // console.log('newValues on return', newValues)\r\n        // const [ word, setWord] = useState([])  \r\n\r\n        // let countrySelection;\r\n        // switch(country) {\r\n        //     case 'Spain':\r\n        //     countrySelection = {selected1, setSelected1}\r\n        //       return countrySelection; \r\n        //     case 'United Kingdom':\r\n        //         countrySelection = {selected2, setSelected2}\r\n        //         return countrySelection;\r\n        //       case 'Italy':\r\n        //         countrySelection = {selected3, setSelected3}\r\n        //         return countrySelection;\r\n        //         case 'Lebanon':\r\n        //             countrySelection = {selected4, setSelected4}\r\n        //             return countrySelection;\r\n        //     default:\r\n        //         countrySelection = {selected5, setSelected5}\r\n        //         return countrySelection;\r\n        //   } \r\nconsole.log('selected1[index], index', selected1[index], index)\r\n        return (\r\n            (typeof data[index]['isEditing'] !== 'undefined' &&\r\n                data[index]['isEditing']) && typeof result !== 'undefined' ?\r\n                id === 'col1' ? (data[index].isEditing && data[index].col1) :\r\n                    id === 'col2'\r\n                        ?\r\n                        //   <MultiSelect\r\n                        //   options={data[index].isEditing && savedAssignedDepots.length > 0 ? result[data[index].col1] : savedAssignedDepots[0] }\r\n                        //   value={data[index]['isEditing'] && data[index].row && typeof selected[data[index].row] !== 'undefined' && selected[0] && selected[0].length > 0 && selected.length > 0 && word.length > 0 ? newValues : []}\r\n                        //   onChange={(e) => changeSelected(e, data[index].col1)}\r\n                        //   labelledBy={\"Select\"}\r\n                        // />\r\n\r\n                        <MultiSelect\r\n                            options={data[index].isEditing && savedAssignedDepots.length > 0 ? result[data[index].col1] : savedAssignedDepots[0]}\r\n                            value={selected1[index]}\r\n                            onChange={(e) => {\r\n                                let copy = [...selected1];\r\n                                copy[index] = e;\r\n                                setSelected1(copy);\r\n                            }}\r\n                            labelledBy={\"Select\"}\r\n                        />\r\n                        :\r\n                        initialValue\r\n                : initialValue\r\n        )\r\n    };\r\n\r\n    const changeSelected = (e, country) => {\r\n        // window.alert(\"changeSelected\");\r\n        console.log(\"changeSelected country\", country)\r\n        console.log('changeSelected e', e)\r\n        let newSelected = [...selected];\r\n        // newSelected.filter(new => new.hasOwnProperty([country])) ? newSelected.vendor[0].type.push(\"foo\") :\r\n        newSelected.push({ [country]: e });\r\n        // newSelected.push(e)\r\n        // Object.assign(newSelected[0][country], e);\r\n\r\n        console.log('selected, newSelected', selected, newSelected)\r\n        setSelected(newSelected)\r\n        // setWord([[{'JUBAIL': [{label: 'A', value: 'B'}]}]])\r\n\r\n    };\r\n\r\n    //     const getCountryDepots = (country) => {\r\n    //         console.log(\"inside getCountryDepots\")\r\n    //         let savedAssignedDepotsList = []\r\n    //         axios.get(\r\n    //             `${locationsEndpoints.depots}?isoCountryCode=` +\r\n    //               getIsoCountryCode(`${country}`)\r\n    //           )\r\n    //           .then(function (response) {\r\n    //             console.log(\"useEffect response\", response);\r\n    //             // const depotsList = [ ... response.data.containers]\r\n    //             // console.log('response.data.containers', response.data.containers)\r\n    //             const depotsList = response.data.map(\r\n    //               ({\r\n    //                 internalID: label,\r\n    //                 internalID: value,\r\n    //                 internalID: depotCode,\r\n    //                 ...rest\r\n    //               }) => ({\r\n    //                 label,\r\n    //                 value,\r\n    //                 depotCode,\r\n    //                 ...rest,\r\n    //               })\r\n    //             );\r\n\r\n    //             savedAssignedDepotsList.push({ [country]: depotsList });\r\n    //             console.log(\"Editable savedAssignedDepotsList\", savedAssignedDepotsList);\r\n    //             return savedAssignedDepotsList\r\n    //     })\r\n    //     return savedAssignedDepotsList\r\n    // }\r\n\r\n    // async function getCountryDepots(country) {\r\n    //     try {\r\n    //       await axios\r\n    //         .get(`${locationsEndpoints.depots}?isoCountryCode=` +\r\n    //         getIsoCountryCode(`${country}`))\r\n    //         .then(function (response) {\r\n    //           console.log(\"getCountryDepots response data\", response.data);\r\n    //           const depotsList = response.data.map(\r\n    //             ({\r\n    //               internalID: label,\r\n    //               internalID: value,\r\n    //               internalID: depotCode,\r\n    //               ...rest\r\n    //             }) => ({\r\n    //               label,\r\n    //               value,\r\n    //               depotCode,\r\n    //               ...rest,\r\n    //             })\r\n    //           );\r\n    //           let savedAssignedDepotsList = []\r\n    //           savedAssignedDepotsList.push({ [country]: depotsList });\r\n    //           console.log(\"Editable savedAssignedDepotsList\", savedAssignedDepotsList);\r\n    //           return savedAssignedDepotsList\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //           console.log(\"getDepotsFromCountries response error\", error);\r\n    //           return error.message;\r\n    //         });\r\n    //     } catch {\r\n    //       throw new Error(\"getDepotsFromCountries error\");\r\n    //     }\r\n    //   }\r\n\r\n    // Set our editable cell renderer as the default Cell renderer\r\n    const defaultColumn = {\r\n        Cell: EditableCell\r\n    };\r\n\r\n    // Render the UI for your table\r\n    //console.log('gridstyled data', data)\r\n    //console.log('defaultColumn', defaultColumn)\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data, defaultColumn })\r\n\r\n    console.log('table gridData', data)\r\n    console.log('table rows', rows)\r\n    console.log('table columns', columns)\r\n    console.log('useTable countries', countries)\r\n    console.log('useTable defaultColumn[savedAssignedDepots]', defaultColumn['savedAssignedDepots'])\r\n\r\n    return (<>\r\n        <table {...getTableProps()} style={{ border: 'solid 1px #04246A' }}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}\r\n                        style={{\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'repeat(3, 1fr)'\r\n                        }}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps()}\r\n                                style={{\r\n                                    borderBottom: 'solid 3px #E20101',\r\n                                    background: 'white',\r\n                                    color: '#04246A',\r\n                                    fontWeight: 'bold',\r\n                                    padding: 10\r\n                                }}\r\n                            >\r\n                                {column.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}\r\n                            style={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(3, 1fr)'\r\n                            }}>\r\n                            {row.cells.map(cell => {\r\n                                console.log('inside grid cell.column.id', cell.column.id)\r\n                                return (\r\n                                    <td\r\n                                        {...cell.getCellProps()}\r\n                                        style={{\r\n                                            padding: 10,\r\n                                            borderLeft: 'solid 1px #04246A',\r\n                                            borderRight: 'solid 1px #04246A',\r\n                                            borderBottom: 'solid 1px #04246A',\r\n                                            background: 'white',\r\n                                            display: 'grid',\r\n                                            justifyContent:\r\n                                                !cell.row.original.isEditing\r\n                                                    || (cell.row.original.isEditing && cell.column.id === 'actions')\r\n                                                    ? 'center' : 'normal',\r\n                                            alignItems: 'center',\r\n                                            textAlign: cell.column.id === 'col2' ? 'left' : 'center'\r\n                                        }}\r\n                                    >\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </>\r\n    )\r\n}\r\n","C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Admin\\ManageAgents\\style.js",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\common\\components\\Table\\ViewContainersDetails.jsx",["856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880"],"import { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { getOrderDetails, getProductsList } from \"../../../redux\";\r\nimport ShoppingCart from \"../ShoppingCart/\";\r\nimport UploadDocuments from \"../../../common/components/UploadDocuments\";\r\nimport ViewDocuments from \"../../../common/components/ViewDocuments\";\r\nimport currencies from \"../../../common/constants/currencies\";\r\nimport { Button, Text } from \"../../styles\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst TableWrapper = tw.div`\r\npy-2 align-middle \r\ninline-block min-w-full \r\nrounded-sm px-4\r\n`;\r\n\r\nconst Table = tw.table`\r\nmin-w-full text-center\r\n`;\r\n\r\nconst TheadRow = tw.tr`\r\nh-48\r\ntext-black \r\nbg-extra-light-blue\r\n`;\r\n\r\nconst TheadCol = tw.th`\r\npy-3\r\ntext-primary-blue font-medium\r\ntext-sm md:text-17 \r\nwhitespace-nowrap\r\n`;\r\n\r\nconst TbodyRow = tw.tr`\r\nhover:bg-gray-100\r\nlast:border-0\r\n`;\r\n// xl:py-4\r\nconst TbodyCol = tw.td`\r\npx-6 sm:py-2\r\ntext-primary-blue font-normal\r\ntext-sm md:whitespace-nowrap\r\nsm:whitespace-nowrap md:whitespace-normal\r\n`;\r\n\r\nfunction ViewContainersDetails({\r\n  headers,\r\n  data,\r\n  order,\r\n  headerColor,\r\n  headerFontSize,\r\n  alignTdsTop,\r\n  bgColor,\r\n  width,\r\n  height,\r\n  borderBottom,\r\n  coloredText,\r\n  bookingOrder = null,\r\n  ...props\r\n}) {\r\n  const { getOrderDetails, getProductsList, orderData, productData } = props;\r\n\r\n  const [container, setContainer] = useState([]);\r\n  const [address, setAddress] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [type, setType] = useState([]);\r\n  const [size, setSize] = useState([]);\r\n  const [typeSize, setTypeSize] = useState([]);\r\n  const [condition, setCondition] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [currency, setCurrency] = useState([]);\r\n  const [orderFullDetails, setOrderFullDetails] = useState([]);\r\n  const [ex, setEx] = useState([]);\r\n\r\n  const [product, setProduct] = useState([]);\r\n\r\n  console.log(\"view ex\", ex);\r\n  console.log(\"view data\", data);\r\n  console.log(\"view getOrderDetails\", getOrderDetails);\r\n  console.log(\"view bookingOrder\", bookingOrder);\r\n  console.log(\"view productData\", productData);\r\n  console.log(\"view product\", product);\r\n  console.log(\"view quantity\", quantity);\r\n  console.log(\r\n    \"view container data\",\r\n    quantity,\r\n    price,\r\n    type,\r\n    size,\r\n    typeSize,\r\n    condition,\r\n    address,\r\n    container,\r\n    currency\r\n  );\r\n  console.log(\"orderFullDetails\", orderFullDetails);\r\n\r\n\r\n  // console.log(\"InfoTable props\", props);\r\n\r\n  return (\r\n    <div\r\n      tw=\"overflow-x-auto m-auto my-0\"\r\n      style={{\r\n        backgroundColor: bgColor ? bgColor : \"#ffffff\",\r\n        width: width ? width : \"100%\",\r\n        height: height ? height : \"inherit\",\r\n      }}\r\n    >\r\n      <TableWrapper>\r\n        <Table>\r\n          <thead>\r\n            <TheadRow\r\n              style={{\r\n                backgroundColor: headerColor ? headerColor : \"#E6EAF0\",\r\n                borderBottom: borderBottom ? borderBottom : 0,\r\n              }}\r\n            >\r\n              {headers.map(\r\n                (title) =>\r\n                  console.log(\"title\", title) || (\r\n                    <TheadCol\r\n                      key={title}\r\n                      scope=\"col\"\r\n                      style={{ fontSize: headerFontSize ? headerFontSize : 14 }}\r\n                    >\r\n                      {/* {title === 'Total Amount' ? title+currency()} */}\r\n                      {title}\r\n                    </TheadCol>\r\n                  )\r\n              )}\r\n            </TheadRow>\r\n          </thead>\r\n          <tbody>\r\n              trklqala\r\n            {data &&\r\n              data.map((item, i) => (\r\n                <TbodyRow\r\n                  key={i}\r\n                  style={{\r\n                    borderBottom: borderBottom ? borderBottom : 0,\r\n                    verticalAlign: alignTdsTop ? \"top\" : \"middle\",\r\n                  }}\r\n                >\r\n                  {order.map(\r\n                    (key) =>\r\n\r\n                        <TbodyCol key={item[key]}>\r\ntrha\r\n                        </TbodyCol>\r\n                      )\r\n                  }\r\n                </TbodyRow>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </TableWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderId: state.orderId,\r\n    orderData: state.orderData,\r\n    cartData: state.cartData,\r\n    productData: state.productData,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getOrderDetails,\r\n  getProductsList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewContainersDetails);\r\n",["881","882"],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\carousel.jsx",[],"C:\\Users\\Ramona\\Desktop\\CSP\\eks\\csp-app-front\\client\\src\\views\\Buyer\\Home\\Carousel.jsx",["883"],"import React from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nexport default () => (\r\n  <Carousel autoPlay infiniteLoop emulateTouch showThumbs={false} style={{height: 512}}>\r\n    <div>\r\n      <img alt=\"\" src=\"https://finanswatch.dk/Billeder/article12443610.ece/ALTERNATES/native-app-2048/doc7ciuklhgr0m1i5r20amf.jpg\" />\r\n      {/* <p className=\"legend\">Legend 1</p> */}\r\n    </div>\r\n    <div>\r\n      <img alt=\"\" src=\"https://www.porttechnology.org/wp-content/uploads/2020/05/cma-cgm.jpg\r\n\" />\r\n      {/* <p className=\"legend\">Legend 2</p> */}\r\n    </div>\r\n    <div>\r\n      <img alt=\"\" src=\"https://www.hafen-hamburg.de/site/assets/files/447393/9839208_02.1920x0.jpg\" />\r\n      {/* <p className=\"legend\">Legend 3</p> */}\r\n    </div>\r\n    {/* <div>\r\n      <img alt=\"\" src=\"https://www.cmacgm-group.com/api/sites/default/files/2021-01/CC%20JS%20-%20Terminal%20-%20%201900x700.jpg\" />\r\n      {/* <p className=\"legend\">Legend 4</p>\r\n    </div> */}\r\n  </Carousel>\r\n);\r\n",{"ruleId":"884","replacedBy":"885"},{"ruleId":"886","replacedBy":"887"},{"ruleId":"888","severity":1,"message":"889","line":3,"column":62,"nodeType":"890","messageId":"891","endLine":3,"endColumn":66},{"ruleId":"888","severity":1,"message":"892","line":11,"column":8,"nodeType":"890","messageId":"891","endLine":11,"endColumn":14},{"ruleId":"888","severity":1,"message":"893","line":19,"column":7,"nodeType":"890","messageId":"891","endLine":19,"endColumn":17},{"ruleId":"888","severity":1,"message":"894","line":47,"column":9,"nodeType":"890","messageId":"891","endLine":47,"endColumn":14},{"ruleId":"895","severity":1,"message":"896","line":13,"column":1,"nodeType":"897","endLine":25,"endColumn":3},{"ruleId":"888","severity":1,"message":"898","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":13},{"ruleId":"888","severity":1,"message":"899","line":9,"column":10,"nodeType":"890","messageId":"891","endLine":9,"endColumn":29},{"ruleId":"888","severity":1,"message":"900","line":43,"column":5,"nodeType":"890","messageId":"891","endLine":43,"endColumn":13},{"ruleId":"888","severity":1,"message":"901","line":46,"column":10,"nodeType":"890","messageId":"891","endLine":46,"endColumn":15},{"ruleId":"888","severity":1,"message":"902","line":48,"column":11,"nodeType":"890","messageId":"891","endLine":48,"endColumn":34},{"ruleId":"888","severity":1,"message":"903","line":73,"column":7,"nodeType":"890","messageId":"891","endLine":73,"endColumn":17},{"ruleId":"888","severity":1,"message":"904","line":27,"column":30,"nodeType":"890","messageId":"891","endLine":27,"endColumn":44},{"ruleId":"888","severity":1,"message":"894","line":78,"column":7,"nodeType":"890","messageId":"891","endLine":78,"endColumn":12},{"ruleId":"888","severity":1,"message":"905","line":89,"column":11,"nodeType":"890","messageId":"891","endLine":89,"endColumn":23},{"ruleId":"888","severity":1,"message":"900","line":90,"column":11,"nodeType":"890","messageId":"891","endLine":90,"endColumn":19},{"ruleId":"888","severity":1,"message":"906","line":91,"column":11,"nodeType":"890","messageId":"891","endLine":91,"endColumn":24},{"ruleId":"888","severity":1,"message":"907","line":92,"column":11,"nodeType":"890","messageId":"891","endLine":92,"endColumn":20},{"ruleId":"888","severity":1,"message":"908","line":93,"column":11,"nodeType":"890","messageId":"891","endLine":93,"endColumn":18},{"ruleId":"888","severity":1,"message":"909","line":98,"column":11,"nodeType":"890","messageId":"891","endLine":98,"endColumn":21},{"ruleId":"888","severity":1,"message":"910","line":112,"column":18,"nodeType":"890","messageId":"891","endLine":112,"endColumn":27},{"ruleId":"911","severity":1,"message":"912","line":175,"column":6,"nodeType":"913","endLine":175,"endColumn":19,"suggestions":"914"},{"ruleId":"888","severity":1,"message":"915","line":1,"column":23,"nodeType":"890","messageId":"891","endLine":1,"endColumn":38},{"ruleId":"888","severity":1,"message":"916","line":18,"column":25,"nodeType":"890","messageId":"891","endLine":18,"endColumn":39},{"ruleId":"888","severity":1,"message":"917","line":18,"column":54,"nodeType":"890","messageId":"891","endLine":18,"endColumn":62},{"ruleId":"911","severity":1,"message":"918","line":32,"column":6,"nodeType":"913","endLine":32,"endColumn":8,"suggestions":"919"},{"ruleId":"888","severity":1,"message":"917","line":16,"column":38,"nodeType":"890","messageId":"891","endLine":16,"endColumn":46},{"ruleId":"911","severity":1,"message":"918","line":23,"column":6,"nodeType":"913","endLine":23,"endColumn":8,"suggestions":"920"},{"ruleId":"888","severity":1,"message":"921","line":10,"column":8,"nodeType":"890","messageId":"891","endLine":10,"endColumn":18},{"ruleId":"888","severity":1,"message":"922","line":30,"column":24,"nodeType":"890","messageId":"891","endLine":30,"endColumn":38},{"ruleId":"888","severity":1,"message":"923","line":60,"column":7,"nodeType":"890","messageId":"891","endLine":60,"endColumn":18},{"ruleId":"884","replacedBy":"924"},{"ruleId":"886","replacedBy":"925"},{"ruleId":"888","severity":1,"message":"926","line":1,"column":22,"nodeType":"890","messageId":"891","endLine":1,"endColumn":30},{"ruleId":"888","severity":1,"message":"927","line":14,"column":8,"nodeType":"890","messageId":"891","endLine":14,"endColumn":15},{"ruleId":"888","severity":1,"message":"928","line":19,"column":14,"nodeType":"890","messageId":"891","endLine":19,"endColumn":20},{"ruleId":"888","severity":1,"message":"929","line":54,"column":9,"nodeType":"890","messageId":"891","endLine":54,"endColumn":23},{"ruleId":"888","severity":1,"message":"930","line":55,"column":9,"nodeType":"890","messageId":"891","endLine":55,"endColumn":22},{"ruleId":"911","severity":1,"message":"931","line":72,"column":8,"nodeType":"913","endLine":72,"endColumn":17,"suggestions":"932"},{"ruleId":"911","severity":1,"message":"931","line":77,"column":8,"nodeType":"913","endLine":77,"endColumn":10,"suggestions":"933"},{"ruleId":"911","severity":1,"message":"931","line":84,"column":8,"nodeType":"913","endLine":84,"endColumn":10,"suggestions":"934"},{"ruleId":"911","severity":1,"message":"935","line":110,"column":8,"nodeType":"913","endLine":110,"endColumn":21,"suggestions":"936"},{"ruleId":"888","severity":1,"message":"894","line":112,"column":11,"nodeType":"890","messageId":"891","endLine":112,"endColumn":16},{"ruleId":"911","severity":1,"message":"937","line":66,"column":9,"nodeType":"938","endLine":71,"endColumn":4,"suggestions":"939"},{"ruleId":"888","severity":1,"message":"940","line":1,"column":38,"nodeType":"890","messageId":"891","endLine":1,"endColumn":53},{"ruleId":"888","severity":1,"message":"941","line":5,"column":8,"nodeType":"890","messageId":"891","endLine":5,"endColumn":20},{"ruleId":"888","severity":1,"message":"942","line":10,"column":8,"nodeType":"890","messageId":"891","endLine":10,"endColumn":18},{"ruleId":"888","severity":1,"message":"907","line":66,"column":45,"nodeType":"890","messageId":"891","endLine":66,"endColumn":54},{"ruleId":"888","severity":1,"message":"943","line":68,"column":21,"nodeType":"890","messageId":"891","endLine":68,"endColumn":33},{"ruleId":"888","severity":1,"message":"944","line":69,"column":19,"nodeType":"890","messageId":"891","endLine":69,"endColumn":29},{"ruleId":"888","severity":1,"message":"945","line":71,"column":16,"nodeType":"890","messageId":"891","endLine":71,"endColumn":23},{"ruleId":"888","severity":1,"message":"946","line":72,"column":16,"nodeType":"890","messageId":"891","endLine":72,"endColumn":23},{"ruleId":"888","severity":1,"message":"947","line":73,"column":20,"nodeType":"890","messageId":"891","endLine":73,"endColumn":31},{"ruleId":"888","severity":1,"message":"948","line":74,"column":21,"nodeType":"890","messageId":"891","endLine":74,"endColumn":33},{"ruleId":"888","severity":1,"message":"949","line":119,"column":13,"nodeType":"890","messageId":"891","endLine":119,"endColumn":23},{"ruleId":"888","severity":1,"message":"950","line":120,"column":13,"nodeType":"890","messageId":"891","endLine":120,"endColumn":18},{"ruleId":"951","severity":1,"message":"952","line":121,"column":51,"nodeType":"953","messageId":"954","endLine":121,"endColumn":53},{"ruleId":"951","severity":1,"message":"952","line":132,"column":51,"nodeType":"953","messageId":"954","endLine":132,"endColumn":53},{"ruleId":"911","severity":1,"message":"955","line":210,"column":6,"nodeType":"913","endLine":210,"endColumn":50,"suggestions":"956"},{"ruleId":"888","severity":1,"message":"957","line":265,"column":9,"nodeType":"890","messageId":"891","endLine":265,"endColumn":23},{"ruleId":"888","severity":1,"message":"958","line":1,"column":27,"nodeType":"890","messageId":"891","endLine":1,"endColumn":33},{"ruleId":"888","severity":1,"message":"959","line":1,"column":46,"nodeType":"890","messageId":"891","endLine":1,"endColumn":60},{"ruleId":"888","severity":1,"message":"960","line":6,"column":31,"nodeType":"890","messageId":"891","endLine":6,"endColumn":37},{"ruleId":"888","severity":1,"message":"961","line":20,"column":8,"nodeType":"890","messageId":"891","endLine":20,"endColumn":16},{"ruleId":"888","severity":1,"message":"904","line":23,"column":3,"nodeType":"890","messageId":"891","endLine":23,"endColumn":17},{"ruleId":"888","severity":1,"message":"962","line":24,"column":3,"nodeType":"890","messageId":"891","endLine":24,"endColumn":21},{"ruleId":"888","severity":1,"message":"963","line":26,"column":8,"nodeType":"890","messageId":"891","endLine":26,"endColumn":13},{"ruleId":"888","severity":1,"message":"929","line":133,"column":5,"nodeType":"890","messageId":"891","endLine":133,"endColumn":19},{"ruleId":"911","severity":1,"message":"964","line":192,"column":6,"nodeType":"913","endLine":192,"endColumn":20,"suggestions":"965"},{"ruleId":"911","severity":1,"message":"964","line":198,"column":6,"nodeType":"913","endLine":198,"endColumn":29,"suggestions":"966"},{"ruleId":"888","severity":1,"message":"967","line":209,"column":12,"nodeType":"890","messageId":"891","endLine":209,"endColumn":20},{"ruleId":"888","severity":1,"message":"968","line":221,"column":11,"nodeType":"890","messageId":"891","endLine":221,"endColumn":28},{"ruleId":"951","severity":1,"message":"952","line":62,"column":38,"nodeType":"953","messageId":"954","endLine":62,"endColumn":40},{"ruleId":"888","severity":1,"message":"928","line":3,"column":14,"nodeType":"890","messageId":"891","endLine":3,"endColumn":20},{"ruleId":"888","severity":1,"message":"969","line":11,"column":12,"nodeType":"890","messageId":"891","endLine":11,"endColumn":20},{"ruleId":"888","severity":1,"message":"970","line":36,"column":7,"nodeType":"890","messageId":"891","endLine":36,"endColumn":19},{"ruleId":"888","severity":1,"message":"971","line":51,"column":7,"nodeType":"890","messageId":"891","endLine":51,"endColumn":21},{"ruleId":"888","severity":1,"message":"908","line":54,"column":5,"nodeType":"890","messageId":"891","endLine":54,"endColumn":12},{"ruleId":"911","severity":1,"message":"972","line":114,"column":6,"nodeType":"913","endLine":114,"endColumn":16,"suggestions":"973"},{"ruleId":"911","severity":1,"message":"974","line":54,"column":6,"nodeType":"913","endLine":54,"endColumn":8,"suggestions":"975"},{"ruleId":"888","severity":1,"message":"976","line":17,"column":7,"nodeType":"890","messageId":"891","endLine":17,"endColumn":13},{"ruleId":"888","severity":1,"message":"977","line":3,"column":8,"nodeType":"890","messageId":"891","endLine":3,"endColumn":17},{"ruleId":"888","severity":1,"message":"978","line":5,"column":10,"nodeType":"890","messageId":"891","endLine":5,"endColumn":14},{"ruleId":"888","severity":1,"message":"979","line":6,"column":8,"nodeType":"890","messageId":"891","endLine":6,"endColumn":10},{"ruleId":"888","severity":1,"message":"980","line":101,"column":10,"nodeType":"890","messageId":"891","endLine":101,"endColumn":18},{"ruleId":"888","severity":1,"message":"981","line":103,"column":54,"nodeType":"890","messageId":"891","endLine":103,"endColumn":67},{"ruleId":"911","severity":1,"message":"982","line":121,"column":6,"nodeType":"913","endLine":121,"endColumn":31,"suggestions":"983"},{"ruleId":"911","severity":1,"message":"984","line":123,"column":9,"nodeType":"938","endLine":150,"endColumn":4,"suggestions":"985"},{"ruleId":"951","severity":1,"message":"952","line":160,"column":29,"nodeType":"953","messageId":"954","endLine":160,"endColumn":31},{"ruleId":"911","severity":1,"message":"986","line":181,"column":6,"nodeType":"913","endLine":181,"endColumn":47,"suggestions":"987"},{"ruleId":"888","severity":1,"message":"960","line":28,"column":24,"nodeType":"890","messageId":"891","endLine":28,"endColumn":30},{"ruleId":"888","severity":1,"message":"988","line":51,"column":5,"nodeType":"890","messageId":"891","endLine":51,"endColumn":17},{"ruleId":"888","severity":1,"message":"989","line":52,"column":5,"nodeType":"890","messageId":"891","endLine":52,"endColumn":19},{"ruleId":"888","severity":1,"message":"990","line":224,"column":7,"nodeType":"890","messageId":"891","endLine":224,"endColumn":35},{"ruleId":"888","severity":1,"message":"991","line":1,"column":17,"nodeType":"890","messageId":"891","endLine":1,"endColumn":26},{"ruleId":"888","severity":1,"message":"905","line":44,"column":5,"nodeType":"890","messageId":"891","endLine":44,"endColumn":17},{"ruleId":"888","severity":1,"message":"908","line":45,"column":5,"nodeType":"890","messageId":"891","endLine":45,"endColumn":12},{"ruleId":"888","severity":1,"message":"907","line":46,"column":5,"nodeType":"890","messageId":"891","endLine":46,"endColumn":14},{"ruleId":"888","severity":1,"message":"900","line":47,"column":5,"nodeType":"890","messageId":"891","endLine":47,"endColumn":13},{"ruleId":"888","severity":1,"message":"992","line":48,"column":5,"nodeType":"890","messageId":"891","endLine":48,"endColumn":16},{"ruleId":"888","severity":1,"message":"906","line":49,"column":5,"nodeType":"890","messageId":"891","endLine":49,"endColumn":18},{"ruleId":"888","severity":1,"message":"993","line":5,"column":3,"nodeType":"890","messageId":"891","endLine":5,"endColumn":12},{"ruleId":"888","severity":1,"message":"994","line":10,"column":3,"nodeType":"890","messageId":"891","endLine":10,"endColumn":18},{"ruleId":"888","severity":1,"message":"995","line":12,"column":3,"nodeType":"890","messageId":"891","endLine":12,"endColumn":17},{"ruleId":"888","severity":1,"message":"996","line":15,"column":3,"nodeType":"890","messageId":"891","endLine":15,"endColumn":18},{"ruleId":"888","severity":1,"message":"997","line":16,"column":3,"nodeType":"890","messageId":"891","endLine":16,"endColumn":18},{"ruleId":"888","severity":1,"message":"998","line":22,"column":24,"nodeType":"890","messageId":"891","endLine":22,"endColumn":30},{"ruleId":"888","severity":1,"message":"960","line":22,"column":32,"nodeType":"890","messageId":"891","endLine":22,"endColumn":38},{"ruleId":"888","severity":1,"message":"999","line":40,"column":3,"nodeType":"890","messageId":"891","endLine":40,"endColumn":26},{"ruleId":"888","severity":1,"message":"1000","line":41,"column":3,"nodeType":"890","messageId":"891","endLine":41,"endColumn":14},{"ruleId":"888","severity":1,"message":"1001","line":42,"column":3,"nodeType":"890","messageId":"891","endLine":42,"endColumn":24},{"ruleId":"888","severity":1,"message":"1002","line":43,"column":3,"nodeType":"890","messageId":"891","endLine":43,"endColumn":12},{"ruleId":"888","severity":1,"message":"1003","line":44,"column":3,"nodeType":"890","messageId":"891","endLine":44,"endColumn":18},{"ruleId":"888","severity":1,"message":"1004","line":45,"column":3,"nodeType":"890","messageId":"891","endLine":45,"endColumn":23},{"ruleId":"888","severity":1,"message":"1005","line":46,"column":3,"nodeType":"890","messageId":"891","endLine":46,"endColumn":17},{"ruleId":"888","severity":1,"message":"1006","line":47,"column":3,"nodeType":"890","messageId":"891","endLine":47,"endColumn":20},{"ruleId":"888","severity":1,"message":"979","line":49,"column":8,"nodeType":"890","messageId":"891","endLine":49,"endColumn":10},{"ruleId":"888","severity":1,"message":"901","line":57,"column":10,"nodeType":"890","messageId":"891","endLine":57,"endColumn":15},{"ruleId":"888","severity":1,"message":"1007","line":58,"column":10,"nodeType":"890","messageId":"891","endLine":58,"endColumn":29},{"ruleId":"888","severity":1,"message":"1008","line":99,"column":18,"nodeType":"890","messageId":"891","endLine":99,"endColumn":29},{"ruleId":"888","severity":1,"message":"1009","line":228,"column":9,"nodeType":"890","messageId":"891","endLine":228,"endColumn":21},{"ruleId":"888","severity":1,"message":"960","line":6,"column":24,"nodeType":"890","messageId":"891","endLine":6,"endColumn":30},{"ruleId":"888","severity":1,"message":"1010","line":1,"column":46,"nodeType":"890","messageId":"891","endLine":1,"endColumn":55},{"ruleId":"888","severity":1,"message":"1011","line":1,"column":57,"nodeType":"890","messageId":"891","endLine":1,"endColumn":67},{"ruleId":"888","severity":1,"message":"1012","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":32},{"ruleId":"888","severity":1,"message":"1013","line":3,"column":10,"nodeType":"890","messageId":"891","endLine":3,"endColumn":16},{"ruleId":"888","severity":1,"message":"1014","line":3,"column":18,"nodeType":"890","messageId":"891","endLine":3,"endColumn":24},{"ruleId":"888","severity":1,"message":"1015","line":3,"column":26,"nodeType":"890","messageId":"891","endLine":3,"endColumn":30},{"ruleId":"888","severity":1,"message":"1016","line":4,"column":10,"nodeType":"890","messageId":"891","endLine":4,"endColumn":16},{"ruleId":"888","severity":1,"message":"1017","line":11,"column":11,"nodeType":"890","messageId":"891","endLine":11,"endColumn":27},{"ruleId":"888","severity":1,"message":"1018","line":21,"column":12,"nodeType":"890","messageId":"891","endLine":21,"endColumn":24},{"ruleId":"888","severity":1,"message":"1019","line":55,"column":11,"nodeType":"890","messageId":"891","endLine":55,"endColumn":19},{"ruleId":"888","severity":1,"message":"1020","line":59,"column":11,"nodeType":"890","messageId":"891","endLine":59,"endColumn":20},{"ruleId":"888","severity":1,"message":"1021","line":63,"column":11,"nodeType":"890","messageId":"891","endLine":63,"endColumn":20},{"ruleId":"888","severity":1,"message":"1022","line":67,"column":11,"nodeType":"890","messageId":"891","endLine":67,"endColumn":19},{"ruleId":"888","severity":1,"message":"1023","line":76,"column":11,"nodeType":"890","messageId":"891","endLine":76,"endColumn":24},{"ruleId":"888","severity":1,"message":"1024","line":85,"column":11,"nodeType":"890","messageId":"891","endLine":85,"endColumn":27},{"ruleId":"888","severity":1,"message":"1025","line":119,"column":11,"nodeType":"890","messageId":"891","endLine":119,"endColumn":19},{"ruleId":"888","severity":1,"message":"1026","line":129,"column":11,"nodeType":"890","messageId":"891","endLine":129,"endColumn":19},{"ruleId":"888","severity":1,"message":"1027","line":133,"column":11,"nodeType":"890","messageId":"891","endLine":133,"endColumn":21},{"ruleId":"888","severity":1,"message":"1028","line":162,"column":11,"nodeType":"890","messageId":"891","endLine":162,"endColumn":22},{"ruleId":"888","severity":1,"message":"1029","line":211,"column":19,"nodeType":"890","messageId":"891","endLine":211,"endColumn":25},{"ruleId":"888","severity":1,"message":"1030","line":244,"column":11,"nodeType":"890","messageId":"891","endLine":244,"endColumn":26},{"ruleId":"888","severity":1,"message":"1031","line":250,"column":11,"nodeType":"890","messageId":"891","endLine":250,"endColumn":25},{"ruleId":"888","severity":1,"message":"1032","line":261,"column":12,"nodeType":"890","messageId":"891","endLine":261,"endColumn":23},{"ruleId":"888","severity":1,"message":"1033","line":261,"column":25,"nodeType":"890","messageId":"891","endLine":261,"endColumn":39},{"ruleId":"888","severity":1,"message":"1034","line":262,"column":12,"nodeType":"890","messageId":"891","endLine":262,"endColumn":20},{"ruleId":"888","severity":1,"message":"1035","line":262,"column":22,"nodeType":"890","messageId":"891","endLine":262,"endColumn":33},{"ruleId":"888","severity":1,"message":"1036","line":263,"column":12,"nodeType":"890","messageId":"891","endLine":263,"endColumn":19},{"ruleId":"888","severity":1,"message":"1037","line":263,"column":21,"nodeType":"890","messageId":"891","endLine":263,"endColumn":31},{"ruleId":"888","severity":1,"message":"1038","line":265,"column":12,"nodeType":"890","messageId":"891","endLine":265,"endColumn":21},{"ruleId":"888","severity":1,"message":"1039","line":265,"column":23,"nodeType":"890","messageId":"891","endLine":265,"endColumn":35},{"ruleId":"888","severity":1,"message":"1016","line":3,"column":16,"nodeType":"890","messageId":"891","endLine":3,"endColumn":22},{"ruleId":"888","severity":1,"message":"998","line":3,"column":24,"nodeType":"890","messageId":"891","endLine":3,"endColumn":30},{"ruleId":"888","severity":1,"message":"960","line":3,"column":32,"nodeType":"890","messageId":"891","endLine":3,"endColumn":38},{"ruleId":"888","severity":1,"message":"1040","line":5,"column":25,"nodeType":"890","messageId":"891","endLine":5,"endColumn":37},{"ruleId":"888","severity":1,"message":"1041","line":8,"column":3,"nodeType":"890","messageId":"891","endLine":8,"endColumn":7},{"ruleId":"888","severity":1,"message":"1042","line":11,"column":10,"nodeType":"890","messageId":"891","endLine":11,"endColumn":22},{"ruleId":"888","severity":1,"message":"898","line":20,"column":8,"nodeType":"890","messageId":"891","endLine":20,"endColumn":13},{"ruleId":"888","severity":1,"message":"1043","line":21,"column":10,"nodeType":"890","messageId":"891","endLine":21,"endColumn":20},{"ruleId":"888","severity":1,"message":"1044","line":28,"column":10,"nodeType":"890","messageId":"891","endLine":28,"endColumn":21},{"ruleId":"888","severity":1,"message":"1045","line":31,"column":10,"nodeType":"890","messageId":"891","endLine":31,"endColumn":16},{"ruleId":"888","severity":1,"message":"1046","line":35,"column":7,"nodeType":"890","messageId":"891","endLine":35,"endColumn":16},{"ruleId":"888","severity":1,"message":"1047","line":38,"column":7,"nodeType":"890","messageId":"891","endLine":38,"endColumn":20},{"ruleId":"888","severity":1,"message":"1048","line":41,"column":7,"nodeType":"890","messageId":"891","endLine":41,"endColumn":13},{"ruleId":"888","severity":1,"message":"1049","line":44,"column":7,"nodeType":"890","messageId":"891","endLine":44,"endColumn":13},{"ruleId":"888","severity":1,"message":"1050","line":49,"column":7,"nodeType":"890","messageId":"891","endLine":49,"endColumn":16},{"ruleId":"888","severity":1,"message":"1051","line":56,"column":9,"nodeType":"890","messageId":"891","endLine":56,"endColumn":16},{"ruleId":"888","severity":1,"message":"1052","line":58,"column":19,"nodeType":"890","messageId":"891","endLine":58,"endColumn":29},{"ruleId":"888","severity":1,"message":"1053","line":63,"column":9,"nodeType":"890","messageId":"891","endLine":63,"endColumn":21},{"ruleId":"888","severity":1,"message":"1054","line":132,"column":9,"nodeType":"890","messageId":"891","endLine":132,"endColumn":19},{"ruleId":"888","severity":1,"message":"1055","line":2,"column":8,"nodeType":"890","messageId":"891","endLine":2,"endColumn":19},{"ruleId":"888","severity":1,"message":"1056","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":23},{"ruleId":"888","severity":1,"message":"1057","line":19,"column":7,"nodeType":"890","messageId":"891","endLine":19,"endColumn":25},{"ruleId":"888","severity":1,"message":"1058","line":22,"column":7,"nodeType":"890","messageId":"891","endLine":22,"endColumn":12},{"ruleId":"888","severity":1,"message":"1059","line":26,"column":10,"nodeType":"890","messageId":"891","endLine":26,"endColumn":19},{"ruleId":"888","severity":1,"message":"1060","line":26,"column":21,"nodeType":"890","messageId":"891","endLine":26,"endColumn":33},{"ruleId":"888","severity":1,"message":"1061","line":34,"column":11,"nodeType":"890","messageId":"891","endLine":34,"endColumn":15},{"ruleId":"888","severity":1,"message":"1062","line":34,"column":17,"nodeType":"890","messageId":"891","endLine":34,"endColumn":26},{"ruleId":"888","severity":1,"message":"1063","line":34,"column":28,"nodeType":"890","messageId":"891","endLine":34,"endColumn":35},{"ruleId":"888","severity":1,"message":"1064","line":1,"column":28,"nodeType":"890","messageId":"891","endLine":1,"endColumn":39},{"ruleId":"888","severity":1,"message":"1065","line":14,"column":23,"nodeType":"890","messageId":"891","endLine":14,"endColumn":35},{"ruleId":"911","severity":1,"message":"1066","line":62,"column":6,"nodeType":"913","endLine":62,"endColumn":20,"suggestions":"1067"},{"ruleId":"888","severity":1,"message":"1068","line":24,"column":10,"nodeType":"890","messageId":"891","endLine":24,"endColumn":30},{"ruleId":"888","severity":1,"message":"1069","line":2,"column":10,"nodeType":"890","messageId":"891","endLine":2,"endColumn":21},{"ruleId":"888","severity":1,"message":"993","line":2,"column":23,"nodeType":"890","messageId":"891","endLine":2,"endColumn":32},{"ruleId":"888","severity":1,"message":"1070","line":2,"column":34,"nodeType":"890","messageId":"891","endLine":2,"endColumn":39},{"ruleId":"888","severity":1,"message":"1071","line":9,"column":3,"nodeType":"890","messageId":"891","endLine":9,"endColumn":13},{"ruleId":"888","severity":1,"message":"1072","line":10,"column":3,"nodeType":"890","messageId":"891","endLine":10,"endColumn":13},{"ruleId":"888","severity":1,"message":"1073","line":11,"column":3,"nodeType":"890","messageId":"891","endLine":11,"endColumn":15},{"ruleId":"888","severity":1,"message":"1074","line":13,"column":3,"nodeType":"890","messageId":"891","endLine":13,"endColumn":21},{"ruleId":"888","severity":1,"message":"1043","line":19,"column":3,"nodeType":"890","messageId":"891","endLine":19,"endColumn":13},{"ruleId":"888","severity":1,"message":"1075","line":22,"column":3,"nodeType":"890","messageId":"891","endLine":22,"endColumn":14},{"ruleId":"888","severity":1,"message":"1076","line":26,"column":10,"nodeType":"890","messageId":"891","endLine":26,"endColumn":22},{"ruleId":"888","severity":1,"message":"1077","line":28,"column":3,"nodeType":"890","messageId":"891","endLine":28,"endColumn":13},{"ruleId":"888","severity":1,"message":"1078","line":29,"column":3,"nodeType":"890","messageId":"891","endLine":29,"endColumn":11},{"ruleId":"888","severity":1,"message":"1079","line":30,"column":3,"nodeType":"890","messageId":"891","endLine":30,"endColumn":13},{"ruleId":"888","severity":1,"message":"994","line":31,"column":3,"nodeType":"890","messageId":"891","endLine":31,"endColumn":18},{"ruleId":"888","severity":1,"message":"1080","line":32,"column":3,"nodeType":"890","messageId":"891","endLine":32,"endColumn":14},{"ruleId":"888","severity":1,"message":"995","line":33,"column":3,"nodeType":"890","messageId":"891","endLine":33,"endColumn":17},{"ruleId":"888","severity":1,"message":"1081","line":34,"column":3,"nodeType":"890","messageId":"891","endLine":34,"endColumn":14},{"ruleId":"888","severity":1,"message":"1082","line":36,"column":10,"nodeType":"890","messageId":"891","endLine":36,"endColumn":24},{"ruleId":"888","severity":1,"message":"1068","line":40,"column":10,"nodeType":"890","messageId":"891","endLine":40,"endColumn":30},{"ruleId":"888","severity":1,"message":"979","line":45,"column":8,"nodeType":"890","messageId":"891","endLine":45,"endColumn":10},{"ruleId":"888","severity":1,"message":"1083","line":244,"column":5,"nodeType":"890","messageId":"891","endLine":244,"endColumn":17},{"ruleId":"1084","severity":1,"message":"1085","line":246,"column":1,"nodeType":"1086","messageId":"1087","endLine":248,"endColumn":2},{"ruleId":"1084","severity":1,"message":"1085","line":250,"column":1,"nodeType":"1086","messageId":"1087","endLine":252,"endColumn":2},{"ruleId":"888","severity":1,"message":"1088","line":4,"column":10,"nodeType":"890","messageId":"891","endLine":4,"endColumn":18},{"ruleId":"888","severity":1,"message":"978","line":4,"column":20,"nodeType":"890","messageId":"891","endLine":4,"endColumn":24},{"ruleId":"888","severity":1,"message":"1089","line":4,"column":34,"nodeType":"890","messageId":"891","endLine":4,"endColumn":38},{"ruleId":"888","severity":1,"message":"1090","line":31,"column":10,"nodeType":"890","messageId":"891","endLine":31,"endColumn":22},{"ruleId":"888","severity":1,"message":"1091","line":33,"column":9,"nodeType":"890","messageId":"891","endLine":33,"endColumn":22},{"ruleId":"888","severity":1,"message":"1092","line":55,"column":7,"nodeType":"890","messageId":"891","endLine":55,"endColumn":26},{"ruleId":"888","severity":1,"message":"961","line":17,"column":8,"nodeType":"890","messageId":"891","endLine":17,"endColumn":16},{"ruleId":"888","severity":1,"message":"1056","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":23},{"ruleId":"888","severity":1,"message":"1093","line":48,"column":7,"nodeType":"890","messageId":"891","endLine":48,"endColumn":12},{"ruleId":"888","severity":1,"message":"905","line":82,"column":5,"nodeType":"890","messageId":"891","endLine":82,"endColumn":17},{"ruleId":"888","severity":1,"message":"908","line":83,"column":5,"nodeType":"890","messageId":"891","endLine":83,"endColumn":12},{"ruleId":"888","severity":1,"message":"900","line":85,"column":5,"nodeType":"890","messageId":"891","endLine":85,"endColumn":13},{"ruleId":"888","severity":1,"message":"906","line":87,"column":5,"nodeType":"890","messageId":"891","endLine":87,"endColumn":18},{"ruleId":"911","severity":1,"message":"964","line":157,"column":6,"nodeType":"913","endLine":157,"endColumn":17,"suggestions":"1094"},{"ruleId":"911","severity":1,"message":"964","line":166,"column":6,"nodeType":"913","endLine":166,"endColumn":21,"suggestions":"1095"},{"ruleId":"911","severity":1,"message":"1096","line":188,"column":6,"nodeType":"913","endLine":188,"endColumn":19,"suggestions":"1097"},{"ruleId":"888","severity":1,"message":"1098","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":12},{"ruleId":"888","severity":1,"message":"1052","line":35,"column":19,"nodeType":"890","messageId":"891","endLine":35,"endColumn":29},{"ruleId":"1099","severity":1,"message":"1100","line":73,"column":1,"nodeType":"1101","messageId":"1102","endLine":92,"endColumn":2},{"ruleId":"888","severity":1,"message":"1103","line":4,"column":3,"nodeType":"890","messageId":"891","endLine":4,"endColumn":14},{"ruleId":"888","severity":1,"message":"1104","line":5,"column":3,"nodeType":"890","messageId":"891","endLine":5,"endColumn":16},{"ruleId":"888","severity":1,"message":"1041","line":6,"column":3,"nodeType":"890","messageId":"891","endLine":6,"endColumn":7},{"ruleId":"888","severity":1,"message":"1105","line":7,"column":3,"nodeType":"890","messageId":"891","endLine":7,"endColumn":9},{"ruleId":"888","severity":1,"message":"1069","line":10,"column":10,"nodeType":"890","messageId":"891","endLine":10,"endColumn":21},{"ruleId":"888","severity":1,"message":"993","line":10,"column":23,"nodeType":"890","messageId":"891","endLine":10,"endColumn":32},{"ruleId":"888","severity":1,"message":"1070","line":10,"column":34,"nodeType":"890","messageId":"891","endLine":10,"endColumn":39},{"ruleId":"888","severity":1,"message":"1106","line":14,"column":3,"nodeType":"890","messageId":"891","endLine":14,"endColumn":18},{"ruleId":"888","severity":1,"message":"1107","line":15,"column":3,"nodeType":"890","messageId":"891","endLine":15,"endColumn":15},{"ruleId":"888","severity":1,"message":"1071","line":17,"column":3,"nodeType":"890","messageId":"891","endLine":17,"endColumn":13},{"ruleId":"888","severity":1,"message":"1073","line":19,"column":3,"nodeType":"890","messageId":"891","endLine":19,"endColumn":15},{"ruleId":"888","severity":1,"message":"1108","line":20,"column":3,"nodeType":"890","messageId":"891","endLine":20,"endColumn":16},{"ruleId":"888","severity":1,"message":"1074","line":21,"column":3,"nodeType":"890","messageId":"891","endLine":21,"endColumn":21},{"ruleId":"888","severity":1,"message":"1109","line":22,"column":3,"nodeType":"890","messageId":"891","endLine":22,"endColumn":14},{"ruleId":"888","severity":1,"message":"1110","line":29,"column":3,"nodeType":"890","messageId":"891","endLine":29,"endColumn":17},{"ruleId":"888","severity":1,"message":"1075","line":30,"column":3,"nodeType":"890","messageId":"891","endLine":30,"endColumn":14},{"ruleId":"888","severity":1,"message":"1065","line":32,"column":10,"nodeType":"890","messageId":"891","endLine":32,"endColumn":22},{"ruleId":"888","severity":1,"message":"1076","line":33,"column":10,"nodeType":"890","messageId":"891","endLine":33,"endColumn":22},{"ruleId":"888","severity":1,"message":"1077","line":34,"column":10,"nodeType":"890","messageId":"891","endLine":34,"endColumn":20},{"ruleId":"888","severity":1,"message":"1082","line":35,"column":10,"nodeType":"890","messageId":"891","endLine":35,"endColumn":24},{"ruleId":"888","severity":1,"message":"1111","line":36,"column":8,"nodeType":"890","messageId":"891","endLine":36,"endColumn":13},{"ruleId":"888","severity":1,"message":"1112","line":40,"column":10,"nodeType":"890","messageId":"891","endLine":40,"endColumn":26},{"ruleId":"888","severity":1,"message":"1113","line":41,"column":8,"nodeType":"890","messageId":"891","endLine":41,"endColumn":19},{"ruleId":"888","severity":1,"message":"1114","line":42,"column":8,"nodeType":"890","messageId":"891","endLine":42,"endColumn":21},{"ruleId":"888","severity":1,"message":"979","line":43,"column":8,"nodeType":"890","messageId":"891","endLine":43,"endColumn":10},{"ruleId":"888","severity":1,"message":"1115","line":60,"column":7,"nodeType":"890","messageId":"891","endLine":60,"endColumn":21},{"ruleId":"888","severity":1,"message":"1116","line":71,"column":7,"nodeType":"890","messageId":"891","endLine":71,"endColumn":17},{"ruleId":"888","severity":1,"message":"1117","line":129,"column":7,"nodeType":"890","messageId":"891","endLine":129,"endColumn":16},{"ruleId":"888","severity":1,"message":"1118","line":227,"column":7,"nodeType":"890","messageId":"891","endLine":227,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1120","line":263,"column":17,"nodeType":"1121","messageId":"1122","endLine":263,"endColumn":72},{"ruleId":"888","severity":1,"message":"1123","line":15,"column":10,"nodeType":"890","messageId":"891","endLine":15,"endColumn":21},{"ruleId":"888","severity":1,"message":"960","line":6,"column":24,"nodeType":"890","messageId":"891","endLine":6,"endColumn":30},{"ruleId":"888","severity":1,"message":"961","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":16},{"ruleId":"888","severity":1,"message":"1056","line":19,"column":8,"nodeType":"890","messageId":"891","endLine":19,"endColumn":23},{"ruleId":"911","severity":1,"message":"964","line":55,"column":6,"nodeType":"913","endLine":55,"endColumn":8,"suggestions":"1124"},{"ruleId":"951","severity":1,"message":"952","line":62,"column":33,"nodeType":"953","messageId":"954","endLine":62,"endColumn":35},{"ruleId":"888","severity":1,"message":"1125","line":81,"column":45,"nodeType":"890","messageId":"891","endLine":81,"endColumn":53},{"ruleId":"888","severity":1,"message":"1126","line":111,"column":11,"nodeType":"890","messageId":"891","endLine":111,"endColumn":18},{"ruleId":"888","severity":1,"message":"999","line":5,"column":3,"nodeType":"890","messageId":"891","endLine":5,"endColumn":26},{"ruleId":"888","severity":1,"message":"1000","line":6,"column":3,"nodeType":"890","messageId":"891","endLine":6,"endColumn":14},{"ruleId":"888","severity":1,"message":"1001","line":7,"column":3,"nodeType":"890","messageId":"891","endLine":7,"endColumn":24},{"ruleId":"888","severity":1,"message":"1002","line":8,"column":3,"nodeType":"890","messageId":"891","endLine":8,"endColumn":12},{"ruleId":"888","severity":1,"message":"1003","line":9,"column":3,"nodeType":"890","messageId":"891","endLine":9,"endColumn":18},{"ruleId":"888","severity":1,"message":"1005","line":12,"column":3,"nodeType":"890","messageId":"891","endLine":12,"endColumn":17},{"ruleId":"888","severity":1,"message":"1088","line":16,"column":18,"nodeType":"890","messageId":"891","endLine":16,"endColumn":26},{"ruleId":"888","severity":1,"message":"1111","line":17,"column":8,"nodeType":"890","messageId":"891","endLine":17,"endColumn":13},{"ruleId":"888","severity":1,"message":"1127","line":18,"column":8,"nodeType":"890","messageId":"891","endLine":18,"endColumn":13},{"ruleId":"888","severity":1,"message":"1015","line":19,"column":10,"nodeType":"890","messageId":"891","endLine":19,"endColumn":14},{"ruleId":"888","severity":1,"message":"1014","line":19,"column":28,"nodeType":"890","messageId":"891","endLine":19,"endColumn":34},{"ruleId":"888","severity":1,"message":"1071","line":8,"column":3,"nodeType":"890","messageId":"891","endLine":8,"endColumn":13},{"ruleId":"888","severity":1,"message":"1072","line":9,"column":3,"nodeType":"890","messageId":"891","endLine":9,"endColumn":13},{"ruleId":"884","replacedBy":"1128"},{"ruleId":"886","replacedBy":"1129"},{"ruleId":"888","severity":1,"message":"1130","line":1,"column":51,"nodeType":"890","messageId":"891","endLine":1,"endColumn":58},{"ruleId":"888","severity":1,"message":"998","line":3,"column":8,"nodeType":"890","messageId":"891","endLine":3,"endColumn":14},{"ruleId":"888","severity":1,"message":"1055","line":5,"column":8,"nodeType":"890","messageId":"891","endLine":5,"endColumn":19},{"ruleId":"888","severity":1,"message":"1056","line":12,"column":8,"nodeType":"890","messageId":"891","endLine":12,"endColumn":23},{"ruleId":"888","severity":1,"message":"1131","line":44,"column":9,"nodeType":"890","messageId":"891","endLine":44,"endColumn":27},{"ruleId":"888","severity":1,"message":"1132","line":54,"column":10,"nodeType":"890","messageId":"891","endLine":54,"endColumn":17},{"ruleId":"888","severity":1,"message":"1052","line":54,"column":19,"nodeType":"890","messageId":"891","endLine":54,"endColumn":29},{"ruleId":"888","severity":1,"message":"1133","line":55,"column":42,"nodeType":"890","messageId":"891","endLine":55,"endColumn":75},{"ruleId":"888","severity":1,"message":"1134","line":60,"column":14,"nodeType":"890","messageId":"891","endLine":60,"endColumn":26},{"ruleId":"888","severity":1,"message":"1135","line":61,"column":16,"nodeType":"890","messageId":"891","endLine":61,"endColumn":30},{"ruleId":"888","severity":1,"message":"1136","line":66,"column":14,"nodeType":"890","messageId":"891","endLine":66,"endColumn":30},{"ruleId":"888","severity":1,"message":"1137","line":67,"column":16,"nodeType":"890","messageId":"891","endLine":67,"endColumn":34},{"ruleId":"911","severity":1,"message":"1138","line":86,"column":6,"nodeType":"913","endLine":96,"endColumn":4,"suggestions":"1139"},{"ruleId":"888","severity":1,"message":"1140","line":121,"column":7,"nodeType":"890","messageId":"891","endLine":121,"endColumn":31},{"ruleId":"951","severity":1,"message":"952","line":140,"column":47,"nodeType":"953","messageId":"954","endLine":140,"endColumn":49},{"ruleId":"951","severity":1,"message":"952","line":240,"column":54,"nodeType":"953","messageId":"954","endLine":240,"endColumn":56},{"ruleId":"951","severity":1,"message":"952","line":307,"column":50,"nodeType":"953","messageId":"954","endLine":307,"endColumn":52},{"ruleId":"888","severity":1,"message":"1141","line":388,"column":11,"nodeType":"890","messageId":"891","endLine":388,"endColumn":24},{"ruleId":"951","severity":1,"message":"952","line":388,"column":56,"nodeType":"953","messageId":"954","endLine":388,"endColumn":58},{"ruleId":"911","severity":1,"message":"1138","line":405,"column":6,"nodeType":"913","endLine":405,"endColumn":67,"suggestions":"1142"},{"ruleId":"911","severity":1,"message":"1143","line":422,"column":6,"nodeType":"913","endLine":422,"endColumn":30,"suggestions":"1144"},{"ruleId":"888","severity":1,"message":"998","line":2,"column":8,"nodeType":"890","messageId":"891","endLine":2,"endColumn":14},{"ruleId":"888","severity":1,"message":"1145","line":7,"column":10,"nodeType":"890","messageId":"891","endLine":7,"endColumn":17},{"ruleId":"888","severity":1,"message":"1146","line":9,"column":5,"nodeType":"890","messageId":"891","endLine":9,"endColumn":16},{"ruleId":"888","severity":1,"message":"1147","line":10,"column":5,"nodeType":"890","messageId":"891","endLine":10,"endColumn":19},{"ruleId":"888","severity":1,"message":"1148","line":11,"column":5,"nodeType":"890","messageId":"891","endLine":11,"endColumn":19},{"ruleId":"888","severity":1,"message":"1149","line":12,"column":5,"nodeType":"890","messageId":"891","endLine":12,"endColumn":15},{"ruleId":"888","severity":1,"message":"1150","line":13,"column":5,"nodeType":"890","messageId":"891","endLine":13,"endColumn":20},{"ruleId":"888","severity":1,"message":"1151","line":14,"column":5,"nodeType":"890","messageId":"891","endLine":14,"endColumn":16},{"ruleId":"888","severity":1,"message":"1152","line":15,"column":5,"nodeType":"890","messageId":"891","endLine":15,"endColumn":20},{"ruleId":"888","severity":1,"message":"1153","line":16,"column":5,"nodeType":"890","messageId":"891","endLine":16,"endColumn":23},{"ruleId":"888","severity":1,"message":"1154","line":17,"column":5,"nodeType":"890","messageId":"891","endLine":17,"endColumn":21},{"ruleId":"888","severity":1,"message":"1111","line":20,"column":8,"nodeType":"890","messageId":"891","endLine":20,"endColumn":13},{"ruleId":"888","severity":1,"message":"1127","line":21,"column":8,"nodeType":"890","messageId":"891","endLine":21,"endColumn":13},{"ruleId":"888","severity":1,"message":"1155","line":26,"column":5,"nodeType":"890","messageId":"891","endLine":26,"endColumn":12},{"ruleId":"888","severity":1,"message":"979","line":30,"column":8,"nodeType":"890","messageId":"891","endLine":30,"endColumn":10},{"ruleId":"888","severity":1,"message":"1156","line":31,"column":10,"nodeType":"890","messageId":"891","endLine":31,"endColumn":19},{"ruleId":"888","severity":1,"message":"1157","line":57,"column":17,"nodeType":"890","messageId":"891","endLine":57,"endColumn":23},{"ruleId":"888","severity":1,"message":"1158","line":59,"column":18,"nodeType":"890","messageId":"891","endLine":59,"endColumn":25},{"ruleId":"911","severity":1,"message":"1159","line":73,"column":8,"nodeType":"913","endLine":81,"endColumn":6,"suggestions":"1160"},{"ruleId":"911","severity":1,"message":"1161","line":117,"column":8,"nodeType":"913","endLine":117,"endColumn":33,"suggestions":"1162"},{"ruleId":"911","severity":1,"message":"1163","line":164,"column":8,"nodeType":"913","endLine":164,"endColumn":10,"suggestions":"1164"},{"ruleId":"911","severity":1,"message":"1165","line":218,"column":9,"nodeType":"913","endLine":228,"endColumn":22,"suggestions":"1166"},{"ruleId":"888","severity":1,"message":"1167","line":231,"column":9,"nodeType":"890","messageId":"891","endLine":231,"endColumn":23},{"ruleId":"911","severity":1,"message":"1168","line":292,"column":9,"nodeType":"913","endLine":292,"endColumn":66,"suggestions":"1169"},{"ruleId":"911","severity":1,"message":"1170","line":348,"column":8,"nodeType":"913","endLine":348,"endColumn":65,"suggestions":"1171"},{"ruleId":"888","severity":1,"message":"1172","line":382,"column":13,"nodeType":"890","messageId":"891","endLine":382,"endColumn":36},{"ruleId":"1173","severity":1,"message":"1174","line":430,"column":101,"nodeType":"1175","messageId":"1176","endLine":430,"endColumn":102},{"ruleId":"888","severity":1,"message":"1177","line":435,"column":13,"nodeType":"890","messageId":"891","endLine":435,"endColumn":22},{"ruleId":"888","severity":1,"message":"1178","line":494,"column":11,"nodeType":"890","messageId":"891","endLine":494,"endColumn":25},{"ruleId":"888","severity":1,"message":"991","line":1,"column":10,"nodeType":"890","messageId":"891","endLine":1,"endColumn":19},{"ruleId":"888","severity":1,"message":"940","line":1,"column":31,"nodeType":"890","messageId":"891","endLine":1,"endColumn":46},{"ruleId":"888","severity":1,"message":"1111","line":3,"column":8,"nodeType":"890","messageId":"891","endLine":3,"endColumn":13},{"ruleId":"888","severity":1,"message":"941","line":5,"column":8,"nodeType":"890","messageId":"891","endLine":5,"endColumn":20},{"ruleId":"888","severity":1,"message":"1179","line":6,"column":8,"nodeType":"890","messageId":"891","endLine":6,"endColumn":23},{"ruleId":"888","severity":1,"message":"1180","line":7,"column":8,"nodeType":"890","messageId":"891","endLine":7,"endColumn":21},{"ruleId":"888","severity":1,"message":"942","line":8,"column":8,"nodeType":"890","messageId":"891","endLine":8,"endColumn":18},{"ruleId":"888","severity":1,"message":"1016","line":9,"column":10,"nodeType":"890","messageId":"891","endLine":9,"endColumn":16},{"ruleId":"888","severity":1,"message":"1089","line":9,"column":18,"nodeType":"890","messageId":"891","endLine":9,"endColumn":22},{"ruleId":"888","severity":1,"message":"963","line":10,"column":8,"nodeType":"890","messageId":"891","endLine":10,"endColumn":13},{"ruleId":"888","severity":1,"message":"977","line":11,"column":8,"nodeType":"890","messageId":"891","endLine":11,"endColumn":17},{"ruleId":"888","severity":1,"message":"1181","line":64,"column":28,"nodeType":"890","messageId":"891","endLine":64,"endColumn":43},{"ruleId":"888","severity":1,"message":"907","line":64,"column":45,"nodeType":"890","messageId":"891","endLine":64,"endColumn":54},{"ruleId":"888","severity":1,"message":"943","line":66,"column":21,"nodeType":"890","messageId":"891","endLine":66,"endColumn":33},{"ruleId":"888","severity":1,"message":"944","line":67,"column":19,"nodeType":"890","messageId":"891","endLine":67,"endColumn":29},{"ruleId":"888","severity":1,"message":"1182","line":68,"column":20,"nodeType":"890","messageId":"891","endLine":68,"endColumn":31},{"ruleId":"888","severity":1,"message":"945","line":69,"column":16,"nodeType":"890","messageId":"891","endLine":69,"endColumn":23},{"ruleId":"888","severity":1,"message":"946","line":70,"column":16,"nodeType":"890","messageId":"891","endLine":70,"endColumn":23},{"ruleId":"888","severity":1,"message":"947","line":71,"column":20,"nodeType":"890","messageId":"891","endLine":71,"endColumn":31},{"ruleId":"888","severity":1,"message":"948","line":72,"column":21,"nodeType":"890","messageId":"891","endLine":72,"endColumn":33},{"ruleId":"888","severity":1,"message":"1183","line":73,"column":17,"nodeType":"890","messageId":"891","endLine":73,"endColumn":25},{"ruleId":"888","severity":1,"message":"1184","line":74,"column":20,"nodeType":"890","messageId":"891","endLine":74,"endColumn":31},{"ruleId":"888","severity":1,"message":"1185","line":75,"column":28,"nodeType":"890","messageId":"891","endLine":75,"endColumn":47},{"ruleId":"888","severity":1,"message":"1186","line":76,"column":14,"nodeType":"890","messageId":"891","endLine":76,"endColumn":19},{"ruleId":"888","severity":1,"message":"1187","line":78,"column":19,"nodeType":"890","messageId":"891","endLine":78,"endColumn":29},{"ruleId":"884","replacedBy":"1188"},{"ruleId":"886","replacedBy":"1189"},{"ruleId":"895","severity":1,"message":"1190","line":4,"column":1,"nodeType":"897","endLine":24,"endColumn":3},"no-native-reassign",["1191"],"no-negated-in-lhs",["1192"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'routes' is defined but never used.","'Breadcrumb' is assigned a value but never used.","'items' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Alert' is defined but never used.","'CustomClearanceData' is defined but never used.","'cartData' is assigned a value but never used.","'alert' is assigned a value but never used.","'customClearanceDocument' is assigned a value but never used.","'properties' is assigned a value but never used.","'orderEndpoints' is defined but never used.","'loggedInUser' is assigned a value but never used.","'cartDataError' is assigned a value but never used.","'orderData' is assigned a value but never used.","'orderId' is assigned a value but never used.","'isCartOpen' is assigned a value but never used.","'setCities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1193"],"'combineReducers' is defined but never used.","'getUserProfile' is assigned a value but never used.","'userRole' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserRole', 'history', and 'loggedInUser'. Either include them or remove the dependency array.",["1194"],["1195"],"'CreditCard' is defined but never used.","'getOrderStatus' is assigned a value but never used.","'viewAddress' is assigned a value but never used.",["1191"],["1192"],"'useState' is defined but never used.","'Counter' is defined but never used.","'styled' is defined but never used.","'orderDataError' is assigned a value but never used.","'currentOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loggedInUser' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1196"],["1197"],["1198"],"React Hook useEffect has a missing dependency: 'orderData'. Either include it or remove the dependency array.",["1199"],"The 'deleteAlert' function makes the dependencies of useEffect Hook (at line 83) change on every render. To fix this, wrap the definition of 'deleteAlert' in its own useCallback() Hook.","VariableDeclarator",["1200"],"'useLayoutEffect' is defined but never used.","'ShoppingCart' is defined but never used.","'currencies' is defined but never used.","'setContainer' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setType' is assigned a value but never used.","'setSize' is assigned a value but never used.","'setTypeSize' is assigned a value but never used.","'setCondition' is assigned a value but never used.","'quantities' is assigned a value but never used.","'price' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'ex', 'forceUpdate', and 'product'. Either include them or remove the dependency array. You can also do a functional update 'setEx(e => ...)' if you only need 'ex' in the 'setEx' call.",["1201"],"'currencySymbol' is assigned a value but never used.","'useRef' is defined but never used.","'useMountEffect' is defined but never used.","'Loader' is defined but never used.","'useQuery' is defined but never used.","'containerEndpoints' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1202"],["1203"],"'isNumber' is defined but never used.","'containerQuantity' is assigned a value but never used.","'document' is assigned a value but never used.","'Notification' is assigned a value but never used.","'CloseWrapperCN' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserRole', 'history', 'loggedIn', and 'loggedInUser.uid'. Either include them or remove the dependency array.",["1204"],"React Hook useEffect has missing dependencies: 'getUserProfile' and 'loggedInUser'. Either include them or remove the dependency array.",["1205"],"'Number' is assigned a value but never used.","'PropTypes' is defined but never used.","'Card' is defined but never used.","'tw' is defined but never used.","'onChange' is assigned a value but never used.","'setIsCartOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIsVignetteShown'. Either include it or remove the dependency array.",["1206"],"The 'getProductOriginQuantity' function makes the dependencies of useEffect Hook (at line 155) change on every render. To fix this, wrap the definition of 'getProductOriginQuantity' in its own useCallback() Hook.",["1207"],"React Hook useEffect has missing dependencies: 'productId' and 'setIsVignetteShown'. Either include them or remove the dependency array.",["1208"],"'isCountError' is assigned a value but never used.","'isCountLoading' is assigned a value but never used.","'deleteContainersinStockProps' is assigned a value but never used.","'useEffect' is defined but never used.","'productData' is assigned a value but never used.","'kaReducer' is defined but never used.","'closeRowEditors' is defined but never used.","'saveRowEditors' is defined but never used.","'updateCellValue' is defined but never used.","'changeCellValue' is defined but never used.","'Select' is defined but never used.","'deselectAllFilteredRows' is defined but never used.","'deselectRow' is defined but never used.","'selectAllFilteredRows' is defined but never used.","'selectRow' is defined but never used.","'selectRowsRange' is defined but never used.","'updateFilterRowValue' is defined but never used.","'openRowEditors' is defined but never used.","'updateEditorValue' is defined but never used.","'confirmedContainers' is assigned a value but never used.","'getBookings' is defined but never used.","'handleStatus' is assigned a value but never used.","'createRef' is defined but never used.","'useContext' is defined but never used.","'CustomClearanceContext' is defined but never used.","'Upload' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'Button' is defined but never used.","'fileStatusBarRef' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'dragOver' is assigned a value but never used.","'dragEnter' is assigned a value but never used.","'dragLeave' is assigned a value but never used.","'fileDrop' is assigned a value but never used.","'filesSelected' is assigned a value but never used.","'fileInputClicked' is assigned a value but never used.","'fileSize' is assigned a value but never used.","'fileType' is assigned a value but never used.","'removeFile' is assigned a value but never used.","'uploadFiles' is assigned a value but never used.","'config' is assigned a value but never used.","'onChangeHandler' is assigned a value but never used.","'onClickHandler' is assigned a value but never used.","'currentFile' is assigned a value but never used.","'setCurrentFile' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'fileInfos' is assigned a value but never used.","'setFileInfos' is assigned a value but never used.","'DownloadIcon' is defined but never used.","'Line' is defined but never used.","'tableReducer' is defined but never used.","'ActionType' is defined but never used.","'flattenData' is defined but never used.","'mutate' is defined but never used.","'SearchBar' is assigned a value but never used.","'SearchWrapper' is assigned a value but never used.","'Search' is assigned a value but never used.","'Circle' is assigned a value but never used.","'Rectangle' is assigned a value but never used.","'history' is assigned a value but never used.","'setFilters' is assigned a value but never used.","'selectedData' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'MultiSelect' is defined but never used.","'useQueryBuilder' is defined but never used.","'MultiSelectWrapper' is assigned a value but never used.","'Label' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'data' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'useCallback' is defined but never used.","'kaPropsUtils' is defined but never used.","React Hook useEffect has missing dependencies: 'column.key', 'dispatch', and 'rowKeyValue'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1209"],"'CONTAINERS_PAGE_SIZE' is defined but never used.","'ITableProps' is defined but never used.","'Table' is defined but never used.","'SaveButton' is defined but never used.","'EditButton' is defined but never used.","'CustomEditor' is defined but never used.","'CustomNumberEditor' is defined but never used.","'EditingMode' is defined but never used.","'DispatchFunc' is defined but never used.","'openEditor' is defined but never used.","'loadData' is defined but never used.","'updateData' is defined but never used.","'hideLoading' is defined but never used.","'showLoading' is defined but never used.","'ICellTextProps' is defined but never used.","'TotalAmounts' is assigned a value but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'Checkbox' is defined but never used.","'Text' is defined but never used.","'checkedCount' is assigned a value but never used.","'handleChecked' is assigned a value but never used.","'noDocumentsUploaded' is assigned a value but never used.","'Tbody' is assigned a value but never used.",["1210"],["1211"],"React Hook useEffect has missing dependencies: 'containersData' and 'orderData'. Either include them or remove the dependency array. You can also do a functional update 'setContainersData(c => ...)' if you only need 'containersData' in the 'setContainersData' call.",["1212"],"'data' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'HeaderTitle' is defined but never used.","'HeaderWrapper' is defined but never used.","'Number' is defined but never used.","'SelectionHeader' is defined but never used.","'SelectEditor' is defined but never used.","'BookingButton' is defined but never used.","'RangeEditor' is defined but never used.","'PagingPosition' is defined but never used.","'Modal' is defined but never used.","'BuyerProfileIcon' is defined but never used.","'ArrowUpIcon' is defined but never used.","'ArrowDownIcon' is defined but never used.","'DownloadButton' is assigned a value but never used.","'CustomCell' is assigned a value but never used.","'dataArray' is assigned a value but never used.","'CustomCellStyle' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'kaDateUtils' is defined but never used.",["1213"],"'flatDeep' is defined but never used.","'newData' is assigned a value but never used.","'Popup' is defined but never used.",["1191"],["1192"],"'useMemo' is defined but never used.","'animatedComponents' is assigned a value but never used.","'filters' is assigned a value but never used.","'setArrayOfDepotsPerCountryUpdated' is assigned a value but never used.","'countryError' is assigned a value but never used.","'countryLoading' is assigned a value but never used.","'savedDepotsError' is assigned a value but never used.","'savedDepotsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selected1'. Either include it or remove the dependency array.",["1214"],"'savedDepotsCountriesList' is assigned a value but never used.","'depotSplitObj' is assigned a value but never used.",["1215"],"React Hook useCallback has missing dependencies: 'history' and 'props.location.state.agentUid'. Either include them or remove the dependency array.",["1216"],"'connect' is defined but never used.","'connectUser' is defined but never used.","'disconnectUser' is defined but never used.","'getUserProfile' is defined but never used.","'getOrderID' is defined but never used.","'getOrderDetails' is defined but never used.","'getOrderSum' is defined but never used.","'getProductsList' is defined but never used.","'updateOrderDetails' is defined but never used.","'getOrderCurrency' is defined but never used.","'AddSign' is defined but never used.","'findIndex' is defined but never used.","'setArr' is assigned a value but never used.","'setWord' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'options'. Either include them or remove the dependency array.",["1217"],"React Hook useCallback has missing dependencies: 'selected1' and 'setSelected1'. Either include them or remove the dependency array. If 'setSelected1' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1218"],"React Hook useCallback has missing dependencies: 'savedAssignedDepots', 'selected', 'setSavedAssignedDepots', and 'setSelected'. Either include them or remove the dependency array. If 'setSavedAssignedDepots' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1219"],"React Hook useCallback has missing dependencies: 'arr' and 'savedDepots'. Either include them or remove the dependency array.",["1220"],"'deleteRowProps' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'handleClickEditRow'. Either include it or remove the dependency array.",["1221"],"React Hook useEffect has missing dependencies: 'arr', 'count', 'data', 'savedDepots', 'setData', and 'setSelected1'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1222"],"'savedAssignedDepotsList' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'newValues' is assigned a value but never used.","'changeSelected' is assigned a value but never used.","'UploadDocuments' is defined but never used.","'ViewDocuments' is defined but never used.","'getProductsList' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setCurrency' is assigned a value but never used.","'setOrderFullDetails' is assigned a value but never used.","'setEx' is assigned a value but never used.","'setProduct' is assigned a value but never used.",["1191"],["1192"],"Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1225","fix":"1227"},{"desc":"1228","fix":"1229"},{"desc":"1230","fix":"1231"},{"desc":"1230","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1235","fix":"1236"},{"desc":"1237","fix":"1238"},{"desc":"1230","fix":"1239"},{"desc":"1228","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1245","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1255","fix":"1256"},{"desc":"1257","fix":"1258"},{"desc":"1259","fix":"1260"},{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1265","fix":"1266"},{"desc":"1267","fix":"1268"},{"desc":"1269","fix":"1270"},{"desc":"1271","fix":"1272"},{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1277","fix":"1278"},"Update the dependencies array to be: [filterQuery, history]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [getUserRole, history, loggedInUser]",{"range":"1281","text":"1282"},{"range":"1283","text":"1282"},"Update the dependencies array to be: [loggedInUser, orderId, props]",{"range":"1284","text":"1285"},"Update the dependencies array to be: [loggedInUser, props]",{"range":"1286","text":"1287"},{"range":"1288","text":"1287"},"Update the dependencies array to be: [orderData, productData]",{"range":"1289","text":"1290"},"Wrap the definition of 'deleteAlert' in its own useCallback() Hook.",{"range":"1291","text":"1292"},"Update the dependencies array to be: [getProductsList, bookingOrder, productData, forceUpdate, product, ex]",{"range":"1293","text":"1294"},{"range":"1295","text":"1287"},{"range":"1296","text":"1285"},"Update the dependencies array to be: [getUserRole, history, loggedIn, loggedInUser.uid, userRole]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [getUserProfile, loggedInUser]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [orderDataError, history, setIsVignetteShown]",{"range":"1301","text":"1302"},"Wrap the definition of 'getProductOriginQuantity' in its own useCallback() Hook.",{"range":"1303","text":"1304"},"Update the dependencies array to be: [orderData, addToCart, containerQuantity, productId, setIsVignetteShown]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [column.key, defaultValue, dispatch, rowKeyValue]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [isChecked, props]",{"range":"1309","text":"1310"},"Update the dependencies array to be: [props, props.orderId]",{"range":"1311","text":"1312"},"Update the dependencies array to be: [containersData, orderData, productData]",{"range":"1313","text":"1314"},"Update the dependencies array to be: [props]",{"range":"1315","text":"1316"},"Update the dependencies array to be: [savedDepots, savedAssignedDepots, selected, countries, count, options, gridData, countriesNames, arrayOfDepotsPerCountryUpdated, selected1]",{"range":"1317","text":"1318"},"Update the dependencies array to be: [savedDepots, countriesNames, arrayOfDepotsPerCountryUpdated, selected1]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [selected1, props.location.state.agentUid, history]",{"range":"1321","text":"1322"},"Update the dependencies array to be: [selected, word, savedAssignedDepots, savedDepots, data, country, count, selected1, options, arr]",{"range":"1323","text":"1324"},"Update the dependencies array to be: [selected, selected1, setSelected1]",{"range":"1325","text":"1326"},"Update the dependencies array to be: [savedAssignedDepots, selected, setSavedAssignedDepots, setSelected]",{"range":"1327","text":"1328"},"Update the dependencies array to be: [data, setData, arr, country, savedDepots]",{"range":"1329","text":"1330"},"Update the dependencies array to be: [handleClickEditRow, unAssignDepotsToAgent]",{"range":"1331","text":"1332"},"Update the dependencies array to be: [selected, word, savedAssignedDepots, country, selected1, data, savedDepots, arr, count, setData, setSelected1]",{"range":"1333","text":"1334"},[5420,5433],"[filterQuery, history]",[1253,1255],"[getUserRole, history, loggedInUser]",[947,949],[1893,1902],"[loggedInUser, orderId, props]",[2000,2002],"[loggedInUser, props]",[2216,2218],[3904,3917],"[orderData, productData]",[1365,1597],"useCallback(() => {\r\n    setShow(false);\r\n    if (setAlert.setAlertConfirm) setAlert.setAlertConfirm(false); else setAlert(false);\r\n    // if (setAlertConfirm) setAlertConfirm(false)\r\n    if (setSameCountryAlert) setSameCountryAlert(false)\r\n  })",[7059,7103],"[getProductsList, bookingOrder, productData, forceUpdate, product, ex]",[5577,5591],[5735,5758],[3421,3431],"[getUserRole, history, loggedIn, loggedInUser.uid, userRole]",[1219,1221],"[getUserProfile, loggedInUser]",[2873,2898],"[orderDataError, history, setIsVignetteShown]",[2939,4241],"useCallback((id) => {\r\n    var itemOriginQuantity;\r\n    // console.log('getProductOriginQuantity : orderData', orderData)\r\n    // console.log('getProductOriginQuantity : orderDataError', orderDataError)\r\n    // console.log('getProductOriginQuantity : addToCart'+[id], addToCart[id])\r\n    // orderDataError !== 'error' && orderData.length > 0 && orderData.some((order) => {\r\n    orderData.length > 0 &&\r\n      orderData.some((order) => {\r\n        // console.log('getProductOriginQuantity : order', order)\r\n        if (order.productId === id) {\r\n          // console.log('getProductOriginQuantity : id', id)\r\n          itemOriginQuantity = order.quantity;\r\n          // setItemOriginQuantity(order.quantity)\r\n          setIsVignetteShown(true);\r\n          // quantity['productId-'+productId] = parseInt(order.quantity);\r\n          // setQuantity({ ...quantity });\r\n          // console.log('getProductOriginQuantity : order.productId', order.productId)\r\n          // console.log('getProductOriginQuantity : productId', productId)\r\n          // console.log('getProductOriginQuantity : order.quantity', order.quantity)\r\n          return true;\r\n        } else {\r\n          itemOriginQuantity = 0;\r\n          // setItemOriginQuantity(0)\r\n          return false;\r\n        }\r\n      });\r\n    return itemOriginQuantity;\r\n  })",[5784,5825],"[orderData, addToCart, containerQuantity, productId, setIsVignetteShown]",[1851,1865],"[column.key, defaultValue, dispatch, rowKeyValue]",[4707,4718],"[isChecked, props]",[4954,4969],"[props, props.orderId]",[6017,6030],"[containersData, orderData, productData]",[2125,2127],"[props]",[3059,3239],"[savedDepots, savedAssignedDepots, selected, countries, count, options, gridData, countriesNames, arrayOfDepotsPerCountryUpdated, selected1]",[13657,13718],"[savedDepots, countriesNames, arrayOfDepotsPerCountryUpdated, selected1]",[14246,14270],"[selected1, props.location.state.agentUid, history]",[2030,2188],"[selected, word, savedAssignedDepots, savedDepots, data, country, count, selected1, options, arr]",[3410,3435],"[selected, selected1, setSelected1]",[5156,5158],"[savedAssignedDepots, selected, setSavedAssignedDepots, setSelected]",[7418,7667],"[data, setData, arr, country, savedDepots]",[10262,10319],"[handleClickEditRow, unAssignDepotsToAgent]",[13024,13081],"[selected, word, savedAssignedDepots, country, selected1, data, savedDepots, arr, count, setData, setSelected1]"]